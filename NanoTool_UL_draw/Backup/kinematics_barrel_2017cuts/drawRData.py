import ROOT
from ROOT import *
import os
from array import array
import math
from math import *
import sys
import glob
import csv
import ctypes
from ctypes import *
import XRootD
from pyxrootd import client
import numpy as np

#from future import division
def FindAndSetMax(*args):
        if len(args) == 1: args = args[0]
        maximum = 0.0
        for i in args:
                i.SetStats(0)
                t = i.GetMaximum()
                if t > maximum:
                        maximum = t
        for j in args:
                j.GetYaxis().SetRangeUser(1,maximum*1.35)#should be 1.35 (below as well)
                j.SetLineWidth(2)
        return maximum*1.35

def GoodPlotFormat(H, *args): # Handy little script for color/line/fill/point/etc...
        try: H.SetStats(0)
        except: print " ------------ [  No stats box found!  ]"
        if args[0] == 'thickline':
                H.SetLineColor(args[1])
                H.SetLineWidth(2)
        if args[0] == 'thinline':
                H.SetLineColor(args[1])
                H.SetLineWidth(1)
                H.SetLineStyle(args[2])
        if args[0] == 'fill':
                H.SetLineColor(args[1])
                #H.SetFillColorAlpha(args[1], 1.0)
                H.SetFillColor(args[1])
                H.SetFillStyle(args[2])
        if args[0] == 'markers':
                H.SetLineColor(args[1])
                H.SetMarkerColor(args[1])
                H.SetMarkerStyle(args[2])
                H.SetMarkerSize(1.1)
        H.GetXaxis().SetTitleSize(0.04)

        if args[0] == 'dashed':
                H.SetLineColor(args[1])
                H.SetLineWidth(1)
                H.SetLineStyle(7)
def convertAsymGraph(TG, template, name):
        Hist = template.Clone(name)
        for i in range(1,Hist.GetNbinsX()+1):
                Hist.SetBinContent(i,0.)

#       print("Number of points: "+str(TG.GetN()))

        for i in range(TG.GetN()):
        #       Hist.SetBinContent(i+1,TG.GetY()[i]*(TG.GetErrorXlow(i)+TG.GetErrorXhigh(i)))
                Hist.SetBinContent(i+1,TG.GetY()[i])
#               print("Y= "+str(TG.GetY()[i]))
#               print("error xlow + error xhigh = "+str(TG.GetErrorXlow(i)+TG.GetErrorXhigh(i)))
                Hist.SetBinError(i+1, TG.GetErrorY(i))
        return Hist

def convertBinNHist(H, template, name):
        Hist = template.Clone(name)
        for i in range(1,Hist.GetNbinsX()+1):
                Hist.SetBinContent(i,H.GetBinContent(i))
                Hist.SetBinError(i,H.GetBinError(i))
        return Hist

def MakeNBinsFromMinToMax(N,Min,Max): # helper for making large bin arrays makes N bins between Min and Max (same as you're feed to a TH1F)
        BINS = []
        for i in range(N+1):
                BINS.append(Min+(i*(Max-Min)/N))
        return BINS

def DBBW(H):
        for i in range(1,H.GetNbinsX()+1):
                C = H.GetBinContent(i)
                E = H.GetBinError(i)
                W = H.GetBinWidth(i)
                H.SetBinContent(i, C/W)
                H.SetBinError(i, E/W)
        return H
def AddCMSLumi(pad, fb, extra):
        cmsText     = "CMS " + extra
        cmsTextFont   = 61
        lumiTextSize     = 0.45
        lumiTextOffset   = 0.15
        cmsTextSize      = 0.5
        cmsTextOffset    = 0.15
        H = pad.GetWh()
        W = pad.GetWw()
        l = pad.GetLeftMargin()
        t = pad.GetTopMargin()
        r = pad.GetRightMargin()
        b = pad.GetBottomMargin()
        e = 0.025
        pad.cd()
        lumiText = str(fb)+" fb^{-1} (13 TeV)"
        latex = TLatex()
        latex.SetNDC()
        latex.SetTextAngle(0)
        latex.SetTextColor(kBlack)
        extraTextSize = 0.76*cmsTextSize
        latex.SetTextFont(42)
        latex.SetTextAlign(31)
        latex.SetTextSize(lumiTextSize*t)
        latex.DrawLatex(1-r,1-t+lumiTextOffset*t,lumiText)
        pad.cd()
        latex.SetTextFont(cmsTextFont)
        latex.SetTextSize(cmsTextSize*t)
        latex.SetTextAlign(11)
        latex.DrawLatex(0.1265, 1-t+lumiTextOffset*t, cmsText)
        pad.Update()

def makePull(data, bkg):
	pull = data.Clone("pull")
	pull.Divide(bkg)
	GoodPlotFormat(pull, "markers", ROOT.kBlack, 20)
	return pull

def makeCheap(data):
	cheapline = data.Clone("cheapline")
	cheapline.Divide(data)
	for i in range(1, cheapline.GetNbinsX()+1):
		cheapline.SetBinContent(i,1)
	cheapline.SetTitle("")
	cheapline.GetYaxis().SetTitle("Data/Total Background")
	cheapline.GetYaxis().SetTitleSize(0.08)
	cheapline.GetYaxis().SetNdivisions(6)
	cheapline.GetYaxis().SetLabelSize(0.145)
	cheapline.GetYaxis().SetTitleOffset(0.33)
	cheapline.GetYaxis().CenterTitle(True)
	cheapline.GetYaxis().SetRangeUser(0.,3.)
	GoodPlotFormat(cheapline, "thinline", ROOT.kGray, 4)
	cheapline.GetXaxis().SetTitleSize(0.1)
	cheapline.GetXaxis().SetLabelSize(0.16)
	cheapline.GetXaxis().SetTitleOffset(1.2)
	return cheapline
	

class drawRData:
	def __init__(self, name, ifile1, ifile2, ifile3, ifile4, ifile5, ifile6, ifile7, ifile8, ifile9, ifile10, o):
		gROOT.SetBatch(True)

		ofile = ROOT.TFile("/home/akobert/CMSSW_11_1_0_pre7/src/RData/NanoTool_UL_draw/kinematics_barrel_2017cuts/"+o,"RECREATE")
		
		self.c = TFile.Open(ifile1, "READ")
		self.c.ls();

		self.h1_sig10 = self.c.Get("softdrop")
		self.h2_sig10 = self.c.Get("jet_pt")
		self.h2_1_sig10 = self.c.Get("thin_jet_pt")
		self.h3_sig10 = self.c.Get("jet_eta")
		self.h4_sig10 = self.c.Get("photon_pt")
		self.h5_sig10 = self.c.Get("rho")
		self.h6_sig10 = self.c.Get("N2")
		self.h7_sig10 = self.c.Get("n2ddt")
		
		self.h8_sig10 = self.c.Get("PuppiMETPT")
		self.h9_sig10 = self.c.Get("ak4_btag")
		
		self.h10_sig10 = self.c.Get("photon_eta")
#		self.h11_sig10 = self.c.Get("tau32")
		self.h12_sig10 = self.c.Get("HT")
		self.h13_sig10 = self.c.Get("HT_AK8")
		
#		self.h1_sig10_presel = self.c.Get("softdrop_presel")
#		self.h2_sig10_presel = self.c.Get("jet_pt_presel")
#		self.h2_1_sig10_presel = self.c.Get("thin_jet_pt_presel")
#		self.h3_sig10_presel = self.c.Get("jet_eta_presel")
#		self.h4_sig10_presel = self.c.Get("photon_pt_presel")
#		self.h5_sig10_presel = self.c.Get("rho_presel")
#		self.h6_sig10_presel = self.c.Get("N2_presel")
#		self.h10_sig10_presel = self.c.Get("photon_eta_presel")
		

		self.p1_sig10 = self.c.Get("pass_soft")
		self.p1_1_sig10 = self.c.Get("pass_soft_thin")
		self.p2_sig10 = self.c.Get("pass_jet_pt")
		self.p3_sig10 = self.c.Get("pass_jet_eta")
		self.p4_sig10 = self.c.Get("pass_photon_pt")
		self.p5_sig10 = self.c.Get("pass_rho")
		self.p10_sig10 = self.c.Get("pass_photon_eta")
		
		self.f1_sig10 = self.c.Get("fail_soft")
		self.f1_1_sig10 = self.c.Get("fail_soft_thin")
		self.f2_sig10 = self.c.Get("fail_jet_pt")
		self.f3_sig10 = self.c.Get("fail_jet_eta")
		self.f4_sig10 = self.c.Get("fail_photon_pt")
		self.f5_sig10 = self.c.Get("fail_rho")
		self.f10_sig10 = self.c.Get("fail_photon_eta")

		GoodPlotFormat(self.h1_sig10, 'thickline', 7)
		GoodPlotFormat(self.h2_sig10, 'thickline', 7)
		GoodPlotFormat(self.h2_1_sig10, 'thickline', 7)
		GoodPlotFormat(self.h3_sig10, 'thickline', 7)
		GoodPlotFormat(self.h4_sig10, 'thickline', 7)
		GoodPlotFormat(self.h5_sig10, 'thickline', 7)
		GoodPlotFormat(self.h6_sig10, 'thickline', 7)
		GoodPlotFormat(self.h7_sig10, 'thickline', 7)
		GoodPlotFormat(self.h8_sig10, 'thickline', 7)
		GoodPlotFormat(self.h9_sig10, 'thickline', 7)
		GoodPlotFormat(self.h10_sig10, 'thickline', 7)
#		GoodPlotFormat(self.h11_sig10, 'thickline', 7)
		GoodPlotFormat(self.h12_sig10, 'thickline', 7)
		GoodPlotFormat(self.h13_sig10, 'thickline', 7)
		
#		GoodPlotFormat(self.h1_sig10_presel, 'thickline', 7)
#		GoodPlotFormat(self.h2_sig10_presel, 'thickline', 7)
#		GoodPlotFormat(self.h2_1_sig10_presel, 'thickline', 7)
#		GoodPlotFormat(self.h3_sig10_presel, 'thickline', 7)
#		GoodPlotFormat(self.h4_sig10_presel, 'thickline', 7)
#		GoodPlotFormat(self.h5_sig10_presel, 'thickline', 7)
#		GoodPlotFormat(self.h6_sig10_presel, 'thickline', 7)
#		GoodPlotFormat(self.h10_sig10_presel, 'thickline', 7)
		
		GoodPlotFormat(self.p1_sig10, 'thickline', 7)
		GoodPlotFormat(self.p1_1_sig10, 'thickline', 7)
		GoodPlotFormat(self.p2_sig10, 'thickline', 7)
		GoodPlotFormat(self.p3_sig10, 'thickline', 7)
		GoodPlotFormat(self.p4_sig10, 'thickline', 7)
		GoodPlotFormat(self.p5_sig10, 'thickline', 7)
		GoodPlotFormat(self.p10_sig10, 'thickline', 7)
		
		GoodPlotFormat(self.f1_sig10, 'thickline', 7)
		GoodPlotFormat(self.f1_1_sig10, 'thickline', 7)
		GoodPlotFormat(self.f2_sig10, 'thickline', 7)
		GoodPlotFormat(self.f3_sig10, 'thickline', 7)
		GoodPlotFormat(self.f4_sig10, 'thickline', 7)
		GoodPlotFormat(self.f5_sig10, 'thickline', 7)
		GoodPlotFormat(self.f10_sig10, 'thickline', 7)

		self.d = TFile.Open(ifile2, "READ")
		self.d.ls();

		self.h1_sig25 = self.d.Get("softdrop")
		self.h2_sig25 = self.d.Get("jet_pt")
		self.h2_1_sig25 = self.d.Get("thin_jet_pt")
		self.h3_sig25 = self.d.Get("jet_eta")
		self.h4_sig25 = self.d.Get("photon_pt")
		self.h5_sig25 = self.d.Get("rho")
		self.h6_sig25 = self.d.Get("N2")
		self.h7_sig25 = self.d.Get("n2ddt")

		self.h8_sig25 = self.d.Get("PuppiMETPT")
		self.h9_sig25 = self.d.Get("ak4_btag")
		
		self.h10_sig25 = self.d.Get("photon_eta")
#		self.h11_sig25 = self.d.Get("tau32")
		self.h12_sig25 = self.d.Get("HT")
		self.h13_sig25 = self.d.Get("HT_AK8")
		
#		self.h1_sig25_presel = self.d.Get("softdrop_presel")
#		self.h2_sig25_presel = self.d.Get("jet_pt_presel")
#		self.h2_1_sig25_presel = self.d.Get("thin_jet_pt_presel")
#		self.h3_sig25_presel = self.d.Get("jet_eta_presel")
#		self.h4_sig25_presel = self.d.Get("photon_pt_presel")
#		self.h5_sig25_presel = self.d.Get("rho_presel")
#		self.h6_sig25_presel = self.d.Get("N2_presel")
#		self.h10_sig25_presel = self.d.Get("photon_eta_presel")

		self.p1_sig25 = self.d.Get("pass_soft")
		self.p1_1_sig25 = self.d.Get("pass_soft_thin")
		self.p2_sig25 = self.d.Get("pass_jet_pt")
		self.p3_sig25 = self.d.Get("pass_jet_eta")
		self.p4_sig25 = self.d.Get("pass_photon_pt")
		self.p5_sig25 = self.d.Get("pass_rho")
		self.p10_sig25 = self.d.Get("pass_photon_eta")
		
		self.f1_sig25 = self.d.Get("fail_soft")
		self.f1_1_sig25 = self.d.Get("fail_soft_thin")
		self.f2_sig25 = self.d.Get("fail_jet_pt")
		self.f3_sig25 = self.d.Get("fail_jet_eta")
		self.f4_sig25 = self.d.Get("fail_photon_pt")
		self.f5_sig25 = self.d.Get("fail_rho")
		self.f10_sig25 = self.d.Get("fail_photon_eta")

		GoodPlotFormat(self.h1_sig25, 'thickline', 3)
		GoodPlotFormat(self.h2_sig25, 'thickline', 3)
		GoodPlotFormat(self.h2_1_sig25, 'thickline', 3)
		GoodPlotFormat(self.h3_sig25, 'thickline', 3)
		GoodPlotFormat(self.h4_sig25, 'thickline', 3)
		GoodPlotFormat(self.h5_sig25, 'thickline', 3)
		GoodPlotFormat(self.h6_sig25, 'thickline', 3)
		GoodPlotFormat(self.h7_sig25, 'thickline', 3)
		GoodPlotFormat(self.h8_sig25, 'thickline', 3)
		GoodPlotFormat(self.h9_sig25, 'thickline', 3)
		GoodPlotFormat(self.h10_sig25, 'thickline', 3)
#		GoodPlotFormat(self.h11_sig25, 'thickline', 3)
		GoodPlotFormat(self.h12_sig25, 'thickline', 3)
		GoodPlotFormat(self.h13_sig25, 'thickline', 3)
		
#		GoodPlotFormat(self.h1_sig25_presel, 'thickline', 3)
#		GoodPlotFormat(self.h2_sig25_presel, 'thickline', 3)
#		GoodPlotFormat(self.h2_1_sig25_presel, 'thickline', 3)
#		GoodPlotFormat(self.h3_sig25_presel, 'thickline', 3)
#		GoodPlotFormat(self.h4_sig25_presel, 'thickline', 3)
#		GoodPlotFormat(self.h5_sig25_presel, 'thickline', 3)
#		GoodPlotFormat(self.h6_sig25_presel, 'thickline', 3)
#		GoodPlotFormat(self.h10_sig25_presel, 'thickline', 3)
		
		GoodPlotFormat(self.p1_sig25, 'thickline', 3)
		GoodPlotFormat(self.p1_1_sig25, 'thickline', 3)
		GoodPlotFormat(self.p2_sig25, 'thickline', 3)
		GoodPlotFormat(self.p3_sig25, 'thickline', 3)
		GoodPlotFormat(self.p4_sig25, 'thickline', 3)
		GoodPlotFormat(self.p5_sig25, 'thickline', 3)
		GoodPlotFormat(self.p10_sig25, 'thickline', 3)
		
		GoodPlotFormat(self.f1_sig25, 'thickline', 3)
		GoodPlotFormat(self.f1_1_sig25, 'thickline', 3)
		GoodPlotFormat(self.f2_sig25, 'thickline', 3)
		GoodPlotFormat(self.f3_sig25, 'thickline', 3)
		GoodPlotFormat(self.f4_sig25, 'thickline', 3)
		GoodPlotFormat(self.f5_sig25, 'thickline', 3)
		GoodPlotFormat(self.f10_sig25, 'thickline', 3)
		
		self.e = TFile.Open(ifile3, "READ")
		self.e.ls();

		self.h1_sig50 = self.e.Get("softdrop")
		self.h2_sig50 = self.e.Get("jet_pt")
		self.h2_1_sig50 = self.e.Get("thin_jet_pt")
		self.h3_sig50 = self.e.Get("jet_eta")
		self.h4_sig50 = self.e.Get("photon_pt")
		self.h5_sig50 = self.e.Get("rho")
		self.h6_sig50 = self.e.Get("N2")
		self.h7_sig50 = self.e.Get("n2ddt")

		self.h8_sig50 = self.e.Get("PuppiMETPT")
		self.h9_sig50 = self.e.Get("ak4_btag")
		
		self.h10_sig50 = self.e.Get("photon_eta")
#		self.h11_sig50 = self.e.Get("tau32")
		self.h12_sig50 = self.e.Get("HT")
		self.h13_sig50 = self.e.Get("HT_AK8")
		
#		self.h1_sig50_presel = self.e.Get("softdrop_presel")
#		self.h2_sig50_presel = self.e.Get("jet_pt_presel")
#		self.h2_1_sig50_presel = self.e.Get("thin_jet_pt_presel")
#		self.h3_sig50_presel = self.e.Get("jet_eta_presel")
#		self.h4_sig50_presel = self.e.Get("photon_pt_presel")
#		self.h5_sig50_presel = self.e.Get("rho_presel")
#		self.h6_sig50_presel = self.e.Get("N2_presel")
#		self.h10_sig50_presel = self.e.Get("photon_eta_presel")
		

		self.p1_sig50 = self.e.Get("pass_soft")
		self.p1_1_sig50 = self.e.Get("pass_soft_thin")
		self.p2_sig50 = self.e.Get("pass_jet_pt")
		self.p3_sig50 = self.e.Get("pass_jet_eta")
		self.p4_sig50 = self.e.Get("pass_photon_pt")
		self.p5_sig50 = self.e.Get("pass_rho")
		self.p10_sig50 = self.e.Get("pass_photon_eta")
		
		self.f1_sig50 = self.e.Get("fail_soft")
		self.f1_1_sig50 = self.e.Get("fail_soft_thin")
		self.f2_sig50 = self.e.Get("fail_jet_pt")
		self.f3_sig50 = self.e.Get("fail_jet_eta")
		self.f4_sig50 = self.e.Get("fail_photon_pt")
		self.f5_sig50 = self.e.Get("fail_rho")
		self.f10_sig50 = self.e.Get("fail_photon_eta")

		
		GoodPlotFormat(self.h1_sig50, 'thickline', 2)
		GoodPlotFormat(self.h2_sig50, 'thickline', 2)
		GoodPlotFormat(self.h2_1_sig50, 'thickline', 2)
		GoodPlotFormat(self.h3_sig50, 'thickline', 2)
		GoodPlotFormat(self.h4_sig50, 'thickline', 2)
		GoodPlotFormat(self.h5_sig50, 'thickline', 2)
		GoodPlotFormat(self.h6_sig50, 'thickline', 2)
		GoodPlotFormat(self.h7_sig50, 'thickline', 2)
		GoodPlotFormat(self.h8_sig50, 'thickline', 2)
		GoodPlotFormat(self.h9_sig50, 'thickline', 2)
		GoodPlotFormat(self.h10_sig50, 'thickline', 2)
#		GoodPlotFormat(self.h11_sig50, 'thickline', 2)
		GoodPlotFormat(self.h12_sig50, 'thickline', 2)
		GoodPlotFormat(self.h13_sig50, 'thickline', 2)
		
#		GoodPlotFormat(self.h1_sig50_presel, 'thickline', 2)
#		GoodPlotFormat(self.h2_sig50_presel, 'thickline', 2)
#		GoodPlotFormat(self.h2_1_sig50_presel, 'thickline', 2)
#		GoodPlotFormat(self.h3_sig50_presel, 'thickline', 2)
#		GoodPlotFormat(self.h4_sig50_presel, 'thickline', 2)
#		GoodPlotFormat(self.h5_sig50_presel, 'thickline', 2)
#		GoodPlotFormat(self.h6_sig50_presel, 'thickline', 2)
#		GoodPlotFormat(self.h10_sig50_presel, 'thickline', 2)
		
		GoodPlotFormat(self.p1_sig50, 'thickline', 2)
		GoodPlotFormat(self.p1_1_sig50, 'thickline', 2)
		GoodPlotFormat(self.p2_sig50, 'thickline', 2)
		GoodPlotFormat(self.p3_sig50, 'thickline', 2)
		GoodPlotFormat(self.p4_sig50, 'thickline', 2)
		GoodPlotFormat(self.p5_sig50, 'thickline', 2)
		GoodPlotFormat(self.p10_sig50, 'thickline', 2)
		
		GoodPlotFormat(self.f1_sig50, 'thickline', 2)
		GoodPlotFormat(self.f1_1_sig50, 'thickline', 2)
		GoodPlotFormat(self.f2_sig50, 'thickline', 2)
		GoodPlotFormat(self.f3_sig50, 'thickline', 2)
		GoodPlotFormat(self.f4_sig50, 'thickline', 2)
		GoodPlotFormat(self.f5_sig50, 'thickline', 2)
		GoodPlotFormat(self.f10_sig50, 'thickline', 2)
		
		self.f = TFile.Open(ifile4, "READ")
		self.f.ls();

		self.h1_sig75 = self.f.Get("softdrop")
		self.h2_sig75 = self.f.Get("jet_pt")
		self.h2_1_sig75 = self.f.Get("thin_jet_pt")
		self.h3_sig75 = self.f.Get("jet_eta")
		self.h4_sig75 = self.f.Get("photon_pt")
		self.h5_sig75 = self.f.Get("rho")
		self.h6_sig75 = self.f.Get("N2")
		self.h7_sig75 = self.f.Get("n2ddt")

		self.h8_sig75 = self.f.Get("PuppiMETPT")
		self.h9_sig75 = self.f.Get("ak4_btag")
		
		self.h10_sig75 = self.f.Get("photon_eta")
#		self.h11_sig75 = self.f.Get("tau32")
		self.h12_sig75 = self.f.Get("HT")
		self.h13_sig75 = self.f.Get("HT_AK8")
		
#		self.h1_sig75_presel = self.f.Get("softdrop_presel")
#		self.h2_sig75_presel = self.f.Get("jet_pt_presel")
#		self.h2_1_sig75_presel = self.f.Get("thin_jet_pt_presel")
#		self.h3_sig75_presel = self.f.Get("jet_eta_presel")
#		self.h4_sig75_presel = self.f.Get("photon_pt_presel")
#		self.h5_sig75_presel = self.f.Get("rho_presel")
#		self.h6_sig75_presel = self.f.Get("N2_presel")
#		self.h10_sig75_presel = self.f.Get("photon_eta_presel")

		self.p1_sig75 = self.f.Get("pass_soft")
		self.p1_1_sig75 = self.f.Get("pass_soft_thin")
		self.p2_sig75 = self.f.Get("pass_jet_pt")
		self.p3_sig75 = self.f.Get("pass_jet_eta")
		self.p4_sig75 = self.f.Get("pass_photon_pt")
		self.p5_sig75 = self.f.Get("pass_rho")
		self.p10_sig75 = self.f.Get("pass_photon_eta")
		
		self.f1_sig75 = self.f.Get("fail_soft")
		self.f1_1_sig75 = self.f.Get("fail_soft_thin")
		self.f2_sig75 = self.f.Get("fail_jet_pt")
		self.f3_sig75 = self.f.Get("fail_jet_eta")
		self.f4_sig75 = self.f.Get("fail_photon_pt")
		self.f5_sig75 = self.f.Get("fail_rho")
		self.f10_sig75 = self.f.Get("fail_photon_eta")

		
		GoodPlotFormat(self.h1_sig75, 'thickline', kMagenta)
		GoodPlotFormat(self.h2_sig75, 'thickline', kMagenta)
		GoodPlotFormat(self.h2_1_sig75, 'thickline', kMagenta)
		GoodPlotFormat(self.h3_sig75, 'thickline', kMagenta)
		GoodPlotFormat(self.h4_sig75, 'thickline', kMagenta)
		GoodPlotFormat(self.h5_sig75, 'thickline', kMagenta)
		GoodPlotFormat(self.h6_sig75, 'thickline', kMagenta)
		GoodPlotFormat(self.h7_sig75, 'thickline', kMagenta)
		GoodPlotFormat(self.h8_sig75, 'thickline', kMagenta)
		GoodPlotFormat(self.h9_sig75, 'thickline', kMagenta)
		GoodPlotFormat(self.h10_sig75, 'thickline', kMagenta)
#		GoodPlotFormat(self.h11_sig75, 'thickline', kMagenta)
		GoodPlotFormat(self.h12_sig75, 'thickline', kMagenta)
		GoodPlotFormat(self.h13_sig75, 'thickline', kMagenta)
		
#		GoodPlotFormat(self.h1_sig75_presel, 'thickline', kMagenta)
#		GoodPlotFormat(self.h2_sig75_presel, 'thickline', kMagenta)
#		GoodPlotFormat(self.h2_1_sig75_presel, 'thickline', kMagenta)
#		GoodPlotFormat(self.h3_sig75_presel, 'thickline', kMagenta)
#		GoodPlotFormat(self.h4_sig75_presel, 'thickline', kMagenta)
#		GoodPlotFormat(self.h5_sig75_presel, 'thickline', kMagenta)
#		GoodPlotFormat(self.h6_sig75_presel, 'thickline', kMagenta)
#		GoodPlotFormat(self.h10_sig75_presel, 'thickline', kMagenta)
		
		GoodPlotFormat(self.p1_sig75, 'thickline', kMagenta)
		GoodPlotFormat(self.p1_1_sig75, 'thickline', kMagenta)
		GoodPlotFormat(self.p2_sig75, 'thickline', kMagenta)
		GoodPlotFormat(self.p3_sig75, 'thickline', kMagenta)
		GoodPlotFormat(self.p4_sig75, 'thickline', kMagenta)
		GoodPlotFormat(self.p5_sig75, 'thickline', kMagenta)
		GoodPlotFormat(self.p10_sig75, 'thickline', kMagenta)
		
		GoodPlotFormat(self.f1_sig75, 'thickline', kMagenta)
		GoodPlotFormat(self.f1_1_sig75, 'thickline', kMagenta)
		GoodPlotFormat(self.f2_sig75, 'thickline', kMagenta)
		GoodPlotFormat(self.f3_sig75, 'thickline', kMagenta)
		GoodPlotFormat(self.f4_sig75, 'thickline', kMagenta)
		GoodPlotFormat(self.f5_sig75, 'thickline', kMagenta)
		GoodPlotFormat(self.f10_sig75, 'thickline', kMagenta)

		self.g = TFile.Open(ifile5, "READ")
		self.g.ls();

		self.h1_WG = self.g.Get("softdrop")
		self.h2_WG = self.g.Get("jet_pt")
		self.h2_1_WG = self.g.Get("thin_jet_pt")
		self.h3_WG = self.g.Get("jet_eta")
		self.h4_WG = self.g.Get("photon_pt")
		self.h5_WG = self.g.Get("rho")
		self.h6_WG = self.g.Get("N2")
		self.h7_WG = self.g.Get("n2ddt")

		self.h8_WG = self.g.Get("PuppiMETPT")
		self.h9_WG = self.g.Get("ak4_btag")
		
		self.h10_WG = self.g.Get("photon_eta")
#		self.h11_WG = self.g.Get("tau32")
		self.h12_WG = self.g.Get("HT")
		self.h13_WG = self.g.Get("HT_AK8")
		
#		self.h1_WG_presel = self.g.Get("softdrop_presel")
#		self.h2_WG_presel = self.g.Get("jet_pt_presel")
#		self.h2_1_WG_presel = self.g.Get("thin_jet_pt_presel")
#		self.h3_WG_presel = self.g.Get("jet_eta_presel")
#		self.h4_WG_presel = self.g.Get("photon_pt_presel")
#		self.h5_WG_presel = self.g.Get("rho_presel")
#		self.h6_WG_presel = self.g.Get("N2_presel")
#		self.h10_WG_presel = self.g.Get("photon_eta_presel")

		self.p1_WG = self.g.Get("pass_soft")
		self.p1_1_WG = self.g.Get("pass_soft_thin")
		self.p2_WG = self.g.Get("pass_jet_pt")
		self.p3_WG = self.g.Get("pass_jet_eta")
		self.p4_WG = self.g.Get("pass_photon_pt")
		self.p5_WG = self.g.Get("pass_rho")
		self.p10_WG = self.g.Get("pass_photon_eta")
		
		self.f1_WG = self.g.Get("fail_soft")
		self.f1_1_WG = self.g.Get("fail_soft_thin")
		self.f2_WG = self.g.Get("fail_jet_pt")
		self.f3_WG = self.g.Get("fail_jet_eta")
		self.f4_WG = self.g.Get("fail_photon_pt")
		self.f5_WG = self.g.Get("fail_rho")
		self.f10_WG = self.g.Get("fail_photon_eta")
		
		
		GoodPlotFormat(self.h1_WG, 'fill', 5, 1001)
		GoodPlotFormat(self.h2_WG, 'fill', 5, 1001)
		GoodPlotFormat(self.h2_1_WG, 'fill', 5, 1001)
		GoodPlotFormat(self.h3_WG, 'fill', 5, 1001)
		GoodPlotFormat(self.h4_WG, 'fill', 5, 1001)
		GoodPlotFormat(self.h5_WG, 'fill', 5, 1001)
		GoodPlotFormat(self.h6_WG, 'fill', 5, 1001)
		GoodPlotFormat(self.h7_WG, 'fill', 5, 1001)
		GoodPlotFormat(self.h8_WG, 'fill', 5, 1001)
		GoodPlotFormat(self.h9_WG, 'fill', 5, 1001)
		GoodPlotFormat(self.h10_WG, 'fill', 5, 1001)
#		GoodPlotFormat(self.h11_WG, 'fill', 5, 1001)
		GoodPlotFormat(self.h12_WG, 'fill', 5, 1001)
		GoodPlotFormat(self.h13_WG, 'fill', 5, 1001)
		
#		GoodPlotFormat(self.h1_WG_presel, 'fill', 5, 1001)
#		GoodPlotFormat(self.h2_WG_presel, 'fill', 5, 1001)
#		GoodPlotFormat(self.h2_1_WG_presel, 'fill', 5, 1001)
#		GoodPlotFormat(self.h3_WG_presel, 'fill', 5, 1001)
#		GoodPlotFormat(self.h4_WG_presel, 'fill', 5, 1001)
#		GoodPlotFormat(self.h5_WG_presel, 'fill', 5, 1001)
#		GoodPlotFormat(self.h6_WG_presel, 'fill', 5, 1001)
#		GoodPlotFormat(self.h10_WG_presel, 'fill', 5, 1001)
		
		GoodPlotFormat(self.p1_WG, 'fill', 5, 1001)
		GoodPlotFormat(self.p1_1_WG, 'fill', 5, 1001)
		GoodPlotFormat(self.p2_WG, 'fill', 5, 1001)
		GoodPlotFormat(self.p3_WG, 'fill', 5, 1001)
		GoodPlotFormat(self.p4_WG, 'fill', 5, 1001)
		GoodPlotFormat(self.p5_WG, 'fill', 5, 1001)
		GoodPlotFormat(self.p10_WG, 'fill', 5, 1001)
		
		GoodPlotFormat(self.f1_WG, 'fill', 5, 1001)
		GoodPlotFormat(self.f1_1_WG, 'fill', 5, 1001)
		GoodPlotFormat(self.f2_WG, 'fill', 5, 1001)
		GoodPlotFormat(self.f3_WG, 'fill', 5, 1001)
		GoodPlotFormat(self.f4_WG, 'fill', 5, 1001)
		GoodPlotFormat(self.f5_WG, 'fill', 5, 1001)
		GoodPlotFormat(self.f10_WG, 'fill', 5, 1001)
		
		self.h = TFile.Open(ifile6, "READ")
		self.h.ls();

		self.h1_ZG = self.h.Get("softdrop")
		self.h2_ZG = self.h.Get("jet_pt")
		self.h2_1_ZG = self.h.Get("thin_jet_pt")
		self.h3_ZG = self.h.Get("jet_eta")
		self.h4_ZG = self.h.Get("photon_pt")
		self.h5_ZG = self.h.Get("rho")
		self.h6_ZG = self.h.Get("N2")
		self.h7_ZG = self.h.Get("n2ddt")

		self.h8_ZG = self.h.Get("PuppiMETPT")
		self.h9_ZG = self.h.Get("ak4_btag")
		
		self.h10_ZG = self.h.Get("photon_eta")
#		self.h11_ZG = self.h.Get("tau32")
		self.h12_ZG = self.h.Get("HT")
		self.h13_ZG = self.h.Get("HT_AK8")
		
#		self.h1_ZG_presel = self.h.Get("softdrop_presel")
#		self.h2_ZG_presel = self.h.Get("jet_pt_presel")
#		self.h2_1_ZG_presel = self.h.Get("thin_jet_pt_presel")
#		self.h3_ZG_presel = self.h.Get("jet_eta_presel")
#		self.h4_ZG_presel = self.h.Get("photon_pt_presel")
#		self.h5_ZG_presel = self.h.Get("rho_presel")
#		self.h6_ZG_presel = self.h.Get("N2_presel")
#		self.h10_ZG_presel = self.h.Get("photon_eta_presel")

		self.p1_ZG = self.h.Get("pass_soft")
		self.p1_1_ZG = self.h.Get("pass_soft_thin")
		self.p2_ZG = self.h.Get("pass_jet_pt")
		self.p3_ZG = self.h.Get("pass_jet_eta")
		self.p4_ZG = self.h.Get("pass_photon_pt")
		self.p5_ZG = self.h.Get("pass_rho")
		self.p10_ZG = self.h.Get("pass_photon_eta")
		
		self.f1_ZG = self.h.Get("fail_soft")
		self.f1_1_ZG = self.h.Get("fail_soft_thin")
		self.f2_ZG = self.h.Get("fail_jet_pt")
		self.f3_ZG = self.h.Get("fail_jet_eta")
		self.f4_ZG = self.h.Get("fail_photon_pt")
		self.f5_ZG = self.h.Get("fail_rho")
		self.f10_ZG = self.h.Get("fail_photon_eta")
		
		
		GoodPlotFormat(self.h1_ZG, 'fill', 39, 1001)
		GoodPlotFormat(self.h2_ZG, 'fill', 39, 1001)
		GoodPlotFormat(self.h2_1_ZG, 'fill', 39, 1001)
		GoodPlotFormat(self.h3_ZG, 'fill', 39, 1001)
		GoodPlotFormat(self.h4_ZG, 'fill', 39, 1001)
		GoodPlotFormat(self.h5_ZG, 'fill', 39, 1001)
		GoodPlotFormat(self.h6_ZG, 'fill', 39, 1001)
		GoodPlotFormat(self.h7_ZG, 'fill', 39, 1001)
		GoodPlotFormat(self.h8_ZG, 'fill', 39, 1001)
		GoodPlotFormat(self.h9_ZG, 'fill', 39, 1001)
		GoodPlotFormat(self.h10_ZG, 'fill', 39, 1001)
#		GoodPlotFormat(self.h11_ZG, 'fill', 39, 1001)
		GoodPlotFormat(self.h12_ZG, 'fill', 39, 1001)
		GoodPlotFormat(self.h13_ZG, 'fill', 39, 1001)
		
#		GoodPlotFormat(self.h1_ZG_presel, 'fill', 39, 1001)
#		GoodPlotFormat(self.h2_ZG_presel, 'fill', 39, 1001)
#		GoodPlotFormat(self.h2_1_ZG_presel, 'fill', 39, 1001)
#		GoodPlotFormat(self.h3_ZG_presel, 'fill', 39, 1001)
#		GoodPlotFormat(self.h4_ZG_presel, 'fill', 39, 1001)
#		GoodPlotFormat(self.h5_ZG_presel, 'fill', 39, 1001)
#		GoodPlotFormat(self.h6_ZG_presel, 'fill', 39, 1001)
#		GoodPlotFormat(self.h10_ZG_presel, 'fill', 39, 1001)
		
		GoodPlotFormat(self.p1_ZG, 'fill', 39, 1001)
		GoodPlotFormat(self.p1_1_ZG, 'fill', 39, 1001)
		GoodPlotFormat(self.p2_ZG, 'fill', 39, 1001)
		GoodPlotFormat(self.p3_ZG, 'fill', 39, 1001)
		GoodPlotFormat(self.p4_ZG, 'fill', 39, 1001)
		GoodPlotFormat(self.p5_ZG, 'fill', 39, 1001)
		GoodPlotFormat(self.p10_ZG, 'fill', 39, 1001)
		
		GoodPlotFormat(self.f1_ZG, 'fill', 39, 1001)
		GoodPlotFormat(self.f1_1_ZG, 'fill', 39, 1001)
		GoodPlotFormat(self.f2_ZG, 'fill', 39, 1001)
		GoodPlotFormat(self.f3_ZG, 'fill', 39, 1001)
		GoodPlotFormat(self.f4_ZG, 'fill', 39, 1001)
		GoodPlotFormat(self.f5_ZG, 'fill', 39, 1001)
		GoodPlotFormat(self.f10_ZG, 'fill', 39, 1001)
		
		self.i = TFile.Open(ifile7, "READ")
		self.i.ls();

		self.h1_GJ = self.i.Get("softdrop")
		self.h2_GJ = self.i.Get("jet_pt")
		self.h2_1_GJ = self.i.Get("thin_jet_pt")
		self.h3_GJ = self.i.Get("jet_eta")
		self.h4_GJ = self.i.Get("photon_pt")
		self.h5_GJ = self.i.Get("rho")
		self.h6_GJ = self.i.Get("N2")
		self.h7_GJ = self.i.Get("n2ddt")

		self.h8_GJ = self.i.Get("PuppiMETPT")
		self.h9_GJ = self.i.Get("ak4_btag")
		
		self.h10_GJ = self.i.Get("photon_eta")
#		self.h11_GJ = self.i.Get("tau32")
		self.h12_GJ = self.i.Get("HT")
		self.h13_GJ = self.i.Get("HT_AK8")
		
#		self.h1_GJ_presel = self.i.Get("softdrop_presel")
#		self.h2_GJ_presel = self.i.Get("jet_pt_presel")
#		self.h2_1_GJ_presel = self.i.Get("thin_jet_pt_presel")
#		self.h3_GJ_presel = self.i.Get("jet_eta_presel")
#		self.h4_GJ_presel = self.i.Get("photon_pt_presel")
#		self.h5_GJ_presel = self.i.Get("rho_presel")
#		self.h6_GJ_presel = self.i.Get("N2_presel")
#		self.h10_GJ_presel = self.i.Get("photon_eta_presel")

		self.p1_GJ = self.i.Get("pass_soft")
		self.p1_1_GJ = self.i.Get("pass_soft_thin")
		self.p2_GJ = self.i.Get("pass_jet_pt")
		self.p3_GJ = self.i.Get("pass_jet_eta")
		self.p4_GJ = self.i.Get("pass_photon_pt")
		self.p5_GJ = self.i.Get("pass_rho")
		self.p10_GJ = self.i.Get("pass_photon_eta")
		
		self.f1_GJ = self.i.Get("fail_soft")
		self.f1_1_GJ = self.i.Get("fail_soft_thin")
		self.f2_GJ = self.i.Get("fail_jet_pt")
		self.f3_GJ = self.i.Get("fail_jet_eta")
		self.f4_GJ = self.i.Get("fail_photon_pt")
		self.f5_GJ = self.i.Get("fail_rho")
		self.f10_GJ = self.i.Get("fail_photon_eta")
		
		
		GoodPlotFormat(self.h1_GJ, 'fill', 9, 3003)
		GoodPlotFormat(self.h2_GJ, 'fill', 9, 3003)
		GoodPlotFormat(self.h2_1_GJ, 'fill', 9, 3003)
		GoodPlotFormat(self.h3_GJ, 'fill', 9, 3003)
		GoodPlotFormat(self.h4_GJ, 'fill', 9, 3003)
		GoodPlotFormat(self.h5_GJ, 'fill', 9, 3003)
		GoodPlotFormat(self.h6_GJ, 'fill', 9, 3003)
		GoodPlotFormat(self.h7_GJ, 'fill', 9, 3003)
		GoodPlotFormat(self.h8_GJ, 'fill', 9, 3003)
		GoodPlotFormat(self.h9_GJ, 'fill', 9, 3003)
		GoodPlotFormat(self.h10_GJ, 'fill', 9, 3003)
#		GoodPlotFormat(self.h11_GJ, 'fill', 9, 3003)
		GoodPlotFormat(self.h12_GJ, 'fill', 9, 3003)
		GoodPlotFormat(self.h13_GJ, 'fill', 9, 3003)
		
#		GoodPlotFormat(self.h1_GJ_presel, 'fill', 9, 3003)
#		GoodPlotFormat(self.h2_GJ_presel, 'fill', 9, 3003)
#		GoodPlotFormat(self.h2_1_GJ_presel, 'fill', 9, 3003)
#		GoodPlotFormat(self.h3_GJ_presel, 'fill', 9, 3003)
#		GoodPlotFormat(self.h4_GJ_presel, 'fill', 9, 3003)
#		GoodPlotFormat(self.h5_GJ_presel, 'fill', 9, 3003)
#		GoodPlotFormat(self.h6_GJ_presel, 'fill', 9, 3003)
#		GoodPlotFormat(self.h10_GJ_presel, 'fill', 9, 3003)
		
		GoodPlotFormat(self.p1_GJ, 'fill', 9, 3003)
		GoodPlotFormat(self.p1_1_GJ, 'fill', 9, 3003)
		GoodPlotFormat(self.p2_GJ, 'fill', 9, 3003)
		GoodPlotFormat(self.p3_GJ, 'fill', 9, 3003)
		GoodPlotFormat(self.p4_GJ, 'fill', 9, 3003)
		GoodPlotFormat(self.p5_GJ, 'fill', 9, 3003)
		GoodPlotFormat(self.p10_GJ, 'fill', 9, 3003)
		
		GoodPlotFormat(self.f1_GJ, 'fill', 9, 3003)
		GoodPlotFormat(self.f1_1_GJ, 'fill', 9, 3003)
		GoodPlotFormat(self.f2_GJ, 'fill', 9, 3003)
		GoodPlotFormat(self.f3_GJ, 'fill', 9, 3003)
		GoodPlotFormat(self.f4_GJ, 'fill', 9, 3003)
		GoodPlotFormat(self.f5_GJ, 'fill', 9, 3003)
		GoodPlotFormat(self.f10_GJ, 'fill', 9, 3003)
		
		self.j = TFile.Open(ifile8, "READ")
		self.j.ls();

		self.h1_TT = self.j.Get("softdrop")
		self.h2_TT = self.j.Get("jet_pt")
		self.h2_1_TT = self.j.Get("thin_jet_pt")
		self.h3_TT = self.j.Get("jet_eta")
		self.h4_TT = self.j.Get("photon_pt")
		self.h5_TT = self.j.Get("rho")
		self.h6_TT = self.j.Get("N2")
		self.h7_TT = self.j.Get("n2ddt")

		self.h8_TT = self.j.Get("PuppiMETPT")
		self.h9_TT = self.j.Get("ak4_btag")
	
		self.h10_TT = self.j.Get("photon_eta")
#		self.h11_TT = self.j.Get("tau32")
		self.h12_TT = self.j.Get("HT")
		self.h13_TT = self.j.Get("HT_AK8")
		
#		self.h1_TT_presel = self.j.Get("softdrop_presel")
#		self.h2_TT_presel = self.j.Get("jet_pt_presel")
#		self.h2_1_TT_presel = self.j.Get("thin_jet_pt_presel")
#		self.h3_TT_presel = self.j.Get("jet_eta_presel")
#		self.h4_TT_presel = self.j.Get("photon_pt_presel")
#		self.h5_TT_presel = self.j.Get("rho_presel")
#		self.h6_TT_presel = self.j.Get("N2_presel")
#		self.h10_TT_presel = self.j.Get("photon_eta_presel")

		self.p1_TT = self.j.Get("pass_soft")
		self.p1_1_TT = self.j.Get("pass_soft_thin")
		self.p2_TT = self.j.Get("pass_jet_pt")
		self.p3_TT = self.j.Get("pass_jet_eta")
		self.p4_TT = self.j.Get("pass_photon_pt")
		self.p5_TT = self.j.Get("pass_rho")
		self.p10_TT = self.j.Get("pass_photon_eta")
		
		self.f1_TT = self.j.Get("fail_soft")
		self.f1_1_TT = self.j.Get("fail_soft_thin")
		self.f2_TT = self.j.Get("fail_jet_pt")
		self.f3_TT = self.j.Get("fail_jet_eta")
		self.f4_TT = self.j.Get("fail_photon_pt")
		self.f5_TT = self.j.Get("fail_rho")
		self.f10_TT = self.j.Get("fail_photon_eta")
		
		
		GoodPlotFormat(self.h1_TT, 'fill', 30, 1001)
		GoodPlotFormat(self.h2_TT, 'fill', 30, 1001)
		GoodPlotFormat(self.h2_1_TT, 'fill', 30, 1001)
		GoodPlotFormat(self.h3_TT, 'fill', 30, 1001)
		GoodPlotFormat(self.h4_TT, 'fill', 30, 1001)
		GoodPlotFormat(self.h5_TT, 'fill', 30, 1001)
		GoodPlotFormat(self.h6_TT, 'fill', 30, 1001)
		GoodPlotFormat(self.h7_TT, 'fill', 30, 1001)
		GoodPlotFormat(self.h8_TT, 'fill', 30, 1001)
		GoodPlotFormat(self.h9_TT, 'fill', 30, 1001)
		GoodPlotFormat(self.h10_TT, 'fill', 30, 1001)
#		GoodPlotFormat(self.h11_TT, 'fill', 30, 1001)
		GoodPlotFormat(self.h12_TT, 'fill', 30, 1001)
		GoodPlotFormat(self.h13_TT, 'fill', 30, 1001)
		
#		GoodPlotFormat(self.h1_TT_presel, 'fill', 30, 1001)
#		GoodPlotFormat(self.h2_TT_presel, 'fill', 30, 1001)
#		GoodPlotFormat(self.h2_1_TT_presel, 'fill', 30, 1001)
#		GoodPlotFormat(self.h3_TT_presel, 'fill', 30, 1001)
#		GoodPlotFormat(self.h4_TT_presel, 'fill', 30, 1001)
#		GoodPlotFormat(self.h5_TT_presel, 'fill', 30, 1001)
#		GoodPlotFormat(self.h6_TT_presel, 'fill', 30, 1001)
#		GoodPlotFormat(self.h10_TT_presel, 'fill', 30, 1001)
		
		GoodPlotFormat(self.p1_TT, 'fill', 30, 1001)
		GoodPlotFormat(self.p1_1_TT, 'fill', 30, 1001)
		GoodPlotFormat(self.p2_TT, 'fill', 30, 1001)
		GoodPlotFormat(self.p3_TT, 'fill', 30, 1001)
		GoodPlotFormat(self.p4_TT, 'fill', 30, 1001)
		GoodPlotFormat(self.p5_TT, 'fill', 30, 1001)
		GoodPlotFormat(self.p10_TT, 'fill', 30, 1001)
		
		GoodPlotFormat(self.f1_TT, 'fill', 30, 1001)
		GoodPlotFormat(self.f1_1_TT, 'fill', 30, 1001)
		GoodPlotFormat(self.f2_TT, 'fill', 30, 1001)
		GoodPlotFormat(self.f3_TT, 'fill', 30, 1001)
		GoodPlotFormat(self.f4_TT, 'fill', 30, 1001)
		GoodPlotFormat(self.f5_TT, 'fill', 30, 1001)
		GoodPlotFormat(self.f10_TT, 'fill', 30, 1001)
		
		self.k = TFile.Open(ifile9, "READ")
		self.k.ls();

		self.h1_Data = self.k.Get("softdrop")
		self.h2_Data = self.k.Get("jet_pt")
		self.h2_1_Data = self.k.Get("thin_jet_pt")
		self.h3_Data = self.k.Get("jet_eta")
		self.h4_Data = self.k.Get("photon_pt")
		self.h5_Data = self.k.Get("rho")
		self.h6_Data = self.k.Get("N2")
		self.h7_Data = self.k.Get("n2ddt")

		self.h8_Data = self.k.Get("PuppiMETPT")
		self.h9_Data = self.k.Get("ak4_btag")
		
		self.h10_Data = self.k.Get("photon_eta")
#		self.h11_Data = self.k.Get("tau32")
		self.h12_Data = self.k.Get("HT")
		self.h13_Data = self.k.Get("HT_AK8")
		
#		self.h1_Data_presel = self.k.Get("softdrop_presel")
#		self.h2_Data_presel = self.k.Get("jet_pt_presel")
#		self.h2_1_Data_presel = self.k.Get("thin_jet_pt_presel")
#		self.h3_Data_presel = self.k.Get("jet_eta_presel")
#		self.h4_Data_presel = self.k.Get("photon_pt_presel")
#		self.h5_Data_presel = self.k.Get("rho_presel")
#		self.h6_Data_presel = self.k.Get("N2_presel")
#		self.h10_Data_presel = self.k.Get("photon_eta_presel")

		self.p1_Data = self.k.Get("pass_soft")
		self.p1_1_Data = self.k.Get("pass_soft_thin")
		self.p2_Data = self.k.Get("pass_jet_pt")
		self.p3_Data = self.k.Get("pass_jet_eta")
		self.p4_Data = self.k.Get("pass_photon_pt")
		self.p5_Data = self.k.Get("pass_rho")
		self.p10_Data = self.k.Get("pass_photon_eta")
		
		self.f1_Data = self.k.Get("fail_soft")
		self.f1_1_Data = self.k.Get("fail_soft_thin")
		self.f2_Data = self.k.Get("fail_jet_pt")
		self.f3_Data = self.k.Get("fail_jet_eta")
		self.f4_Data = self.k.Get("fail_photon_pt")
		self.f5_Data = self.k.Get("fail_rho")
		self.f10_Data = self.k.Get("fail_photon_eta")
		
		
		GoodPlotFormat(self.h1_Data, 'markers', ROOT.kBlack, 20)
		GoodPlotFormat(self.h2_Data, 'markers', ROOT.kBlack, 20)
		GoodPlotFormat(self.h2_1_Data, 'markers', ROOT.kBlack, 20)
		GoodPlotFormat(self.h3_Data, 'markers', ROOT.kBlack, 20)
		GoodPlotFormat(self.h4_Data, 'markers', ROOT.kBlack, 20)
		GoodPlotFormat(self.h5_Data, 'markers', ROOT.kBlack, 20)
		GoodPlotFormat(self.h6_Data, 'markers', ROOT.kBlack, 20)
		GoodPlotFormat(self.h7_Data, 'markers', ROOT.kBlack, 20)
		GoodPlotFormat(self.h8_Data, 'markers', ROOT.kBlack, 20)
		GoodPlotFormat(self.h9_Data, 'markers', ROOT.kBlack, 20)
		GoodPlotFormat(self.h10_Data, 'markers', ROOT.kBlack, 20)
#		GoodPlotFormat(self.h11_Data, 'markers', ROOT.kBlack, 20)
		GoodPlotFormat(self.h12_Data, 'markers', ROOT.kBlack, 20)
		GoodPlotFormat(self.h13_Data, 'markers', ROOT.kBlack, 20)
		
		self.h12_Data.SetMarkerSize(0.4)
		self.h13_Data.SetMarkerSize(0.4)
		
#		GoodPlotFormat(self.h1_Data_presel, 'markers', ROOT.kBlack, 20)
#		GoodPlotFormat(self.h2_Data_presel, 'markers', ROOT.kBlack, 20)
#		GoodPlotFormat(self.h2_1_Data_presel, 'markers', ROOT.kBlack, 20)
#		GoodPlotFormat(self.h3_Data_presel, 'markers', ROOT.kBlack, 20)
#		GoodPlotFormat(self.h4_Data_presel, 'markers', ROOT.kBlack, 20)
#		GoodPlotFormat(self.h5_Data_presel, 'markers', ROOT.kBlack, 20)
#		GoodPlotFormat(self.h6_Data_presel, 'markers', ROOT.kBlack, 20)
#		GoodPlotFormat(self.h10_Data_presel, 'markers', ROOT.kBlack, 20)
		
		GoodPlotFormat(self.p1_Data, 'markers', ROOT.kBlack, 20)
		GoodPlotFormat(self.p1_1_Data, 'markers', ROOT.kBlack, 20)
		GoodPlotFormat(self.p2_Data, 'markers', ROOT.kBlack, 20)
		GoodPlotFormat(self.p3_Data, 'markers', ROOT.kBlack, 20)
		GoodPlotFormat(self.p4_Data, 'markers', ROOT.kBlack, 20)
		GoodPlotFormat(self.p5_Data, 'markers', ROOT.kBlack, 20)
		GoodPlotFormat(self.p10_Data, 'markers', ROOT.kBlack, 20)
		
		GoodPlotFormat(self.f1_Data, 'markers', ROOT.kBlack, 20)
		GoodPlotFormat(self.f1_1_Data, 'markers', ROOT.kBlack, 20)
		GoodPlotFormat(self.f2_Data, 'markers', ROOT.kBlack, 20)
		GoodPlotFormat(self.f3_Data, 'markers', ROOT.kBlack, 20)
		GoodPlotFormat(self.f4_Data, 'markers', ROOT.kBlack, 20)
		GoodPlotFormat(self.f5_Data, 'markers', ROOT.kBlack, 20)
		GoodPlotFormat(self.f10_Data, 'markers', ROOT.kBlack, 20)

		self.m = TFile.Open(ifile10, "READ")
		self.m.ls();

		self.h1_QCD = self.m.Get("softdrop")
		self.h2_QCD = self.m.Get("jet_pt")
		self.h2_1_QCD = self.m.Get("thin_jet_pt")
		self.h3_QCD = self.m.Get("jet_eta")
		self.h4_QCD = self.m.Get("photon_pt")
		self.h5_QCD = self.m.Get("rho")
		self.h6_QCD = self.m.Get("N2")
		self.h7_QCD = self.m.Get("n2ddt")

		self.h8_QCD = self.m.Get("PuppiMETPT")
		self.h9_QCD = self.m.Get("ak4_btag")
		
		self.h10_QCD = self.m.Get("photon_eta")
#		self.h11_QCD = self.m.Get("tau32")
		self.h12_QCD = self.m.Get("HT")
		self.h13_QCD = self.m.Get("HT_AK8")
		
#		self.h1_QCD_presel = self.m.Get("softdrop_presel")
#		self.h2_QCD_presel = self.m.Get("jet_pt_presel")
#		self.h2_1_QCD_presel = self.m.Get("thin_jet_pt_presel")
#		self.h3_QCD_presel = self.m.Get("jet_eta_presel")
#		self.h4_QCD_presel = self.m.Get("photon_pt_presel")
#		self.h5_QCD_presel = self.m.Get("rho_presel")
#		self.h6_QCD_presel = self.m.Get("N2_presel")
#		self.h10_QCD_presel = self.m.Get("photon_eta_presel")

		self.p1_QCD = self.m.Get("pass_soft")
		self.p1_1_QCD = self.m.Get("pass_soft_thin")
		self.p2_QCD = self.m.Get("pass_jet_pt")
		self.p3_QCD = self.m.Get("pass_jet_eta")
		self.p4_QCD = self.m.Get("pass_photon_pt")
		self.p5_QCD = self.m.Get("pass_rho")
		self.p10_QCD = self.m.Get("pass_photon_eta")
		
		self.f1_QCD = self.m.Get("fail_soft")
		self.f1_1_QCD = self.m.Get("fail_soft_thin")
		self.f2_QCD = self.m.Get("fail_jet_pt")
		self.f3_QCD = self.m.Get("fail_jet_eta")
		self.f4_QCD = self.m.Get("fail_photon_pt")
		self.f5_QCD = self.m.Get("fail_rho")
		self.f10_QCD = self.m.Get("fail_photon_eta")
		
		
		GoodPlotFormat(self.h1_QCD, 'fill', 41, 3003)
		GoodPlotFormat(self.h2_QCD, 'fill', 41, 3003)
		GoodPlotFormat(self.h2_1_QCD, 'fill', 41, 3003)
		GoodPlotFormat(self.h3_QCD, 'fill', 41, 3003)
		GoodPlotFormat(self.h4_QCD, 'fill', 41, 3003)
		GoodPlotFormat(self.h5_QCD, 'fill', 41, 3003)
		GoodPlotFormat(self.h6_QCD, 'fill', 41, 3003)
		GoodPlotFormat(self.h7_QCD, 'fill', 41, 3003)
		GoodPlotFormat(self.h8_QCD, 'fill', 41, 3003)
		GoodPlotFormat(self.h9_QCD, 'fill', 41, 3003)
		GoodPlotFormat(self.h10_QCD, 'fill', 41, 3003)
#		GoodPlotFormat(self.h11_QCD, 'fill', 41, 3003)
		GoodPlotFormat(self.h12_QCD, 'fill', 41, 3003)
		GoodPlotFormat(self.h13_QCD, 'fill', 41, 3003)
		
#		GoodPlotFormat(self.h1_QCD_presel, 'fill', 41, 3003)
#		GoodPlotFormat(self.h2_QCD_presel, 'fill', 41, 3003)
#		GoodPlotFormat(self.h2_1_QCD_presel, 'fill', 41, 3003)
#		GoodPlotFormat(self.h3_QCD_presel, 'fill', 41, 3003)
#		GoodPlotFormat(self.h4_QCD_presel, 'fill', 41, 3003)
#		GoodPlotFormat(self.h5_QCD_presel, 'fill', 41, 3003)
#		GoodPlotFormat(self.h6_QCD_presel, 'fill', 41, 3003)
#		GoodPlotFormat(self.h10_QCD_presel, 'fill', 41, 3003)
		
		GoodPlotFormat(self.p1_QCD, 'fill', 41, 3003)
		GoodPlotFormat(self.p1_1_QCD, 'fill', 41, 3003)
		GoodPlotFormat(self.p2_QCD, 'fill', 41, 3003)
		GoodPlotFormat(self.p3_QCD, 'fill', 41, 3003)
		GoodPlotFormat(self.p4_QCD, 'fill', 41, 3003)
		GoodPlotFormat(self.p5_QCD, 'fill', 41, 3003)
		GoodPlotFormat(self.p10_QCD, 'fill', 41, 3003)
		
		GoodPlotFormat(self.f1_QCD, 'fill', 41, 3003)
		GoodPlotFormat(self.f1_1_QCD, 'fill', 41, 3003)
		GoodPlotFormat(self.f2_QCD, 'fill', 41, 3003)
		GoodPlotFormat(self.f3_QCD, 'fill', 41, 3003)
		GoodPlotFormat(self.f4_QCD, 'fill', 41, 3003)
		GoodPlotFormat(self.f5_QCD, 'fill', 41, 3003)
		GoodPlotFormat(self.f10_QCD, 'fill', 41, 3003)


		#Total Background Plots
		self.h1_tot = TH1F("soft_tot", "Total Background Softdrop Mass", 40, 0, 200)
		self.h2_tot = TH1F("jet_pt_tot", "Total Background Jet pT", 40, 0, 2000)
		self.h2_1_tot = TH1F("jet_pt_thin_tot", "Total Background Thin Jet pT", 2000, 0, 2000)
		self.h3_tot = TH1F("jet_eta_tot", "Total Background Jet Eta", 70, -3.5, 3.5)
		self.h4_tot = TH1F("pho_pt_tot", "Total Background Photon pT", 100, 0, 2000)
		self.h5_tot = TH1F("rho_tot", "Total Background Rho", 28, -8, -1)
		self.h6_tot = TH1F("n2_tot", "Total Background N2", 50, 0, 0.5)
		self.h7_tot = TH1F("n2ddt_tot", "Total Background N2DDT", 100, -.5, .5)
		self.h8_tot = TH1F("puppi_tot", "Total Background PUPPI MET pT", 200, 0, 200)
		self.h9_tot = TH1F("ak4_btag_tot", "Total Background AK4 BTag", 200, -1, 1)
		self.h10_tot = TH1F("photon_eta_tot", "Total Background Photon Eta", 70, -3.5, 3.5)
		
#		self.h1_tot_presel = TH1F("soft_tot_presel", "Total Pre-Selection Background Softdrop Mass", 40, 0, 200)
#		self.h2_tot_presel = TH1F("jet_pt_tot_presel", "Total Pre-Selection Background Jet pT", 40, 0, 2000)
#		self.h2_1_tot_presel = TH1F("jet_pt_thin_tot_presel", "Total Pre-Selection Background Thin Jet pT", 2000, 0, 2000)
#		self.h3_tot_presel = TH1F("jet_eta_tot_presel", "Total Pre-Selection Background Jet Eta", 70, -3.5, 3.5)
#		self.h4_tot_presel = TH1F("pho_pt_tot_presel", "Total Pre-Selection Background Photon pT", 50, 0, 1000)
#		self.h5_tot_presel = TH1F("rho_tot_presel", "Total Pre-Selection Background Rho", 28, -8, -1)
#		self.h6_tot_presel = TH1F("n2_tot_presel", "Total Pre-Selection Background N2", 50, 0, 0.5)
#		self.h10_tot_presel = TH1F("photon_eta_tot_presel", "Total Pre-Selection Background Photon Eta", 70, -3.5, 3.5)

		self.p1_tot = TH1F("pass_soft_tot", "Total Passing Background Softdrop Mass", 40, 0, 200)
		self.p1_1_tot = TH1F("pass_soft_thin_tot", "Total Passing Thin Background Softdrop Mass", 100, 0, 200)
		self.p2_tot = TH1F("pass_jet_pt_tot", "Total Passing Background Jet pT", 40, 0, 2000)
		self.p3_tot = TH1F("pass_jet_eta_tot", "Total Passing Background Jet Eta", 70, -3.5, 3.5)
		self.p4_tot = TH1F("pass_pho_pt_tot", "Total Passing Background Photon pT", 100, 0, 2000)
		self.p5_tot = TH1F("pass_rho_tot", "Total Passing Background Rho", 28, -8, -1)
		self.p10_tot = TH1F("pass_photon_eta_tot", "Total Passing Background Photon Eta", 70, -3.5, 3.5)
		
		self.f1_tot = TH1F("fail_soft_tot", "Total Failing Background Softdrop Mass", 40, 0, 200)
		self.f1_1_tot = TH1F("fail_soft_thin_tot", "Total Failing Thin Background Softdrop Mass", 100, 0, 200)
		self.f2_tot = TH1F("fail_jet_pt_tot", "Total Failing Background Jet pT", 40, 0, 2000)
		self.f3_tot = TH1F("fail_jet_eta_tot", "Total Failing Background Jet Eta", 70, -3.5, 3.5)
		self.f4_tot = TH1F("fail_pho_pt_tot", "Total Failing Background Photon pT", 100, 0, 2000)
		self.f5_tot = TH1F("fail_rho_tot", "Total Failing Background Rho", 28, -8, -1)
		self.f10_tot = TH1F("fail_photon_eta_tot", "Total Failing Background Photon Eta", 70, -3.5, 3.5)


		self.h1_tot.Add(self.h1_GJ)
		self.h1_tot.Add(self.h1_WG)
		self.h1_tot.Add(self.h1_ZG)
		self.h1_tot.Add(self.h1_TT)
		self.h1_tot.Add(self.h1_QCD)
		self.h2_tot.Add(self.h2_GJ)
		self.h2_tot.Add(self.h2_WG)
		self.h2_tot.Add(self.h2_ZG)
		self.h2_tot.Add(self.h2_TT)
		self.h2_tot.Add(self.h2_QCD)
		self.h2_1_tot.Add(self.h2_1_GJ)
		self.h2_1_tot.Add(self.h2_1_WG)
		self.h2_1_tot.Add(self.h2_1_ZG)
		self.h2_1_tot.Add(self.h2_1_TT)
		self.h2_1_tot.Add(self.h2_1_QCD)
		self.h3_tot.Add(self.h3_GJ)
		self.h3_tot.Add(self.h3_WG)
		self.h3_tot.Add(self.h3_ZG)
		self.h3_tot.Add(self.h3_TT)
		self.h3_tot.Add(self.h3_QCD)
		self.h4_tot.Add(self.h4_GJ)
		self.h4_tot.Add(self.h4_WG)
		self.h4_tot.Add(self.h4_ZG)
		self.h4_tot.Add(self.h4_TT)
		self.h4_tot.Add(self.h4_QCD)
		self.h5_tot.Add(self.h5_GJ)
		self.h5_tot.Add(self.h5_WG)
		self.h5_tot.Add(self.h5_ZG)
		self.h5_tot.Add(self.h5_TT)
		self.h5_tot.Add(self.h5_QCD)
		self.h6_tot.Add(self.h6_GJ)
		self.h6_tot.Add(self.h6_WG)
		self.h6_tot.Add(self.h6_ZG)
		self.h6_tot.Add(self.h6_TT)
		self.h6_tot.Add(self.h6_QCD)
		self.h7_tot.Add(self.h7_GJ)
		self.h7_tot.Add(self.h7_WG)
		self.h7_tot.Add(self.h7_ZG)
		self.h7_tot.Add(self.h7_TT)
		self.h7_tot.Add(self.h7_QCD)
		self.h8_tot.Add(self.h8_GJ)
		self.h8_tot.Add(self.h8_WG)
		self.h8_tot.Add(self.h8_ZG)
		self.h8_tot.Add(self.h8_TT)
		self.h8_tot.Add(self.h8_QCD)
		self.h9_tot.Add(self.h9_GJ)
		self.h9_tot.Add(self.h9_WG)
		self.h9_tot.Add(self.h9_ZG)
		self.h9_tot.Add(self.h9_TT)
		self.h9_tot.Add(self.h9_QCD)
		self.h10_tot.Add(self.h10_GJ)
		self.h10_tot.Add(self.h10_WG)
		self.h10_tot.Add(self.h10_ZG)
		self.h10_tot.Add(self.h10_TT)
		self.h10_tot.Add(self.h10_QCD)

#		self.h1_tot_presel.Add(self.h1_GJ_presel)
#		self.h1_tot_presel.Add(self.h1_WG_presel)
#		self.h1_tot_presel.Add(self.h1_ZG_presel)
#		self.h1_tot_presel.Add(self.h1_TT_presel)
#		self.h1_tot_presel.Add(self.h1_QCD_presel)
#		self.h2_tot_presel.Add(self.h2_GJ_presel)
#		self.h2_tot_presel.Add(self.h2_WG_presel)
#		self.h2_tot_presel.Add(self.h2_ZG_presel)
#		self.h2_tot_presel.Add(self.h2_TT_presel)
#		self.h2_tot_presel.Add(self.h2_QCD_presel)
#		self.h2_1_tot_presel.Add(self.h2_1_GJ_presel)
#		self.h2_1_tot_presel.Add(self.h2_1_WG_presel)
#		self.h2_1_tot_presel.Add(self.h2_1_ZG_presel)
#		self.h2_1_tot_presel.Add(self.h2_1_TT_presel)
#		self.h2_1_tot_presel.Add(self.h2_1_QCD_presel)
#		self.h3_tot_presel.Add(self.h3_GJ_presel)
#		self.h3_tot_presel.Add(self.h3_WG_presel)
#		self.h3_tot_presel.Add(self.h3_ZG_presel)
#		self.h3_tot_presel.Add(self.h3_TT_presel)
#		self.h3_tot_presel.Add(self.h3_QCD_presel)
#		self.h4_tot_presel.Add(self.h4_GJ_presel)
#		self.h4_tot_presel.Add(self.h4_WG_presel)
#		self.h4_tot_presel.Add(self.h4_ZG_presel)
#		self.h4_tot_presel.Add(self.h4_TT_presel)
#		self.h4_tot_presel.Add(self.h4_QCD_presel)
#		self.h5_tot_presel.Add(self.h5_GJ_presel)
#		self.h5_tot_presel.Add(self.h5_WG_presel)
#		self.h5_tot_presel.Add(self.h5_ZG_presel)
#		self.h5_tot_presel.Add(self.h5_TT_presel)
#		self.h5_tot_presel.Add(self.h5_QCD_presel)
#		self.h6_tot_presel.Add(self.h6_GJ_presel)
#		self.h6_tot_presel.Add(self.h6_WG_presel)
#		self.h6_tot_presel.Add(self.h6_ZG_presel)
#		self.h6_tot_presel.Add(self.h6_TT_presel)
#		self.h6_tot_presel.Add(self.h6_QCD_presel)
#		self.h10_tot_presel.Add(self.h10_GJ_presel)
#		self.h10_tot_presel.Add(self.h10_WG_presel)
#		self.h10_tot_presel.Add(self.h10_ZG_presel)
#		self.h10_tot_presel.Add(self.h10_TT_presel)
#		self.h10_tot_presel.Add(self.h10_QCD_presel)

		self.p1_tot.Add(self.p1_GJ)
		self.p1_tot.Add(self.p1_WG)
		self.p1_tot.Add(self.p1_ZG)
		self.p1_tot.Add(self.p1_TT)
		self.p1_tot.Add(self.p1_QCD)
		self.p1_1_tot.Add(self.p1_1_GJ)
		self.p1_1_tot.Add(self.p1_1_WG)
		self.p1_1_tot.Add(self.p1_1_ZG)
		self.p1_1_tot.Add(self.p1_1_TT)
		self.p1_1_tot.Add(self.p1_1_QCD)
		self.p2_tot.Add(self.p2_GJ)
		self.p2_tot.Add(self.p2_WG)
		self.p2_tot.Add(self.p2_ZG)
		self.p2_tot.Add(self.p2_TT)
		self.p2_tot.Add(self.p2_QCD)
		self.p3_tot.Add(self.p3_GJ)
		self.p3_tot.Add(self.p3_WG)
		self.p3_tot.Add(self.p3_ZG)
		self.p3_tot.Add(self.p3_TT)
		self.p3_tot.Add(self.p3_QCD)
		self.p4_tot.Add(self.p4_GJ)
		self.p4_tot.Add(self.p4_WG)
		self.p4_tot.Add(self.p4_ZG)
		self.p4_tot.Add(self.p4_TT)
		self.p4_tot.Add(self.p4_QCD)
		self.p5_tot.Add(self.p5_GJ)
		self.p5_tot.Add(self.p5_WG)
		self.p5_tot.Add(self.p5_ZG)
		self.p5_tot.Add(self.p5_TT)
		self.p5_tot.Add(self.p5_QCD)
		self.p10_tot.Add(self.p10_GJ)
		self.p10_tot.Add(self.p10_WG)
		self.p10_tot.Add(self.p10_ZG)
		self.p10_tot.Add(self.p10_TT)
		self.p10_tot.Add(self.p10_QCD)

		self.f1_tot.Add(self.f1_GJ)
		self.f1_tot.Add(self.f1_WG)
		self.f1_tot.Add(self.f1_ZG)
		self.f1_tot.Add(self.f1_TT)
		self.f1_tot.Add(self.f1_QCD)
		self.f1_1_tot.Add(self.f1_1_GJ)
		self.f1_1_tot.Add(self.f1_1_WG)
		self.f1_1_tot.Add(self.f1_1_ZG)
		self.f1_1_tot.Add(self.f1_1_TT)
		self.f1_1_tot.Add(self.f1_1_QCD)
		self.f2_tot.Add(self.f2_GJ)
		self.f2_tot.Add(self.f2_WG)
		self.f2_tot.Add(self.f2_ZG)
		self.f2_tot.Add(self.f2_TT)
		self.f2_tot.Add(self.f2_QCD)
		self.f3_tot.Add(self.f3_GJ)
		self.f3_tot.Add(self.f3_WG)
		self.f3_tot.Add(self.f3_ZG)
		self.f3_tot.Add(self.f3_TT)
		self.f3_tot.Add(self.f3_QCD)
		self.f4_tot.Add(self.f4_GJ)
		self.f4_tot.Add(self.f4_WG)
		self.f4_tot.Add(self.f4_ZG)
		self.f4_tot.Add(self.f4_TT)
		self.f4_tot.Add(self.f4_QCD)
		self.f5_tot.Add(self.f5_GJ)
		self.f5_tot.Add(self.f5_WG)
		self.f5_tot.Add(self.f5_ZG)
		self.f5_tot.Add(self.f5_TT)
		self.f5_tot.Add(self.f5_QCD)
		self.f10_tot.Add(self.f10_GJ)
		self.f10_tot.Add(self.f10_WG)
		self.f10_tot.Add(self.f10_ZG)
		self.f10_tot.Add(self.f10_TT)
		self.f10_tot.Add(self.f10_QCD)

		GoodPlotFormat(self.h1_tot, 'fill', 38, 3002)
		GoodPlotFormat(self.h2_tot, 'fill', 38, 3002)
		GoodPlotFormat(self.h2_1_tot, 'fill', 38, 3002)
		GoodPlotFormat(self.h3_tot, 'fill', 38, 3002)
		GoodPlotFormat(self.h4_tot, 'fill', 38, 3002)
		GoodPlotFormat(self.h5_tot, 'fill', 38, 3002)
		GoodPlotFormat(self.h6_tot, 'fill', 38, 3002)
		GoodPlotFormat(self.h7_tot, 'fill', 38, 3002)
		GoodPlotFormat(self.h8_tot, 'fill', 38, 3002)
		GoodPlotFormat(self.h9_tot, 'fill', 38, 3002)
		GoodPlotFormat(self.h10_tot, 'fill', 38, 3002)
		
#		GoodPlotFormat(self.h1_tot_presel, 'fill', 38, 3002)
#		GoodPlotFormat(self.h2_tot_presel, 'fill', 38, 3002)
#		GoodPlotFormat(self.h2_1_tot_presel, 'fill', 38, 3002)
#		GoodPlotFormat(self.h3_tot_presel, 'fill', 38, 3002)
#		GoodPlotFormat(self.h4_tot_presel, 'fill', 38, 3002)
#		GoodPlotFormat(self.h5_tot_presel, 'fill', 38, 3002)
#		GoodPlotFormat(self.h6_tot_presel, 'fill', 38, 3002)
#		GoodPlotFormat(self.h10_tot_presel, 'fill', 38, 3002)
		
		GoodPlotFormat(self.p1_tot, 'fill', 38, 3002)
		GoodPlotFormat(self.p1_1_tot, 'fill', 38, 3002)
		GoodPlotFormat(self.p2_tot, 'fill', 38, 3002)
		GoodPlotFormat(self.p3_tot, 'fill', 38, 3002)
		GoodPlotFormat(self.p4_tot, 'fill', 38, 3002)
		GoodPlotFormat(self.p5_tot, 'fill', 38, 3002)
		GoodPlotFormat(self.p10_tot, 'fill', 38, 3002)
		
		GoodPlotFormat(self.f1_tot, 'fill', 38, 3002)
		GoodPlotFormat(self.f1_1_tot, 'fill', 38, 3002)
		GoodPlotFormat(self.f2_tot, 'fill', 38, 3002)
		GoodPlotFormat(self.f3_tot, 'fill', 38, 3002)
		GoodPlotFormat(self.f4_tot, 'fill', 38, 3002)
		GoodPlotFormat(self.f5_tot, 'fill', 38, 3002)
		GoodPlotFormat(self.f10_tot, 'fill', 38, 3002)

		self.h1_tot.SetYTitle("Events")	
		self.h2_tot.SetYTitle("Events")	
		self.h2_1_tot.SetYTitle("Events")	
		self.h3_tot.SetYTitle("Events")	
		self.h4_tot.SetYTitle("Events")	
		self.h5_tot.SetYTitle("Events")	
		self.h6_tot.SetYTitle("Events")	
		self.h7_tot.SetYTitle("Events")	
		self.h8_tot.SetYTitle("Events")	
		self.h9_tot.SetYTitle("Events")	
		self.h10_tot.SetYTitle("Events")	
#		self.h1_tot_presel.SetYTitle("Events")	
#		self.h2_tot_presel.SetYTitle("Events")	
#		self.h2_1_tot_presel.SetYTitle("Events")	
#		self.h3_tot_presel.SetYTitle("Events")	
#		self.h4_tot_presel.SetYTitle("Events")	
#		self.h5_tot_presel.SetYTitle("Events")	
#		self.h6_tot_presel.SetYTitle("Events")	
#		self.h10_tot_presel.SetYTitle("Events")	
		self.p1_tot.SetYTitle("Events")	
		self.p1_1_tot.SetYTitle("Events")	
		self.p2_tot.SetYTitle("Events")	
		self.p3_tot.SetYTitle("Events")	
		self.p4_tot.SetYTitle("Events")	
		self.p5_tot.SetYTitle("Events")	
		self.p10_tot.SetYTitle("Events")	
		self.f1_tot.SetYTitle("Events")	
		self.f1_1_tot.SetYTitle("Events")	
		self.f2_tot.SetYTitle("Events")	
		self.f3_tot.SetYTitle("Events")	
		self.f4_tot.SetYTitle("Events")	
		self.f5_tot.SetYTitle("Events")	
		self.f10_tot.SetYTitle("Events")	


		#Stacking, Bottom to Top: ZGamma, TTBar, WGamma, QCD, GJets
		self.h1_TT.Add(self.h1_ZG)
		self.h1_WG.Add(self.h1_TT)
		self.h1_QCD.Add(self.h1_WG)
		self.h1_GJ.Add(self.h1_QCD)

		self.h2_TT.Add(self.h2_ZG)
		self.h2_WG.Add(self.h2_TT)
		self.h2_QCD.Add(self.h2_WG)
		self.h2_GJ.Add(self.h2_QCD)
		
		self.h2_1_TT.Add(self.h2_1_ZG)
		self.h2_1_WG.Add(self.h2_1_TT)
		self.h2_1_QCD.Add(self.h2_1_WG)
		self.h2_1_GJ.Add(self.h2_1_QCD)
		
		self.h3_TT.Add(self.h3_ZG)
		self.h3_WG.Add(self.h3_TT)
		self.h3_QCD.Add(self.h3_WG)
		self.h3_GJ.Add(self.h3_QCD)
		
		self.h4_TT.Add(self.h4_ZG)
		self.h4_WG.Add(self.h4_TT)
		self.h4_QCD.Add(self.h4_WG)
		self.h4_GJ.Add(self.h4_QCD)
		
		self.h5_TT.Add(self.h5_ZG)
		self.h5_WG.Add(self.h5_TT)
		self.h5_QCD.Add(self.h5_WG)
		self.h5_GJ.Add(self.h5_QCD)
		
		self.h6_TT.Add(self.h6_ZG)
		self.h6_WG.Add(self.h6_TT)
		self.h6_QCD.Add(self.h6_WG)
		self.h6_GJ.Add(self.h6_QCD)
		
		self.h7_TT.Add(self.h7_ZG)
		self.h7_WG.Add(self.h7_TT)
		self.h7_QCD.Add(self.h7_WG)
		self.h7_GJ.Add(self.h7_QCD)
		
		self.h8_TT.Add(self.h8_ZG)
		self.h8_WG.Add(self.h8_TT)
		self.h8_QCD.Add(self.h8_WG)
		self.h8_GJ.Add(self.h8_QCD)
		
		self.h9_TT.Add(self.h9_ZG)
		self.h9_WG.Add(self.h9_TT)
		self.h9_QCD.Add(self.h9_WG)
		self.h9_GJ.Add(self.h9_QCD)
		
		self.h10_TT.Add(self.h10_ZG)
		self.h10_WG.Add(self.h10_TT)
		self.h10_QCD.Add(self.h10_WG)
		self.h10_GJ.Add(self.h10_QCD)
		
#		self.h11_TT.Add(self.h11_ZG)
#		self.h11_WG.Add(self.h11_TT)
#		self.h11_QCD.Add(self.h11_WG)
#		self.h11_GJ.Add(self.h11_QCD)

		self.h12_TT.Add(self.h12_ZG)
		self.h12_WG.Add(self.h12_TT)
		self.h12_QCD.Add(self.h12_WG)
		self.h12_GJ.Add(self.h12_QCD)
		
		self.h13_TT.Add(self.h13_ZG)
		self.h13_WG.Add(self.h13_TT)
		self.h13_QCD.Add(self.h13_WG)
		self.h13_GJ.Add(self.h13_QCD)
		
		self.p1_TT.Add(self.p1_ZG)
		self.p1_WG.Add(self.p1_TT)
		self.p1_QCD.Add(self.p1_WG)
		self.p1_GJ.Add(self.p1_QCD)
		
		self.p1_1_TT.Add(self.p1_1_ZG)
		self.p1_1_WG.Add(self.p1_1_TT)
		self.p1_1_QCD.Add(self.p1_1_WG)
		self.p1_1_GJ.Add(self.p1_1_QCD)
		
		self.p2_TT.Add(self.p2_ZG)
		self.p2_WG.Add(self.p2_TT)
		self.p2_QCD.Add(self.p2_WG)
		self.p2_GJ.Add(self.p2_QCD)
		
		self.p3_TT.Add(self.p3_ZG)
		self.p3_WG.Add(self.p3_TT)
		self.p3_QCD.Add(self.p3_WG)
		self.p3_GJ.Add(self.p3_QCD)
		
		self.p4_TT.Add(self.p4_ZG)
		self.p4_WG.Add(self.p4_TT)
		self.p4_QCD.Add(self.p4_WG)
		self.p4_GJ.Add(self.p4_QCD)
		
		self.p5_TT.Add(self.p5_ZG)
		self.p5_WG.Add(self.p5_TT)
		self.p5_QCD.Add(self.p5_WG)
		self.p5_GJ.Add(self.p5_QCD)
		
		self.p10_TT.Add(self.p10_ZG)
		self.p10_WG.Add(self.p10_TT)
		self.p10_QCD.Add(self.p10_WG)
		self.p10_GJ.Add(self.p10_QCD)
		
		self.f1_TT.Add(self.f1_ZG)
		self.f1_WG.Add(self.f1_TT)
		self.f1_QCD.Add(self.f1_WG)
		self.f1_GJ.Add(self.f1_QCD)
		
		self.f1_1_TT.Add(self.f1_1_ZG)
		self.f1_1_WG.Add(self.f1_1_TT)
		self.f1_1_QCD.Add(self.f1_1_WG)
		self.f1_1_GJ.Add(self.f1_1_QCD)
		
		self.f2_TT.Add(self.f2_ZG)
		self.f2_WG.Add(self.f2_TT)
		self.f2_QCD.Add(self.f2_WG)
		self.f2_GJ.Add(self.f2_QCD)
		
		self.f3_TT.Add(self.f3_ZG)
		self.f3_WG.Add(self.f3_TT)
		self.f3_QCD.Add(self.f3_WG)
		self.f3_GJ.Add(self.f3_QCD)
		
		self.f4_TT.Add(self.f4_ZG)
		self.f4_WG.Add(self.f4_TT)
		self.f4_QCD.Add(self.f4_WG)
		self.f4_GJ.Add(self.f4_QCD)
		
		self.f5_TT.Add(self.f5_ZG)
		self.f5_WG.Add(self.f5_TT)
		self.f5_QCD.Add(self.f5_WG)
		self.f5_GJ.Add(self.f5_QCD)
		
		self.f10_TT.Add(self.f10_ZG)
		self.f10_WG.Add(self.f10_TT)
		self.f10_QCD.Add(self.f10_WG)
		self.f10_GJ.Add(self.f10_QCD)
		
#		self.h1_TT_presel.Add(self.h1_ZG_presel)
#		self.h1_WG_presel.Add(self.h1_TT_presel)
#		self.h1_QCD_presel.Add(self.h1_WG_presel)
#		self.h1_GJ_presel.Add(self.h1_QCD_presel)

#		self.h2_TT_presel.Add(self.h2_ZG_presel)
#		self.h2_WG_presel.Add(self.h2_TT_presel)
#		self.h2_QCD_presel.Add(self.h2_WG_presel)
#		self.h2_GJ_presel.Add(self.h2_QCD_presel)
		
#		self.h2_1_TT_presel.Add(self.h2_1_ZG_presel)
#		self.h2_1_WG_presel.Add(self.h2_1_TT_presel)
#		self.h2_1_QCD_presel.Add(self.h2_1_WG_presel)
#		self.h2_1_GJ_presel.Add(self.h2_1_QCD_presel)
		
#		self.h3_TT_presel.Add(self.h3_ZG_presel)
#		self.h3_WG_presel.Add(self.h3_TT_presel)
#		self.h3_QCD_presel.Add(self.h3_WG_presel)
#		self.h3_GJ_presel.Add(self.h3_QCD_presel)
		
#		self.h4_TT_presel.Add(self.h4_ZG_presel)
#		self.h4_WG_presel.Add(self.h4_TT_presel)
#		self.h4_QCD_presel.Add(self.h4_WG_presel)
#		self.h4_GJ_presel.Add(self.h4_QCD_presel)
		
#		self.h5_TT_presel.Add(self.h5_ZG_presel)
#		self.h5_WG_presel.Add(self.h5_TT_presel)
#		self.h5_QCD_presel.Add(self.h5_WG_presel)
#		self.h5_GJ_presel.Add(self.h5_QCD_presel)
		
#		self.h6_TT_presel.Add(self.h6_ZG_presel)
#		self.h6_WG_presel.Add(self.h6_TT_presel)
#		self.h6_QCD_presel.Add(self.h6_WG_presel)
#		self.h6_GJ_presel.Add(self.h6_QCD_presel)
		
#		self.h10_TT_presel.Add(self.h10_ZG_presel)
#		self.h10_WG_presel.Add(self.h10_TT_presel)
#		self.h10_QCD_presel.Add(self.h10_WG_presel)
#		self.h10_GJ_presel.Add(self.h10_QCD_presel)
		
		self.h1_GJ.SetYTitle("Events")	
		self.h2_GJ.SetYTitle("Events")	
		self.h2_1_GJ.SetYTitle("Events")	
		self.h3_GJ.SetYTitle("Events")	
		self.h4_GJ.SetYTitle("Events")	
		self.h5_GJ.SetYTitle("Events")	
		self.h6_GJ.SetYTitle("Events")	
		self.h7_GJ.SetYTitle("Events")	
		self.h8_GJ.SetYTitle("Events")	
		self.h9_GJ.SetYTitle("Events")	
		self.h10_GJ.SetYTitle("Events")	
#		self.h11_GJ.SetYTitle("Events")	
		self.h12_GJ.SetYTitle("Events")	
		self.h13_GJ.SetYTitle("Events")	
#		self.h1_GJ_presel.SetYTitle("Events")	
#		self.h2_GJ_presel.SetYTitle("Events")	
#		self.h2_1_GJ_presel.SetYTitle("Events")	
#		self.h3_GJ_presel.SetYTitle("Events")	
#		self.h4_GJ_presel.SetYTitle("Events")	
#		self.h5_GJ_presel.SetYTitle("Events")	
#		self.h6_GJ_presel.SetYTitle("Events")	
#		self.h10_GJ_presel.SetYTitle("Events")	
		self.p1_GJ.SetYTitle("Events")	
		self.p1_1_GJ.SetYTitle("Events")	
		self.p2_GJ.SetYTitle("Events")	
		self.p3_GJ.SetYTitle("Events")	
		self.p4_GJ.SetYTitle("Events")	
		self.p5_GJ.SetYTitle("Events")	
		self.p10_GJ.SetYTitle("Events")	
		self.f1_GJ.SetYTitle("Events")	
		self.f1_1_GJ.SetYTitle("Events")	
		self.f2_GJ.SetYTitle("Events")	
		self.f3_GJ.SetYTitle("Events")	
		self.f4_GJ.SetYTitle("Events")	
		self.f5_GJ.SetYTitle("Events")	
		self.f10_GJ.SetYTitle("Events")	


		#Fix Photon pT Binning
		rebinning = '''
		self.h4_GJ.Rebin(2)
		self.h4_Data.Rebin(2)
		self.h4_QCD.Rebin(2)
		self.h4_TT.Rebin(2)
		self.h4_WG.Rebin(2)
		self.h4_ZG.Rebin(2)
		self.h4_sig10.Rebin(2)
		self.h4_sig25.Rebin(2)
		self.h4_sig50.Rebin(2)
		self.h4_sig75.Rebin(2)
#		self.h4_GJ_presel.Rebin(2)
#		self.h4_Data_presel.Rebin(2)
#		self.h4_QCD_presel.Rebin(2)
#		self.h4_TT_presel.Rebin(2)
#		self.h4_WG_presel.Rebin(2)
#		self.h4_ZG_presel.Rebin(2)
#		self.h4_sig10_presel.Rebin(2)
#		self.h4_sig25_presel.Rebin(2)
#		self.h4_sig50_presel.Rebin(2)
#		self.h4_sig75_presel.Rebin(2)
		self.p4_GJ.Rebin(2)
		self.p4_Data.Rebin(2)
		self.p4_QCD.Rebin(2)
		self.p4_TT.Rebin(2)
		self.p4_WG.Rebin(2)
		self.p4_ZG.Rebin(2)
		self.p4_sig10.Rebin(2)
		self.p4_sig25.Rebin(2)
		self.p4_sig50.Rebin(2)
		self.p4_sig75.Rebin(2)
		self.f4_GJ.Rebin(2)
		self.f4_Data.Rebin(2)
		self.f4_QCD.Rebin(2)
		self.f4_TT.Rebin(2)
		self.f4_WG.Rebin(2)
		self.f4_ZG.Rebin(2)
		self.f4_sig10.Rebin(2)
		self.f4_sig25.Rebin(2)
		self.f4_sig50.Rebin(2)
		self.f4_sig75.Rebin(2)
		'''
		#Scale MC to 10% of Data
		self.h1_sig10.Scale(.1)	
		self.h2_sig10.Scale(.1)	
		self.h2_1_sig10.Scale(.1)	
		self.h3_sig10.Scale(.1)	
		self.h4_sig10.Scale(.1)	
		self.h5_sig10.Scale(.1)	
		self.h6_sig10.Scale(.1)	
		self.h7_sig10.Scale(.1)	
		self.h8_sig10.Scale(.1)	
		self.h9_sig10.Scale(.1)	
		self.h10_sig10.Scale(.1)	
#		self.h11_sig10.Scale(.1)	
		self.h12_sig10.Scale(.1)	
		self.h13_sig10.Scale(.1)	
		self.p1_sig10.Scale(.1)	
		self.p1_1_sig10.Scale(.1)	
		self.p2_sig10.Scale(.1)	
		self.p3_sig10.Scale(.1)	
		self.p4_sig10.Scale(.1)	
		self.p5_sig10.Scale(.1)	
		self.p10_sig10.Scale(.1)	
		self.f1_sig10.Scale(.1)	
		self.f1_1_sig10.Scale(.1)	
		self.f2_sig10.Scale(.1)	
		self.f3_sig10.Scale(.1)	
		self.f4_sig10.Scale(.1)	
		self.f5_sig10.Scale(.1)	
		self.f10_sig10.Scale(.1)	
		
#		self.h1_sig10_presel.Scale(.1)	
#		self.h2_sig10_presel.Scale(.1)	
#		self.h2_1_sig10_presel.Scale(.1)	
#		self.h3_sig10_presel.Scale(.1)	
#		self.h4_sig10_presel.Scale(.1)	
#		self.h5_sig10_presel.Scale(.1)	
#		self.h6_sig10_presel.Scale(.1)	
#		self.h10_sig10_presel.Scale(.1)	


		self.h1_sig25.Scale(.1)	
		self.h2_sig25.Scale(.1)	
		self.h2_1_sig25.Scale(.1)	
		self.h3_sig25.Scale(.1)	
		self.h4_sig25.Scale(.1)	
		self.h5_sig25.Scale(.1)	
		self.h6_sig25.Scale(.1)	
		self.h7_sig25.Scale(.1)	
		self.h8_sig25.Scale(.1)	
		self.h9_sig25.Scale(.1)	
		self.h10_sig25.Scale(.1)	
#		self.h11_sig25.Scale(.1)	
		self.h12_sig25.Scale(.1)	
		self.h13_sig25.Scale(.1)	
		self.p1_sig25.Scale(.1)	
		self.p1_1_sig25.Scale(.1)	
		self.p2_sig25.Scale(.1)	
		self.p3_sig25.Scale(.1)	
		self.p4_sig25.Scale(.1)	
		self.p5_sig25.Scale(.1)	
		self.p10_sig25.Scale(.1)	
		self.f1_sig25.Scale(.1)	
		self.f1_1_sig25.Scale(.1)	
		self.f2_sig25.Scale(.1)	
		self.f3_sig25.Scale(.1)	
		self.f4_sig25.Scale(.1)	
		self.f5_sig25.Scale(.1)	
		self.f10_sig25.Scale(.1)	
		
#		self.h1_sig25_presel.Scale(.1)	
#		self.h2_sig25_presel.Scale(.1)	
#		self.h2_1_sig25_presel.Scale(.1)	
#		self.h3_sig25_presel.Scale(.1)	
#		self.h4_sig25_presel.Scale(.1)	
#		self.h5_sig25_presel.Scale(.1)	
#		self.h6_sig25_presel.Scale(.1)	
#		self.h10_sig25_presel.Scale(.1)	
		
		self.h1_sig50.Scale(.1)	
		self.h2_sig50.Scale(.1)	
		self.h2_1_sig50.Scale(.1)	
		self.h3_sig50.Scale(.1)	
		self.h4_sig50.Scale(.1)	
		self.h5_sig50.Scale(.1)	
		self.h6_sig50.Scale(.1)	
		self.h7_sig50.Scale(.1)	
		self.h8_sig50.Scale(.1)	
		self.h9_sig50.Scale(.1)	
		self.h10_sig50.Scale(.1)	
#		self.h11_sig50.Scale(.1)	
		self.h12_sig50.Scale(.1)	
		self.h13_sig50.Scale(.1)	
		self.p1_sig50.Scale(.1)	
		self.p1_1_sig50.Scale(.1)	
		self.p2_sig50.Scale(.1)	
		self.p3_sig50.Scale(.1)	
		self.p4_sig50.Scale(.1)	
		self.p5_sig50.Scale(.1)	
		self.p10_sig50.Scale(.1)	
		self.f1_sig50.Scale(.1)	
		self.f1_1_sig50.Scale(.1)	
		self.f2_sig50.Scale(.1)	
		self.f3_sig50.Scale(.1)	
		self.f4_sig50.Scale(.1)	
		self.f5_sig50.Scale(.1)	
		self.f10_sig50.Scale(.1)	
		
#		self.h1_sig50_presel.Scale(.1)	
#		self.h2_sig50_presel.Scale(.1)	
#		self.h2_1_sig50_presel.Scale(.1)	
#		self.h3_sig50_presel.Scale(.1)	
#		self.h4_sig50_presel.Scale(.1)	
#		self.h5_sig50_presel.Scale(.1)	
#		self.h6_sig50_presel.Scale(.1)	
#		self.h10_sig50_presel.Scale(.1)	
		
		self.h1_sig75.Scale(.1)	
		self.h2_sig75.Scale(.1)	
		self.h2_1_sig75.Scale(.1)	
		self.h3_sig75.Scale(.1)	
		self.h4_sig75.Scale(.1)	
		self.h5_sig75.Scale(.1)	
		self.h6_sig75.Scale(.1)	
		self.h7_sig75.Scale(.1)	
		self.h8_sig75.Scale(.1)	
		self.h9_sig75.Scale(.1)	
		self.h10_sig75.Scale(.1)	
#		self.h11_sig75.Scale(.1)	
		self.h12_sig75.Scale(.1)	
		self.h13_sig75.Scale(.1)	
		self.p1_sig75.Scale(.1)	
		self.p1_1_sig75.Scale(.1)	
		self.p2_sig75.Scale(.1)	
		self.p3_sig75.Scale(.1)	
		self.p4_sig75.Scale(.1)	
		self.p5_sig75.Scale(.1)	
		self.p10_sig75.Scale(.1)	
		self.f1_sig75.Scale(.1)	
		self.f1_1_sig75.Scale(.1)	
		self.f2_sig75.Scale(.1)	
		self.f3_sig75.Scale(.1)	
		self.f4_sig75.Scale(.1)	
		self.f5_sig75.Scale(.1)	
		self.f10_sig75.Scale(.1)	
		
#		self.h1_sig75_presel.Scale(.1)	
#		self.h2_sig75_presel.Scale(.1)	
#		self.h2_1_sig75_presel.Scale(.1)	
#		self.h3_sig75_presel.Scale(.1)	
#		self.h4_sig75_presel.Scale(.1)	
#		self.h5_sig75_presel.Scale(.1)	
#		self.h6_sig75_presel.Scale(.1)	
#		self.h10_sig75_presel.Scale(.1)	
		
		self.h1_WG.Scale(.1)	
		self.h2_WG.Scale(.1)	
		self.h2_1_WG.Scale(.1)	
		self.h3_WG.Scale(.1)	
		self.h4_WG.Scale(.1)	
		self.h5_WG.Scale(.1)	
		self.h6_WG.Scale(.1)	
		self.h7_WG.Scale(.1)	
		self.h8_WG.Scale(.1)	
		self.h9_WG.Scale(.1)	
		self.h10_WG.Scale(.1)	
#		self.h11_WG.Scale(.1)	
		self.h12_WG.Scale(.1)	
		self.h13_WG.Scale(.1)	
		self.p1_WG.Scale(.1)	
		self.p1_1_WG.Scale(.1)	
		self.p2_WG.Scale(.1)	
		self.p3_WG.Scale(.1)	
		self.p4_WG.Scale(.1)	
		self.p5_WG.Scale(.1)	
		self.p10_WG.Scale(.1)	
		self.f1_WG.Scale(.1)	
		self.f1_1_WG.Scale(.1)	
		self.f2_WG.Scale(.1)	
		self.f3_WG.Scale(.1)	
		self.f4_WG.Scale(.1)	
		self.f5_WG.Scale(.1)	
		self.f10_WG.Scale(.1)	
		
#		self.h1_WG_presel.Scale(.1)	
#		self.h2_WG_presel.Scale(.1)	
#		self.h2_1_WG_presel.Scale(.1)	
#		self.h3_WG_presel.Scale(.1)	
#		self.h4_WG_presel.Scale(.1)	
#		self.h5_WG_presel.Scale(.1)	
#		self.h6_WG_presel.Scale(.1)	
#		self.h10_WG_presel.Scale(.1)	
		
		self.h1_ZG.Scale(.1)	
		self.h2_ZG.Scale(.1)	
		self.h2_1_ZG.Scale(.1)	
		self.h3_ZG.Scale(.1)	
		self.h4_ZG.Scale(.1)	
		self.h5_ZG.Scale(.1)	
		self.h6_ZG.Scale(.1)	
		self.h7_ZG.Scale(.1)	
		self.h8_ZG.Scale(.1)	
		self.h9_ZG.Scale(.1)	
		self.h10_ZG.Scale(.1)	
#		self.h11_ZG.Scale(.1)	
		self.h12_ZG.Scale(.1)	
		self.h13_ZG.Scale(.1)	
		self.p1_ZG.Scale(.1)	
		self.p1_1_ZG.Scale(.1)	
		self.p2_ZG.Scale(.1)	
		self.p3_ZG.Scale(.1)	
		self.p4_ZG.Scale(.1)	
		self.p5_ZG.Scale(.1)	
		self.p10_ZG.Scale(.1)	
		self.f1_ZG.Scale(.1)	
		self.f1_1_ZG.Scale(.1)	
		self.f2_ZG.Scale(.1)	
		self.f3_ZG.Scale(.1)	
		self.f4_ZG.Scale(.1)	
		self.f5_ZG.Scale(.1)	
		self.f10_ZG.Scale(.1)	
		
#		self.h1_ZG_presel.Scale(.1)	
#		self.h2_ZG_presel.Scale(.1)	
#		self.h2_1_ZG_presel.Scale(.1)	
#		self.h3_ZG_presel.Scale(.1)	
#		self.h4_ZG_presel.Scale(.1)	
#		self.h5_ZG_presel.Scale(.1)	
#		self.h6_ZG_presel.Scale(.1)	
#		self.h10_ZG_presel.Scale(.1)	
		
		self.h1_GJ.Scale(.1)	
		self.h2_GJ.Scale(.1)	
		self.h2_1_GJ.Scale(.1)	
		self.h3_GJ.Scale(.1)	
		self.h4_GJ.Scale(.1)	
		self.h5_GJ.Scale(.1)	
		self.h6_GJ.Scale(.1)	
		self.h7_GJ.Scale(.1)	
		self.h8_GJ.Scale(.1)	
		self.h9_GJ.Scale(.1)	
		self.h10_GJ.Scale(.1)	
#		self.h11_GJ.Scale(.1)	
		self.h12_GJ.Scale(.1)	
		self.h13_GJ.Scale(.1)	
		self.p1_GJ.Scale(.1)	
		self.p1_1_GJ.Scale(.1)	
		self.p2_GJ.Scale(.1)	
		self.p3_GJ.Scale(.1)	
		self.p4_GJ.Scale(.1)	
		self.p5_GJ.Scale(.1)	
		self.p10_GJ.Scale(.1)	
		self.f1_GJ.Scale(.1)	
		self.f1_1_GJ.Scale(.1)	
		self.f2_GJ.Scale(.1)	
		self.f3_GJ.Scale(.1)	
		self.f4_GJ.Scale(.1)	
		self.f5_GJ.Scale(.1)	
		self.f10_GJ.Scale(.1)	
		
#		self.h1_GJ_presel.Scale(.1)	
#		self.h2_GJ_presel.Scale(.1)	
#		self.h2_1_GJ_presel.Scale(.1)	
#		self.h3_GJ_presel.Scale(.1)	
#		self.h4_GJ_presel.Scale(.1)	
#		self.h5_GJ_presel.Scale(.1)	
#		self.h6_GJ_presel.Scale(.1)	
#		self.h10_GJ_presel.Scale(.1)	
		
		self.h1_TT.Scale(.1)	
		self.h2_TT.Scale(.1)	
		self.h2_1_TT.Scale(.1)	
		self.h3_TT.Scale(.1)	
		self.h4_TT.Scale(.1)	
		self.h5_TT.Scale(.1)	
		self.h6_TT.Scale(.1)	
		self.h7_TT.Scale(.1)	
		self.h8_TT.Scale(.1)	
		self.h9_TT.Scale(.1)	
		self.h10_TT.Scale(.1)	
#		self.h11_TT.Scale(.1)	
		self.h12_TT.Scale(.1)	
		self.h13_TT.Scale(.1)	
		self.p1_TT.Scale(.1)	
		self.p1_1_TT.Scale(.1)	
		self.p2_TT.Scale(.1)	
		self.p3_TT.Scale(.1)	
		self.p4_TT.Scale(.1)	
		self.p5_TT.Scale(.1)	
		self.p10_TT.Scale(.1)	
		self.f1_TT.Scale(.1)	
		self.f1_1_TT.Scale(.1)	
		self.f2_TT.Scale(.1)	
		self.f3_TT.Scale(.1)	
		self.f4_TT.Scale(.1)	
		self.f5_TT.Scale(.1)	
		self.f10_TT.Scale(.1)	
		
#		self.h1_TT_presel.Scale(.1)	
#		self.h2_TT_presel.Scale(.1)	
#		self.h2_1_TT_presel.Scale(.1)	
#		self.h3_TT_presel.Scale(.1)	
#		self.h4_TT_presel.Scale(.1)	
#		self.h5_TT_presel.Scale(.1)	
#		self.h6_TT_presel.Scale(.1)	
#		self.h10_TT_presel.Scale(.1)	
		
		self.h1_QCD.Scale(.1)	
		self.h2_QCD.Scale(.1)	
		self.h2_1_QCD.Scale(.1)	
		self.h3_QCD.Scale(.1)	
		self.h4_QCD.Scale(.1)	
		self.h5_QCD.Scale(.1)	
		self.h6_QCD.Scale(.1)	
		self.h7_QCD.Scale(.1)	
		self.h8_QCD.Scale(.1)	
		self.h9_QCD.Scale(.1)	
		self.h10_QCD.Scale(.1)	
#		self.h11_QCD.Scale(.1)	
		self.h12_QCD.Scale(.1)	
		self.h13_QCD.Scale(.1)	
		self.p1_QCD.Scale(.1)	
		self.p1_1_QCD.Scale(.1)	
		self.p2_QCD.Scale(.1)	
		self.p3_QCD.Scale(.1)	
		self.p4_QCD.Scale(.1)	
		self.p5_QCD.Scale(.1)	
		self.p10_QCD.Scale(.1)	
		self.f1_QCD.Scale(.1)	
		self.f1_1_QCD.Scale(.1)	
		self.f2_QCD.Scale(.1)	
		self.f3_QCD.Scale(.1)	
		self.f4_QCD.Scale(.1)	
		self.f5_QCD.Scale(.1)	
		self.f10_QCD.Scale(.1)	
		
#		self.h1_QCD_presel.Scale(.1)	
#		self.h2_QCD_presel.Scale(.1)	
#		self.h2_1_QCD_presel.Scale(.1)	
#		self.h3_QCD_presel.Scale(.1)	
#		self.h4_QCD_presel.Scale(.1)	
#		self.h5_QCD_presel.Scale(.1)	
#		self.h6_QCD_presel.Scale(.1)	
#		self.h10_QCD_presel.Scale(.1)	
		
		self.h1_tot.Scale(.1)	
		self.h2_tot.Scale(.1)	
		self.h2_1_tot.Scale(.1)	
		self.h3_tot.Scale(.1)	
		self.h4_tot.Scale(.1)	
		self.h5_tot.Scale(.1)	
		self.h6_tot.Scale(.1)	
		self.h7_tot.Scale(.1)	
		self.h8_tot.Scale(.1)	
		self.h9_tot.Scale(.1)	
		self.h10_tot.Scale(.1)	
		self.p1_tot.Scale(.1)	
		self.p1_1_tot.Scale(.1)	
		self.p2_tot.Scale(.1)	
		self.p3_tot.Scale(.1)	
		self.p4_tot.Scale(.1)	
		self.p5_tot.Scale(.1)	
		self.f1_tot.Scale(.1)	
		self.f1_1_tot.Scale(.1)	
		self.f2_tot.Scale(.1)	
		self.f3_tot.Scale(.1)	
		self.f4_tot.Scale(.1)	
		self.f5_tot.Scale(.1)	
		self.f10_tot.Scale(.1)	
		
#		self.h1_tot_presel.Scale(.1)	
#		self.h2_tot_presel.Scale(.1)	
#		self.h2_1_tot_presel.Scale(.1)	
#		self.h3_tot_presel.Scale(.1)	
#		self.h4_tot_presel.Scale(.1)	
#		self.h5_tot_presel.Scale(.1)	
#		self.h6_tot_presel.Scale(.1)	
#		self.h10_tot_presel.Scale(.1)	


		FindAndSetMax(self.h1_sig10, self.h1_sig25, self.h1_sig50, self.h1_sig75, self.h1_WG, self.h1_ZG, self.h1_GJ, self.h1_TT, self.h1_QCD, self.h1_Data, self.h1_tot)
		FindAndSetMax(self.h2_sig10, self.h2_sig25, self.h2_sig50, self.h2_sig75, self.h2_WG, self.h2_ZG, self.h2_GJ, self.h2_TT, self.h2_QCD, self.h2_Data, self.h2_tot)
		FindAndSetMax(self.h2_1_sig10, self.h2_1_sig25, self.h2_1_sig50, self.h2_1_sig75, self.h2_1_WG, self.h2_1_ZG, self.h2_1_GJ, self.h2_1_TT, self.h2_1_QCD, self.h2_1_Data, self.h2_1_tot)
		FindAndSetMax(self.h3_sig10, self.h3_sig25, self.h3_sig50, self.h3_sig75, self.h3_WG, self.h3_ZG, self.h3_GJ, self.h3_TT, self.h3_QCD, self.h3_Data, self.h3_tot)
		FindAndSetMax(self.h4_sig10, self.h4_sig25, self.h4_sig50, self.h4_sig75, self.h4_WG, self.h4_ZG, self.h4_GJ, self.h4_TT, self.h4_QCD, self.h4_Data, self.h4_tot)
		FindAndSetMax(self.h5_sig10, self.h5_sig25, self.h5_sig50, self.h5_sig75, self.h5_WG, self.h5_ZG, self.h5_GJ, self.h5_TT, self.h5_QCD, self.h5_Data, self.h5_tot)
		FindAndSetMax(self.h6_sig10, self.h6_sig25, self.h6_sig50, self.h6_sig75, self.h6_WG, self.h6_ZG, self.h6_GJ, self.h6_TT, self.h6_QCD, self.h6_Data, self.h6_tot)
		FindAndSetMax(self.h7_sig10, self.h7_sig25, self.h7_sig50, self.h7_sig75, self.h7_WG, self.h7_ZG, self.h7_GJ, self.h7_TT, self.h7_QCD, self.h7_Data, self.h7_tot)
		FindAndSetMax(self.h8_sig10, self.h8_sig25, self.h8_sig50, self.h8_sig75, self.h8_WG, self.h8_ZG, self.h8_GJ, self.h8_TT, self.h8_QCD, self.h8_Data, self.h8_tot)
		FindAndSetMax(self.h9_sig10, self.h9_sig25, self.h9_sig50, self.h9_sig75, self.h9_WG, self.h9_ZG, self.h9_GJ, self.h9_TT, self.h9_QCD, self.h9_Data, self.h9_tot)
		FindAndSetMax(self.h10_sig10, self.h10_sig25, self.h10_sig50, self.h10_sig75, self.h10_WG, self.h10_ZG, self.h10_GJ, self.h10_TT, self.h10_QCD, self.h10_Data, self.h10_tot)
#		FindAndSetMax(self.h11_sig10, self.h11_sig25, self.h11_sig50, self.h11_sig75, self.h11_WG, self.h11_ZG, self.h11_GJ, self.h11_TT, self.h11_QCD, self.h11_Data)
		FindAndSetMax(self.h12_sig10, self.h12_sig25, self.h12_sig50, self.h12_sig75, self.h12_WG, self.h12_ZG, self.h12_GJ, self.h12_TT, self.h12_QCD, self.h12_Data)
		FindAndSetMax(self.h13_sig10, self.h13_sig25, self.h13_sig50, self.h13_sig75, self.h13_WG, self.h13_ZG, self.h13_GJ, self.h13_TT, self.h13_QCD, self.h13_Data)
		
#		FindAndSetMax(self.h1_sig10_presel, self.h1_sig25_presel, self.h1_sig50_presel, self.h1_sig75_presel, self.h1_WG_presel, self.h1_ZG_presel, self.h1_GJ_presel, self.h1_TT_presel, self.h1_QCD_presel, self.h1_Data_presel, self.h1_tot_presel)
#		FindAndSetMax(self.h2_sig10_presel, self.h2_sig25_presel, self.h2_sig50_presel, self.h2_sig75_presel, self.h2_WG_presel, self.h2_ZG_presel, self.h2_GJ_presel, self.h2_TT_presel, self.h2_QCD_presel, self.h2_Data_presel, self.h2_tot_presel)
#		FindAndSetMax(self.h2_1_sig10_presel, self.h2_1_sig25_presel, self.h2_1_sig50_presel, self.h2_1_sig75_presel, self.h2_1_WG_presel, self.h2_1_ZG_presel, self.h2_1_GJ_presel, self.h2_1_TT_presel, self.h2_1_QCD_presel, self.h2_1_Data_presel, self.h2_1_tot_presel)
#		FindAndSetMax(self.h3_sig10_presel, self.h3_sig25_presel, self.h3_sig50_presel, self.h3_sig75_presel, self.h3_WG_presel, self.h3_ZG_presel, self.h3_GJ_presel, self.h3_TT_presel, self.h3_QCD_presel, self.h3_Data_presel, self.h3_tot_presel)
#		FindAndSetMax(self.h4_sig10_presel, self.h4_sig25_presel, self.h4_sig50_presel, self.h4_sig75_presel, self.h4_WG_presel, self.h4_ZG_presel, self.h4_GJ_presel, self.h4_TT_presel, self.h4_QCD_presel, self.h4_Data_presel, self.h4_tot_presel)
#		FindAndSetMax(self.h5_sig10_presel, self.h5_sig25_presel, self.h5_sig50_presel, self.h5_sig75_presel, self.h5_WG_presel, self.h5_ZG_presel, self.h5_GJ_presel, self.h5_TT_presel, self.h5_QCD_presel, self.h5_Data_presel, self.h5_tot_presel)
#		FindAndSetMax(self.h6_sig10_presel, self.h6_sig25_presel, self.h6_sig50_presel, self.h6_sig75_presel, self.h6_WG_presel, self.h6_ZG_presel, self.h6_GJ_presel, self.h6_TT_presel, self.h6_QCD_presel, self.h6_Data_presel, self.h6_tot_presel)
#		FindAndSetMax(self.h10_sig10_presel, self.h10_sig25_presel, self.h10_sig50_presel, self.h10_sig75_presel, self.h10_WG_presel, self.h10_ZG_presel, self.h10_GJ_presel, self.h10_TT_presel, self.h10_QCD_presel, self.h10_Data_presel, self.h10_tot_presel)
		
		FindAndSetMax(self.p1_sig10, self.p1_sig25, self.p1_sig50, self.p1_sig75, self.p1_WG, self.p1_ZG, self.p1_GJ, self.p1_TT, self.p1_QCD, self.p1_Data, self.p1_tot)
		FindAndSetMax(self.p1_1_sig10, self.p1_1_sig25, self.p1_1_sig50, self.p1_1_sig75, self.p1_1_WG, self.p1_1_ZG, self.p1_1_GJ, self.p1_1_TT, self.p1_1_QCD, self.p1_1_Data, self.p1_1_tot)
		FindAndSetMax(self.p2_sig10, self.p2_sig25, self.p2_sig50, self.p2_sig75, self.p2_WG, self.p2_ZG, self.p2_GJ, self.p2_TT, self.p2_QCD, self.p2_Data, self.p2_tot)
		FindAndSetMax(self.p3_sig10, self.p3_sig25, self.p3_sig50, self.p3_sig75, self.p3_WG, self.p3_ZG, self.p3_GJ, self.p3_TT, self.p3_QCD, self.p3_Data, self.p3_tot)
		FindAndSetMax(self.p4_sig10, self.p4_sig25, self.p4_sig50, self.p4_sig75, self.p4_WG, self.p4_ZG, self.p4_GJ, self.p4_TT, self.p4_QCD, self.p4_Data, self.p4_tot)
		FindAndSetMax(self.p5_sig10, self.p5_sig25, self.p5_sig50, self.p5_sig75, self.p5_WG, self.p5_ZG, self.p5_GJ, self.p5_TT, self.p5_QCD, self.p5_Data, self.p5_tot)
		FindAndSetMax(self.p10_sig10, self.p10_sig25, self.p10_sig50, self.p10_sig75, self.p10_WG, self.p10_ZG, self.p10_GJ, self.p10_TT, self.p10_QCD, self.p10_Data, self.p10_tot)
		
		FindAndSetMax(self.f1_sig10, self.f1_sig25, self.f1_sig50, self.f1_sig75, self.f1_WG, self.f1_ZG, self.f1_GJ, self.f1_TT, self.f1_QCD, self.f1_Data, self.f1_tot)
		FindAndSetMax(self.f1_1_sig10, self.f1_1_sig25, self.f1_1_sig50, self.f1_1_sig75, self.f1_1_WG, self.f1_1_ZG, self.f1_1_GJ, self.f1_1_TT, self.f1_1_QCD, self.f1_1_Data, self.f1_1_tot)
		FindAndSetMax(self.f2_sig10, self.f2_sig25, self.f2_sig50, self.f2_sig75, self.f2_WG, self.f2_ZG, self.f2_GJ, self.f2_TT, self.f2_QCD, self.f2_Data, self.f2_tot)
		FindAndSetMax(self.f3_sig10, self.f3_sig25, self.f3_sig50, self.f3_sig75, self.f3_WG, self.f3_ZG, self.f3_GJ, self.f3_TT, self.f3_QCD, self.f3_Data, self.f3_tot)
		FindAndSetMax(self.f4_sig10, self.f4_sig25, self.f4_sig50, self.f4_sig75, self.f4_WG, self.f4_ZG, self.f4_GJ, self.f4_TT, self.f4_QCD, self.f4_Data, self.f4_tot)
		FindAndSetMax(self.f5_sig10, self.f5_sig25, self.f5_sig50, self.f5_sig75, self.f5_WG, self.f5_ZG, self.f5_GJ, self.f5_TT, self.f5_QCD, self.f5_Data, self.f5_tot)
		FindAndSetMax(self.f10_sig10, self.f10_sig25, self.f10_sig50, self.f10_sig75, self.f10_WG, self.f10_ZG, self.f10_GJ, self.f10_TT, self.f10_QCD, self.f10_Data, self.f10_tot)
		
		print("GJ Softdrop Mass Integral: "+str(self.h1_GJ.Integral()))
		print("Data Softdrop Mass Integral: "+str(self.h1_Data.Integral()))
		print("GJ/Data: "+str(self.h1_GJ.Integral()/self.h1_Data.Integral()))

		LUMI = 5.982 #Temporary luminosity with 10% of 2018 data
        	cmsextra = "Preliminary"

		ROOT.gStyle.SetOptStat(0)

		c1 = TCanvas()
		c1.cd()
		c1.SetLogy()
		p12 = TPad("pad1", "tall", 0,0.175,1,1)
		p12.SetLogy()
		p22 = TPad("pad2", "short", 0,0.0,1.0,0.23)
		p22.SetBottomMargin(0.35)
		p12.Draw()
		p22.Draw()
		p12.cd() #top
		self.h1_GJ.SetTitle("Softdrop Mass")
#		self.h1_tot.Draw("hist")
		self.h1_GJ.Draw("same hist")
		self.h1_Data.Draw("same histe")
		self.h1_QCD.Draw("same hist")
		self.h1_WG.Draw("same hist")
		self.h1_TT.Draw("same hist")
		self.h1_ZG.Draw("same hist")
#		self.h1_sig10.Draw("same hist")
		self.h1_sig25.Draw("same hist")
#		self.h1_sig50.Draw("same hist")
		self.h1_sig75.Draw("same hist")
		l1 = TLegend(.68, .53, .89, .89)
		l1.SetFillColor(0)
		l1.SetLineColor(0)
                l1.AddEntry(self.h1_Data, "10% of 2018 Data")
#                l1.AddEntry(self.h1_tot, "Total Background MC")
                l1.AddEntry(self.h1_GJ, "Gamma+Jet MC")
                l1.AddEntry(self.h1_TT, "TTBar MC")
                l1.AddEntry(self.h1_WG, "W+Gamma MC")
                l1.AddEntry(self.h1_ZG, "Z+Gamma MC")
                l1.AddEntry(self.h1_QCD, "QCD MC")
#		l1.AddEntry(self.h1_sig10, "Z' 10 GeV MC")
		l1.AddEntry(self.h1_sig25, "Z' 25 GeV MC")
#		l1.AddEntry(self.h1_sig50, "Z' 50 GeV MC")
		l1.AddEntry(self.h1_sig75, "Z' 75 GeV MC")
                l1.Draw()
#		gPad.SetLogy()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
		p22.cd() #bottom
		cheap1 = makeCheap(self.h1_Data)
		cheap1.Draw("hist")
		pull1 = makePull(self.h1_Data, self.h1_GJ)
		pull1.Draw("esame")
		p22.RedrawAxis()
		c1.SaveAs("./plots/"+name+"_soft.png")
		c1.SaveAs("./plots/"+name+"_soft.root")
		c1.Close()
		

		c2 = TCanvas()
		c2.cd()
		c2.SetLogy()
		p12 = TPad("pad1", "tall", 0,0.175,1,1)
		p12.SetLogy()
		p22 = TPad("pad2", "short", 0,0.0,1.0,0.23)
		p22.SetBottomMargin(0.35)
		p12.Draw()
		p22.Draw()
		p12.cd() #top
		self.h2_GJ.SetTitle("Jet pT")
#		self.h2_tot.Draw("hist")
		self.h2_GJ.Draw("same hist")
		self.h2_Data.Draw("same histe")
		self.h2_QCD.Draw("same hist")
		self.h2_WG.Draw("same hist")
		self.h2_TT.Draw("same hist")
		self.h2_ZG.Draw("same hist")
#		self.h2_sig10.Draw("same hist")
		self.h2_sig25.Draw("same hist")
#		self.h2_sig50.Draw("same hist")
		self.h2_sig75.Draw("same hist")
		l2 = TLegend(.68, .53, .89, .89)
		l2.SetFillColor(0)
		l2.SetLineColor(0)
                l2.AddEntry(self.h2_Data, "10% of 2018 Data")
#                l2.AddEntry(self.h2_tot, "Total Background MC")
                l2.AddEntry(self.h2_GJ, "Gamma+Jet MC")
                l2.AddEntry(self.h2_TT, "TTBar MC")
                l2.AddEntry(self.h2_WG, "W+Gamma MC")
                l2.AddEntry(self.h2_ZG, "Z+Gamma MC")
                l2.AddEntry(self.h2_QCD, "QCD MC")
#		l2.AddEntry(self.h2_sig10, "Z' 10 GeV MC")
		l2.AddEntry(self.h2_sig25, "Z' 25 GeV MC")
#		l2.AddEntry(self.h2_sig50, "Z' 50 GeV MC")
		l2.AddEntry(self.h2_sig75, "Z' 75 GeV MC")
                l2.Draw()
#		gPad.SetLogy()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
		p22.cd() #bottom
		cheap2 = makeCheap(self.h2_Data)
		cheap2.Draw("hist")
		pull2 = makePull(self.h2_Data, self.h2_GJ)
		pull2.Draw("esame")
		p22.RedrawAxis()
		c2.SaveAs("./plots/"+name+"_jet_pt.png")
		c2.Close()
		
		c3 = TCanvas()
		c3.cd()
		c3.SetLogy()
		p12 = TPad("pad1", "tall", 0,0.175,1,1)
		p12.SetLogy()
		p22 = TPad("pad2", "short", 0,0.0,1.0,0.23)
		p22.SetBottomMargin(0.35)
		p12.Draw()
		p22.Draw()
		p12.cd() #top
		self.h3_GJ.SetTitle("Jet Eta")
#		self.h3_tot.Draw("hist")
		self.h3_GJ.Draw("same hist")
		self.h3_Data.Draw("same histe")
		self.h3_QCD.Draw("same hist")
		self.h3_WG.Draw("same hist")
		self.h3_TT.Draw("same hist")
		self.h3_ZG.Draw("same hist")
#		self.h3_sig10.Draw("same hist")
		self.h3_sig25.Draw("same hist")
#		self.h3_sig50.Draw("same hist")
		self.h3_sig75.Draw("same hist")
		l3 = TLegend(.68, .53, .89, .89)
		l3.SetFillColor(0)
		l3.SetLineColor(0)
                l3.AddEntry(self.h3_Data, "10% of 2018 Data")
#                l3.AddEntry(self.h3_tot, "Total Background MC")
                l3.AddEntry(self.h3_GJ, "Gamma+Jet MC")
                l3.AddEntry(self.h3_TT, "TTBar MC")
                l3.AddEntry(self.h3_WG, "W+Gamma MC")
                l3.AddEntry(self.h3_ZG, "Z+Gamma MC")
                l3.AddEntry(self.h3_QCD, "QCD MC")
#		l3.AddEntry(self.h3_sig10, "Z' 10 GeV MC")
		l3.AddEntry(self.h3_sig25, "Z' 25 GeV MC")
#		l3.AddEntry(self.h3_sig50, "Z' 50 GeV MC")
		l3.AddEntry(self.h3_sig75, "Z' 75 GeV MC")
                l3.Draw()
#		gPad.SetLogy()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
		p22.cd() #bottom
		cheap2 = makeCheap(self.h3_Data)
		cheap2.Draw("hist")
		pull3 = makePull(self.h3_Data, self.h3_GJ)
		pull3.Draw("esame")
		p22.RedrawAxis()
		c3.SaveAs("./plots/"+name+"_jet_eta.png")
		c3.Close()

		c4 = TCanvas()
		c4.cd()
		c4.SetLogy()
		p12 = TPad("pad1", "tall", 0,0.175,1,1)
		p12.SetLogy()
		p22 = TPad("pad2", "short", 0,0.0,1.0,0.23)
		p22.SetBottomMargin(0.35)
		p12.Draw()
		p22.Draw()
		p12.cd() #top
		self.h4_GJ.SetTitle("Photon pT")
#		self.h4_tot.Draw("hist")
		self.h4_GJ.Draw("same hist")
		self.h4_Data.Draw("same histe")
		self.h4_QCD.Draw("same hist")
		self.h4_WG.Draw("same hist")
		self.h4_TT.Draw("same hist")
		self.h4_ZG.Draw("same hist")
#		self.h4_sig10.Draw("same hist")
		self.h4_sig25.Draw("same hist")
#		self.h4_sig50.Draw("same hist")
		self.h4_sig75.Draw("same hist")
		l4 = TLegend(.68, .53, .89, .89)
		l4.SetFillColor(0)
		l4.SetLineColor(0)
                l4.AddEntry(self.h4_Data, "10% of 2018 Data")
#                l4.AddEntry(self.h4_tot, "Total Background MC")
                l4.AddEntry(self.h4_GJ, "Gamma+Jet MC")
                l4.AddEntry(self.h4_TT, "TTBar MC")
                l4.AddEntry(self.h4_WG, "W+Gamma MC")
                l4.AddEntry(self.h4_ZG, "Z+Gamma MC")
                l4.AddEntry(self.h4_QCD, "QCD MC")
#		l4.AddEntry(self.h4_sig10, "Z' 10 GeV MC")
		l4.AddEntry(self.h4_sig25, "Z' 25 GeV MC")
#		l4.AddEntry(self.h4_sig50, "Z' 50 GeV MC")
		l4.AddEntry(self.h4_sig75, "Z' 75 GeV MC")
                l4.Draw()
#		gPad.SetLogy()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
		p22.cd() #bottom
		cheap4 = makeCheap(self.h4_Data)
		cheap4.Draw("hist")
		pull4 = makePull(self.h4_Data, self.h4_GJ)
		pull4.Draw("esame")
		p22.RedrawAxis()
		c4.SaveAs("./plots/"+name+"_photon_pt.png")
		c4.Close()

		c5 = TCanvas()
		c5.cd()
		c5.SetLogy()
		p12 = TPad("pad1", "tall", 0,0.175,1,1)
		p12.SetLogy()
		p22 = TPad("pad2", "short", 0,0.0,1.0,0.23)
		p22.SetBottomMargin(0.35)
		p12.Draw()
		p22.Draw()
		p12.cd() #top
		self.h5_GJ.SetTitle("Rho")
#		self.h5_tot.Draw("hist")
		self.h5_GJ.Draw("same hist")
		self.h5_Data.Draw("same histe")
		self.h5_QCD.Draw("same hist")
		self.h5_WG.Draw("same hist")
		self.h5_TT.Draw("same hist")
		self.h5_ZG.Draw("same hist")
#		self.h5_sig10.Draw("same hist")
		self.h5_sig25.Draw("same hist")
#		self.h5_sig50.Draw("same hist")
		self.h5_sig75.Draw("same hist")
		l5 = TLegend(.68, .53, .89, .89)
		l5.SetFillColor(0)
		l5.SetLineColor(0)
                l5.AddEntry(self.h5_Data, "10% of 2018 Data")
#                l5.AddEntry(self.h5_tot, "Total Background MC")
                l5.AddEntry(self.h5_GJ, "Gamma+Jet MC")
                l5.AddEntry(self.h5_TT, "TTBar MC")
                l5.AddEntry(self.h5_WG, "W+Gamma MC")
                l5.AddEntry(self.h5_ZG, "Z+Gamma MC")
                l5.AddEntry(self.h5_QCD, "QCD MC")
#		l5.AddEntry(self.h5_sig10, "Z' 10 GeV MC")
		l5.AddEntry(self.h5_sig25, "Z' 25 GeV MC")
#		l5.AddEntry(self.h5_sig50, "Z' 50 GeV MC")
		l5.AddEntry(self.h5_sig75, "Z' 75 GeV MC")
                l5.Draw()
#		gPad.SetLogy()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
		p22.cd() #bottom
		cheap5 = makeCheap(self.h5_Data)
		cheap5.Draw("hist")
		pull5 = makePull(self.h5_Data, self.h5_GJ)
		pull5.Draw("esame")
		p22.RedrawAxis()
		c5.SaveAs("./plots/"+name+"_rho.png")
		c5.Close()
	
		#Fix N2 Binning (May be Obsolete)
#		self.h6_tot.GetXaxis().SetRange(1,50)
#		self.h6_GJ.GetXaxis().SetRange(1,50)
#		self.h6_Data.GetXaxis().SetRange(1,50)
#		self.h6_WG.GetXaxis().SetRange(1,50)
#		self.h6_TT.GetXaxis().SetRange(1,50)
#		self.h6_ZG.GetXaxis().SetRange(1,50)
#		self.h6_QCD.GetXaxis().SetRange(1,50)
#		self.h6_sig10.GetXaxis().SetRange(1,50)
#		self.h6_sig25.GetXaxis().SetRange(1,50)
#		self.h6_sig50.GetXaxis().SetRange(1,50)
#		self.h6_sig75.GetXaxis().SetRange(1,50)
	
		c6 = TCanvas()
		c6.cd()
		c6.SetLogy()
		p12 = TPad("pad1", "tall", 0,0.175,1,1)
		p12.SetLogy()
		p22 = TPad("pad2", "short", 0,0.0,1.0,0.23)
		p22.SetBottomMargin(0.35)
		p12.Draw()
		p22.Draw()
		p12.cd() #top
		self.h6_GJ.SetTitle("N2")
#		self.h6_tot.Draw("hist")
		self.h6_GJ.Draw("same hist")
		self.h6_Data.Draw("same histe")
		self.h6_QCD.Draw("same hist")
		self.h6_WG.Draw("same hist")
		self.h6_TT.Draw("same hist")
		self.h6_ZG.Draw("same hist")
#		self.h6_sig10.Draw("same hist")
		self.h6_sig25.Draw("same hist")
#		self.h6_sig50.Draw("same hist")
		self.h6_sig75.Draw("same hist")
		l6 = TLegend(.12, .53, .33, .89)
		l6.SetFillColor(0)
		l6.SetLineColor(0)
                l6.AddEntry(self.h6_Data, "10% of 2018 Data")
#                l6.AddEntry(self.h6_tot, "Total Background MC")
                l6.AddEntry(self.h6_GJ, "Gamma+Jet MC")
                l6.AddEntry(self.h6_TT, "TTBar MC")
                l6.AddEntry(self.h6_WG, "W+Gamma MC")
                l6.AddEntry(self.h6_ZG, "Z+Gamma MC")
                l6.AddEntry(self.h6_QCD, "QCD MC")
#		l6.AddEntry(self.h6_sig10, "Z' 10 GeV MC")
		l6.AddEntry(self.h6_sig25, "Z' 25 GeV MC")
#		l6.AddEntry(self.h6_sig50, "Z' 50 GeV MC")
		l6.AddEntry(self.h6_sig75, "Z' 75 GeV MC")
                l6.Draw()
#		gPad.SetLogy()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
		p22.cd() #bottom
		cheap6 = makeCheap(self.h6_Data)
		cheap6.Draw("hist")
		pull6 = makePull(self.h6_Data, self.h6_GJ)
		pull6.Draw("esame")
		p22.RedrawAxis()
		c6.SaveAs("./plots/"+name+"_n2.png")
		c6.Close()
		
		c10 = TCanvas()
		c10.cd()
		c10.SetLogy()
		p12 = TPad("pad1", "tall", 0,0.175,1,1)
		p12.SetLogy()
		p22 = TPad("pad2", "short", 0,0.0,1.0,0.23)
		p22.SetBottomMargin(0.35)
		p12.Draw()
		p22.Draw()
		p12.cd() #top
		self.h10_GJ.SetTitle("Photon Eta")
#		self.h10_tot.Draw("hist")
		self.h10_GJ.Draw("same hist")
		self.h10_Data.Draw("same histe")
		self.h10_QCD.Draw("same hist")
		self.h10_WG.Draw("same hist")
		self.h10_TT.Draw("same hist")
		self.h10_ZG.Draw("same hist")
#		self.h10_sig10.Draw("same hist")
		self.h10_sig25.Draw("same hist")
#		self.h10_sig50.Draw("same hist")
		self.h10_sig75.Draw("same hist")
		l10 = TLegend(.12, .53, .30, .89)
		l10.SetFillColor(0)
		l10.SetLineColor(0)
                l10.AddEntry(self.h10_Data, "10% of 2018 Data")
#                l10.AddEntry(self.h10_tot, "Total Background MC")
                l10.AddEntry(self.h10_GJ, "Gamma+Jet MC")
                l10.AddEntry(self.h10_TT, "TTBar MC")
                l10.AddEntry(self.h10_WG, "W+Gamma MC")
                l10.AddEntry(self.h10_ZG, "Z+Gamma MC")
                l10.AddEntry(self.h10_QCD, "QCD MC")
		l10.AddEntry(self.h10_sig10, "Z' 10 GeV MC")
		l10.AddEntry(self.h10_sig25, "Z' 25 GeV MC")
		l10.AddEntry(self.h10_sig50, "Z' 50 GeV MC")
		l10.AddEntry(self.h10_sig75, "Z' 75 GeV MC")
                l10.Draw()
#		gPad.SetLogy()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
		p22.cd() #bottom
		cheap10 = makeCheap(self.h10_Data)
		cheap10.Draw("hist")
		pull10 = makePull(self.h10_Data, self.h10_GJ)
		pull10.Draw("esame")
		p22.RedrawAxis()
		c10.SaveAs("./plots/"+name+"_photon_eta.png")
		c10.Close()

		tau32_plot = '''

		c11 = TCanvas()
		c11.cd()
		c11.SetLogy()
		p12 = TPad("pad1", "tall", 0,0.175,1,1)
		p12.SetLogy()
		p22 = TPad("pad2", "short", 0,0.0,1.0,0.23)
		p22.SetBottomMargin(0.35)
		p12.Draw()
		p22.Draw()
		p12.cd() #top
		self.h11_GJ.SetTitle("Tau32")
		self.h11_GJ.Draw("hist")
		self.h11_Data.Draw("same histe")
		self.h11_QCD.Draw("same hist")
		self.h11_WG.Draw("same hist")
		self.h11_TT.Draw("same hist")
		self.h11_ZG.Draw("same hist")
#		self.h11_sig10.Draw("same hist")
		self.h11_sig25.Draw("same hist")
#		self.h11_sig50.Draw("same hist")
		self.h11_sig75.Draw("same hist")
		l11 = TLegend(.12, .53, .30, .89)
		l11.SetFillColor(0)
		l11.SetLineColor(0)
                l11.AddEntry(self.h11_Data, "10% of 2018 Data")
#                l11.AddEntry(self.h11_tot, "Total Background MC")
                l11.AddEntry(self.h11_GJ, "Gamma+Jet MC")
                l11.AddEntry(self.h11_TT, "TTBar MC")
                l11.AddEntry(self.h11_WG, "W+Gamma MC")
                l11.AddEntry(self.h11_ZG, "Z+Gamma MC")
                l11.AddEntry(self.h11_QCD, "QCD MC")
#		l11.AddEntry(self.h11_sig10, "Z' 10 GeV MC")
		l11.AddEntry(self.h11_sig25, "Z' 25 GeV MC")
#		l11.AddEntry(self.h11_sig50, "Z' 50 GeV MC")
		l11.AddEntry(self.h11_sig75, "Z' 75 GeV MC")
                l11.Draw()
#		gPad.SetLogy()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
		p22.cd() #bottom
		cheap11 = makeCheap(self.h11_Data)
		cheap11.Draw("hist")
		pull11 = makePull(self.h11_Data, self.h11_GJ)
		pull11.Draw("esame")
		p22.RedrawAxis()
		c11.SaveAs("./plots/"+name+"_tau32.png")
		c11.Close()

		'''
		c12 = TCanvas()
		c12.cd()
		c12.SetLogy()
		p12 = TPad("pad1", "tall", 0,0.175,1,1)
		p12.SetLogy()
		p22 = TPad("pad2", "short", 0,0.0,1.0,0.23)
		p22.SetBottomMargin(0.35)
		p12.Draw()
		p22.Draw()
		p12.cd() #top
		self.h12_GJ.SetTitle("HT")
		self.h12_GJ.Draw("hist")
		self.h12_Data.Draw("same histe")
		self.h12_QCD.Draw("same hist")
		self.h12_WG.Draw("same hist")
		self.h12_TT.Draw("same hist")
		self.h12_ZG.Draw("same hist")
#		self.h12_sig10.Draw("same hist")
		self.h12_sig25.Draw("same hist")
#		self.h12_sig50.Draw("same hist")
		self.h12_sig75.Draw("same hist")
		l12 = TLegend(.70, .53, .88, .89)
		l12.SetFillColor(0)
		l12.SetLineColor(0)
                l12.AddEntry(self.h12_Data, "10% of 2018 Data")
#                l12.AddEntry(self.h12_tot, "Total Background MC")
                l12.AddEntry(self.h12_GJ, "Gamma+Jet MC")
                l12.AddEntry(self.h12_TT, "TTBar MC")
                l12.AddEntry(self.h12_WG, "W+Gamma MC")
                l12.AddEntry(self.h12_ZG, "Z+Gamma MC")
                l12.AddEntry(self.h12_QCD, "QCD MC")
#		l12.AddEntry(self.h12_sig10, "Z' 10 GeV MC")
		l12.AddEntry(self.h12_sig25, "Z' 25 GeV MC")
#		l12.AddEntry(self.h12_sig50, "Z' 50 GeV MC")
		l12.AddEntry(self.h12_sig75, "Z' 75 GeV MC")
                l12.Draw()
#		gPad.SetLogy()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
		p22.cd() #bottom
		cheap12 = makeCheap(self.h12_Data)
		cheap12.Draw("hist")
		pull12 = makePull(self.h12_Data, self.h12_GJ)
		pull12.SetMarkerSize(0.4)
		pull12.Draw("esame")
		p22.RedrawAxis()
		c12.SaveAs("./plots/"+name+"_HT.png")
		c12.Close()
		
		c13 = TCanvas()
		c13.cd()
		c13.SetLogy()
		p13 = TPad("pad1", "tall", 0,0.175,1,1)
		p13.SetLogy()
		p22 = TPad("pad2", "short", 0,0.0,1.0,0.23)
		p22.SetBottomMargin(0.35)
		p13.Draw()
		p22.Draw()
		p13.cd() #top
		self.h13_GJ.SetTitle("AK8 HT")
		self.h13_GJ.Draw("hist")
		self.h13_Data.Draw("same histe")
		self.h13_QCD.Draw("same hist")
		self.h13_WG.Draw("same hist")
		self.h13_TT.Draw("same hist")
		self.h13_ZG.Draw("same hist")
#		self.h13_sig10.Draw("same hist")
		self.h13_sig25.Draw("same hist")
#		self.h13_sig50.Draw("same hist")
		self.h13_sig75.Draw("same hist")
		l13 = TLegend(.70, .53, .88, .89)
		l13.SetFillColor(0)
		l13.SetLineColor(0)
                l13.AddEntry(self.h13_Data, "10% of 2018 Data")
#                l13.AddEntry(self.h13_tot, "Total Background MC")
                l13.AddEntry(self.h13_GJ, "Gamma+Jet MC")
                l13.AddEntry(self.h13_TT, "TTBar MC")
                l13.AddEntry(self.h13_WG, "W+Gamma MC")
                l13.AddEntry(self.h13_ZG, "Z+Gamma MC")
                l13.AddEntry(self.h13_QCD, "QCD MC")
#		l13.AddEntry(self.h13_sig10, "Z' 10 GeV MC")
		l13.AddEntry(self.h13_sig25, "Z' 25 GeV MC")
#		l13.AddEntry(self.h13_sig50, "Z' 50 GeV MC")
		l13.AddEntry(self.h13_sig75, "Z' 75 GeV MC")
                l13.Draw()
#		gPad.SetLogy()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
		p22.cd() #bottom
		cheap13 = makeCheap(self.h13_Data)
		cheap13.Draw("hist")
		pull13 = makePull(self.h13_Data, self.h13_GJ)
		pull13.SetMarkerSize(0.4)
		pull13.Draw("esame")
		p22.RedrawAxis()
		c13.SaveAs("./plots/"+name+"_HT_AK8.png")
		c13.Close()

#		c1_presel = TCanvas()
#		c1_presel.cd()
#		c1_presel.SetLogy()
#		p12 = TPad("pad1", "tall", 0,0.175,1,1)
#		p12.SetLogy()
#		p22 = TPad("pad2", "short", 0,0.0,1.0,0.23)
#		p22.SetBottomMargin(0.35)
#		p12.Draw()
#		p22.Draw()
#		p12.cd() #top
#		self.h1_GJ_presel.SetTitle("Pre-Selection Softdrop Mass")
#		self.h1_tot_presel.Draw("hist")
#		self.h1_GJ_presel.Draw("same hist")
#		self.h1_QCD_presel.Draw("same hist")
#		self.h1_Data_presel.Draw("same histe")
#		self.h1_TT.Draw("same hist")
#		self.h1_ZG_presel.Draw("same hist")
#		self.h1_WG_presel.Draw("same hist")
#		self.h1_sig10_presel.Draw("same hist")
#		self.h1_sig25_presel.Draw("same hist")
#		self.h1_sig50_presel.Draw("same hist")
#		self.h1_sig75_presel.Draw("same hist")
#		l1_presel = TLegend(.68, .53, .89, .89)
#		l1_presel.SetFillColor(0)
#		l1_presel.SetLineColor(0)
 #               l1_presel.AddEntry(self.h1_Data_presel, "10% of 2018 Data_presel")
#                l1_presel.AddEntry(self.h1_tot_presel, "Total Background MC")
 #               l1_presel.AddEntry(self.h1_GJ_presel, "Gamma+Jet MC")
  #              l1_presel.AddEntry(self.h1_TT, "TTBar MC")
   #             l1_presel.AddEntry(self.h1_WG_presel, "W+Gamma MC")
    #            l1_presel.AddEntry(self.h1_ZG_presel, "Z+Gamma MC")
     #           l1_presel.AddEntry(self.h1_QCD_presel, "QCD MC")
##		l1_presel.AddEntry(self.h1_sig10_presel, "Z' 10 GeV MC")
#		l1_presel.AddEntry(self.h1_sig25_presel, "Z' 25 GeV MC")
##		l1_presel.AddEntry(self.h1_sig50_presel, "Z' 50 GeV MC")
#		l1_presel.AddEntry(self.h1_sig75_presel, "Z' 75 GeV MC")
 #               l1_presel.Draw()
#		gPad.SetLogy()
#		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
#		p22.cd() #bottom
#		cheap1_presel = makeCheap(self.h1_Data_presel)
#		cheap1_presel.Draw("hist")
#		pull1_presel = makePull(self.h1_Data_presel, self.h1_GJ_presel)
#		pull1_presel.Draw("esame")
#		p22.RedrawAxis()
#		c1_presel.SaveAs("./plots/"+name+"_soft_presel.png")
#		c1_presel.Close()
		

#		c2_presel = TCanvas()
#		c2_presel.cd()
#		c2_presel.SetLogy()
#		p12 = TPad("pad1", "tall", 0,0.175,1,1)
#		p12.SetLogy()
#		p22 = TPad("pad2", "short", 0,0.0,1.0,0.23)
#		p22.SetBottomMargin(0.35)
#		p12.Draw()
#		p22.Draw()
#		p12.cd() #top
#		self.h2_GJ_presel.SetTitle("Pre-Selection Jet pT")
#		self.h2_tot_presel.Draw("hist")
#		self.h2_GJ_presel.Draw("same hist")
#		self.h2_QCD_presel.Draw("same hist")
#		self.h2_Data_presel.Draw("same histe")
#		self.h2_TT.Draw("same hist")
#		self.h2_ZG_presel.Draw("same hist")
#		self.h2_WG_presel.Draw("same hist")
#		self.h2_sig10_presel.Draw("same hist")
#		self.h2_sig25_presel.Draw("same hist")
#		self.h2_sig50_presel.Draw("same hist")
#		self.h2_sig75_presel.Draw("same hist")
#		l2_presel = TLegend(.68, .53, .89, .89)
#		l2_presel.SetFillColor(0)
#		l2_presel.SetLineColor(0)
 #               l2_presel.AddEntry(self.h2_Data_presel, "10% of 2018 Data_presel")
# #               l2_presel.AddEntry(self.h2_tot_presel, "Total Background MC")
   #             l2_presel.AddEntry(self.h2_GJ_presel, "Gamma+Jet MC")
    #            l2_presel.AddEntry(self.h2_TT, "TTBar MC")
#                l2_presel.AddEntry(self.h2_WG_presel, "W+Gamma MC")
 #               l2_presel.AddEntry(self.h2_ZG_presel, "Z+Gamma MC")
  #              l2_presel.AddEntry(self.h2_QCD_presel, "QCD MC")
#		l2_presel.AddEntry(self.h2_sig10_presel, "Z' 10 GeV MC")
#		l2_presel.AddEntry(self.h2_sig25_presel, "Z' 25 GeV MC")
#		l2_presel.AddEntry(self.h2_sig50_presel, "Z' 50 GeV MC")
#		l2_presel.AddEntry(self.h2_sig75_presel, "Z' 75 GeV MC")
 #               l2_presel.Draw()
##		gPad.SetLogy()
#		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
#		p22.cd() #bottom
#		cheap2_presel = makeCheap(self.h2_Data_presel)
#		cheap2_presel.Draw("hist")
#		pull2_presel = makePull(self.h2_Data_presel, self.h2_GJ_presel)
#		pull2_presel.Draw("esame")
#		p22.RedrawAxis()
#		c2_presel.SaveAs("./plots/"+name+"_jet_pt_presel.png")
#		c2_presel.Close()
		
#		c3_presel = TCanvas()
#		c3_presel.cd()
#		c3_presel.SetLogy()
#		p12 = TPad("pad1", "tall", 0,0.175,1,1)
#		p12.SetLogy()
#		p32 = TPad("pad2", "short", 0,0.0,1.0,0.23)
#		p12.Draw()
#		p32.Draw()
#		p12.cd() #top
#		self.h3_GJ_presel.SetTitle("Pre-Selection Jet Eta")
#		self.h3_tot_presel.Draw("hist")
#		self.h3_GJ_presel.Draw("same hist")
#		self.h3_QCD_presel.Draw("same hist")
#		self.h3_Data_presel.Draw("same histe")
#		self.h3_TT.Draw("same hist")
#		self.h3_ZG_presel.Draw("same hist")
#		self.h3_WG_presel.Draw("same hist")
#		self.h3_sig10_presel.Draw("same hist")
#		self.h3_sig25_presel.Draw("same hist")
#		self.h3_sig50_presel.Draw("same hist")
#		self.h3_sig75_presel.Draw("same hist")
#		l3_presel = TLegend(.68, .53, .89, .89)
#		l3_presel.SetFillColor(0)
#		l3_presel.SetLineColor(0)
 #               l3_presel.AddEntry(self.h3_Data_presel, "10% of 2018 Data_presel")
#                l3_presel.AddEntry(self.h3_tot_presel, "Total Background MC")
#                l3_presel.AddEntry(self.h3_GJ_presel, "Gamma+Jet MC")
 #               l3_presel.AddEntry(self.h3_TT, "TTBar MC")
  #              l3_presel.AddEntry(self.h3_WG_presel, "W+Gamma MC")
   #             l3_presel.AddEntry(self.h3_ZG_presel, "Z+Gamma MC")
    #            l3_presel.AddEntry(self.h3_QCD_presel, "QCD MC")
#		l3_presel.AddEntry(self.h3_sig10_presel, "Z' 10 GeV MC")
#		l3_presel.AddEntry(self.h3_sig25_presel, "Z' 25 GeV MC")
##		l3_presel.AddEntry(self.h3_sig50_presel, "Z' 50 GeV MC")
#		l3_presel.AddEntry(self.h3_sig75_presel, "Z' 75 GeV MC")
 #               l3_presel.Draw()
#		gPad.SetLogy()
#		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
#		p32.cd() #bottom
#		cheap3_presel = makeCheap(self.h3_Data_presel)
#		cheap3_presel.Draw("hist")
#		pull3_presel = makePull(self.h3_Data_presel, self.h3_GJ_presel)
#		pull3_presel.Draw("esame")
#		p32.RedrawAxis()
#		c3_presel.SaveAs("./plots/"+name+"_jet_eta_presel.png")
#		c3_presel.Close()

#		c4_presel = TCanvas()
#		c4_presel.cd()
#		c4_presel.SetLogy()
#		p12 = TPad("pad1", "tall", 0,0.175,1,1)
#		p12.SetLogy()
#		p22 = TPad("pad2", "short", 0,0.0,1.0,0.23)
#		p22.SetBottomMargin(0.35)
#		p12.Draw()
#		p22.Draw()
#		p12.cd() #top
#		self.h4_GJ_presel.SetTitle("Pre-Selection Photon pT")
#		self.h4_tot_presel.Draw("hist")
#		self.h4_GJ_presel.Draw("same hist")
#		self.h4_QCD_presel.Draw("same hist")
#		self.h4_Data_presel.Draw("same histe")
#		self.h4_TT.Draw("same hist")
#		self.h4_ZG_presel.Draw("same hist")
#		self.h4_WG_presel.Draw("same hist")
#		self.h4_sig10_presel.Draw("same hist")
#		self.h4_sig25_presel.Draw("same hist")
#		self.h4_sig50_presel.Draw("same hist")
#		self.h4_sig75_presel.Draw("same hist")
#		l4_presel = TLegend(.68, .53, .89, .89)
#		l4_presel.SetFillColor(0)
#		l4_presel.SetLineColor(0)
 #               l4_presel.AddEntry(self.h4_Data_presel, "10% of 2018 Data_presel")
#                l4_presel.AddEntry(self.h4_tot_presel, "Total Background MC")
  #              l4_presel.AddEntry(self.h4_GJ_presel, "Gamma+Jet MC")
   #             l4_presel.AddEntry(self.h4_TT, "TTBar MC")
    #            l4_presel.AddEntry(self.h4_WG_presel, "W+Gamma MC")
     #           l4_presel.AddEntry(self.h4_ZG_presel, "Z+Gamma MC")
      #          l4_presel.AddEntry(self.h4_QCD_presel, "QCD MC")
##		l4_presel.AddEntry(self.h4_sig10_presel, "Z' 10 GeV MC")
#		l4_presel.AddEntry(self.h4_sig25_presel, "Z' 25 GeV MC")
##		l4_presel.AddEntry(self.h4_sig50_presel, "Z' 50 GeV MC")
#		l4_presel.AddEntry(self.h4_sig75_presel, "Z' 75 GeV MC")
 #               l4_presel.Draw()
#		gPad.SetLogy()
#		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
#		p22.cd() #bottom
#		cheap4_presel = makeCheap(self.h4_Data_presel)
#		cheap4_presel.Draw("hist")
#		pull4_presel = makePull(self.h4_Data_presel, self.h4_GJ_presel)
#		pull4_presel.Draw("esame")
#		p22.RedrawAxis()
#		c4_presel.SaveAs("./plots/"+name+"_photon_pt_presel.png")
#		c4_presel.Close()
		
#		c5_presel = TCanvas()
#		c5_presel.cd()
#		c5_presel.SetLogy()
#		p12 = TPad("pad1", "tall", 0,0.175,1,1)
#		p12.SetLogy()
#		p22 = TPad("pad2", "short", 0,0.0,1.0,0.23)
#		p22.SetBottomMargin(0.35)
#		p12.Draw()
#		p22.Draw()
#		p12.cd() #top
#		self.h5_GJ_presel.SetTitle("Pre-Selection Rho")
###		self.h5_tot_presel.Draw("hist")
#		self.h5_GJ_presel.Draw("same hist")
#		self.h5_QCD_presel.Draw("same hist")
#		self.h5_Data_presel.Draw("same histe")
#		self.h5_TT.Draw("same hist")
#		self.h5_ZG_presel.Draw("same hist")
#		self.h5_WG_presel.Draw("same hist")
#		self.h5_sig10_presel.Draw("same hist")
#		self.h5_sig25_presel.Draw("same hist")
#		self.h5_sig50_presel.Draw("same hist")
#		self.h5_sig75_presel.Draw("same hist")
#		l5_presel = TLegend(.68, .53, .89, .89)
#		l5_presel.SetFillColor(0)
#		l5_presel.SetLineColor(0)
 #               l5_presel.AddEntry(self.h5_Data_presel, "10% of 2018 Data_presel")
# #               l5_presel.AddEntry(self.h5_tot_presel, "Total Background MC")
   #             l5_presel.AddEntry(self.h5_GJ_presel, "Gamma+Jet MC")
    #            l5_presel.AddEntry(self.h5_TT, "TTBar MC")
     #           l5_presel.AddEntry(self.h5_WG_presel, "W+Gamma MC")
      #          l5_presel.AddEntry(self.h5_ZG_presel, "Z+Gamma MC")
       #         l5_presel.AddEntry(self.h5_QCD_presel, "QCD MC")
#	#	l5_presel.AddEntry(self.h5_sig10_presel, "Z' 10 GeV MC")
	#	l5_presel.AddEntry(self.h5_sig25_presel, "Z' 25 GeV MC")
#	#	l5_presel.AddEntry(self.h5_sig50_presel, "Z' 50 GeV MC")
	#	l5_presel.AddEntry(self.h5_sig75_presel, "Z' 75 GeV MC")
         #       l5_presel.Draw()
#		gPad.SetLogy()
	#	AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
	#	p22.cd() #bottom
	#	cheap5_presel = makeCheap(self.h5_Data_presel)
	#	cheap5_presel.Draw("hist")
	#	pull5_presel = makePull(self.h5_Data_presel, self.h5_GJ_presel)
	#	pull5_presel.Draw("esame")
	#	p22.RedrawAxis()
	#	c5_presel.SaveAs("./plots/"+name+"_rho_presel.png")
	#	c5_presel.Close()
		
#		c6_presel = TCanvas()
#		c6_presel.cd()
#		c6_presel.SetLogy()
#		p12 = TPad("pad1", "tall", 0,0.175,1,1)
#		p12.SetLogy()
#		p22 = TPad("pad2", "short", 0,0.0,1.0,0.23)
#		p22.SetBottomMargin(0.35)
#		p12.Draw()
#		p22.Draw()
#		p12.cd() #top
#		self.h6_GJ_presel.SetTitle("Pre-Selection N2")
##		self.h6_tot_presel.Draw("hist")
#		self.h6_GJ_presel.Draw("same hist")
#		self.h6_QCD_presel.Draw("same hist")
#		self.h6_Data_presel.Draw("same histe")
#		self.h6_TT.Draw("same hist")
#		self.h6_ZG_presel.Draw("same hist")
#		self.h6_WG_presel.Draw("same hist")
#		self.h6_sig10_presel.Draw("same hist")
#		self.h6_sig25_presel.Draw("same hist")
#		self.h6_sig50_presel.Draw("same hist")
#		self.h6_sig75_presel.Draw("same hist")
#		l6_presel = TLegend(.12, .53, .33, .89)
#		l6_presel.SetFillColor(0)
#		l6_presel.SetLineColor(0)
 ##               l6_presel.AddEntry(self.h6_Data_presel, "10% of 2018 Data_presel")
#                l6_presel.AddEntry(self.h6_tot_presel, "Total Background MC")
#                l6_presel.AddEntry(self.h6_GJ_presel, "Gamma+Jet MC")
 #               l6_presel.AddEntry(self.h6_TT, "TTBar MC")
  #              l6_presel.AddEntry(self.h6_WG_presel, "W+Gamma MC")
   #             l6_presel.AddEntry(self.h6_ZG_presel, "Z+Gamma MC")
    #            l6_presel.AddEntry(self.h6_QCD_presel, "QCD MC")
##		l6_presel.AddEntry(self.h6_sig10_presel, "Z' 10 GeV MC")
#		l6_presel.AddEntry(self.h6_sig25_presel, "Z' 25 GeV MC")
##		l6_presel.AddEntry(self.h6_sig50_presel, "Z' 50 GeV MC")
#		l6_presel.AddEntry(self.h6_sig75_presel, "Z' 75 GeV MC")
 #               l6_presel.Draw()
##		gPad.SetLogy()
#		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
#		p22.cd() #bottom
#		cheap5_presel = makeCheap(self.h6_Data_presel)
#		cheap5_presel.Draw("hist")
#		pull6_presel = makePull(self.h6_Data_presel, self.h6_GJ_presel)
#		pull6_presel.Draw("esame")
#		p22.RedrawAxis()
#		c6_presel.SaveAs("./plots/"+name+"_n2_presel.png")
#		c6_presel.Close()
#
#		c10_presel = TCanvas()
#		c10_presel.cd()
#		c10_presel.SetLogy()
#		p12 = TPad("pad1", "tall", 0,0.175,1,1)
#		p12.SetLogy()
#		p22 = TPad("pad2", "short", 0,0.0,1.0,0.23)
#		p22.SetBottomMargin(0.35)
#		p12.Draw()
#		p22.Draw()
#		p12.cd() #top
##		self.h10_GJ_presel.SetTitle("Pre-Selection Photon Eta")
##		self.h10_tot_presel.Draw("hist")
#		self.h10_GJ_presel.Draw("same hist")
#		self.h10_QCD_presel.Draw("same hist")
#		self.h10_Data_presel.Draw("same histe")
#		self.h10_TT.Draw("same hist")
#		self.h10_ZG_presel.Draw("same hist")
#		self.h10_WG_presel.Draw("same hist")
#		self.h10_sig10_presel.Draw("same hist")
#		self.h10_sig25_presel.Draw("same hist")
#		self.h10_sig50_presel.Draw("same hist")
#		self.h10_sig75_presel.Draw("same hist")
#		l10_presel = TLegend(.12, .53, .3, .89)
#		l10_presel.SetFillColor(0)
#		l10_presel.SetLineColor(0)
#                l10_presel.AddEntry(self.h10_Data_presel, "10% of 2018 Data_presel")
#                l10_presel.AddEntry(self.h10_tot_presel, "Total Background MC")
#                l10_presel.AddEntry(self.h10_GJ_presel, "Gamma+Jet MC")
 #               l10_presel.AddEntry(self.h10_TT, "TTBar MC")
  #              l10_presel.AddEntry(self.h10_WG_presel, "W+Gamma MC")
   #             l10_presel.AddEntry(self.h10_ZG_presel, "Z+Gamma MC")
    #            l10_presel.AddEntry(self.h10_QCD_presel, "QCD MC")
#		l10_presel.AddEntry(self.h10_sig10_presel, "Z' 10 GeV MC")
#		l10_presel.AddEntry(self.h10_sig25_presel, "Z' 25 GeV MC")
#		l10_presel.AddEntry(self.h10_sig50_presel, "Z' 50 GeV MC")
#		l10_presel.AddEntry(self.h10_sig75_presel, "Z' 75 GeV MC")
 #               l10_presel.Draw()
#		gPad.SetLogy()
#		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
#		p22.cd() #bottom
#		cheap10_presel = makeCheap(self.h10_Data_presel)
#		cheap10_presel.Draw("hist")
#		pull10_presel = makePull(self.h10_Data_presel, self.h10_GJ_presel)
#		pull10_presel.Draw("esame")
#		p22.RedrawAxis()
#		c10_presel.SaveAs("./plots/"+name+"_photon_eta_presel.png")
#		c10_presel.Close()


		c1_p = TCanvas()
		c1_p.cd()
		c1_p.SetLogy()
		p12 = TPad("pad1", "tall", 0,0.175,1,1)
		p12.SetLogy()
		p22 = TPad("pad2", "short", 0,0.0,1.0,0.23)
		p22.SetBottomMargin(0.35)
		p12.Draw()
		p22.Draw()
		p12.cd() #top
		self.p1_GJ.SetTitle("Passing Softdrop Mass")
#		self.p1_tot.Draw("hist")
		self.p1_GJ.Draw("same hist")
		self.p1_Data.Draw("same histe")
		self.p1_QCD.Draw("same hist")
		self.p1_WG.Draw("same hist")
		self.p1_TT.Draw("same hist")
		self.p1_ZG.Draw("same hist")
#		self.p1_sig10.Draw("same hist")
		self.p1_sig25.Draw("same hist")
#		self.p1_sig50.Draw("same hist")
		self.p1_sig75.Draw("same hist")
		l1_p = TLegend(.68, .53, .89, .89)
		l1_p.SetFillColor(0)
		l1_p.SetLineColor(0)
                l1_p.AddEntry(self.p1_Data, "10% of 2018 Data")
#                l1_p.AddEntry(self.p1_tot, "Total Background MC")
                l1_p.AddEntry(self.p1_GJ, "Gamma+Jet MC")
                l1_p.AddEntry(self.p1_TT, "TTBar MC")
                l1_p.AddEntry(self.p1_WG, "W+Gamma MC")
                l1_p.AddEntry(self.p1_ZG, "Z+Gamma MC")
                l1_p.AddEntry(self.p1_QCD, "QCD MC")
#		l1_p.AddEntry(self.p1_sig10, "Z' 10 GeV MC")
		l1_p.AddEntry(self.p1_sig25, "Z' 25 GeV MC")
#		l1_p.AddEntry(self.p1_sig50, "Z' 50 GeV MC")
		l1_p.AddEntry(self.p1_sig75, "Z' 75 GeV MC")
                l1_p.Draw()
#		gPad.SetLogy()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
		p22.cd() #bottom
		cheap1_p = makeCheap(self.p1_Data)
		cheap1_p.Draw("hist")
		pull1_p = makePull(self.p1_Data, self.p1_GJ)
		pull1_p.Draw("esame")
		p22.RedrawAxis()
		c1_p.SaveAs("./plots/"+name+"_pass_soft.png")
		c1_p.SaveAs("./plots/"+name+"_pass_soft.root")
		c1_p.Close()

		c2_p = TCanvas()
		c2_p.cd()
		c2_p.SetLogy()
		p12 = TPad("pad1", "tall", 0,0.175,1,1)
		p12.SetLogy()
		p22 = TPad("pad2", "short", 0,0.0,1.0,0.23)
		p22.SetBottomMargin(0.35)
		p12.Draw()
		p22.Draw()
		p12.cd() #top
		self.p2_GJ.SetTitle("Passing Jet pT")
#		self.p2_tot.Draw("hist")
		self.p2_GJ.Draw("same hist")
		self.p2_Data.Draw("same histe")
		self.p2_QCD.Draw("same hist")
		self.p2_WG.Draw("same hist")
		self.p2_TT.Draw("same hist")
		self.p2_ZG.Draw("same hist")
#		self.p2_sig10.Draw("same hist")
		self.p2_sig25.Draw("same hist")
#		self.p2_sig50.Draw("same hist")
		self.p2_sig75.Draw("same hist")
		l2_p = TLegend(.68, .53, .89, .89)
		l2_p.SetFillColor(0)
		l2_p.SetLineColor(0)
                l2_p.AddEntry(self.p2_Data, "10% of 2018 Data")
#                l2_p.AddEntry(self.p2_tot, "Total Background MC")
                l2_p.AddEntry(self.p2_GJ, "Gamma+Jet MC")
                l2_p.AddEntry(self.p2_TT, "TTBar MC")
                l2_p.AddEntry(self.p2_WG, "W+Gamma MC")
                l2_p.AddEntry(self.p2_ZG, "Z+Gamma MC")
                l2_p.AddEntry(self.p2_QCD, "QCD MC")
#		l2_p.AddEntry(self.p2_sig10, "Z' 10 GeV MC")
		l2_p.AddEntry(self.p2_sig25, "Z' 25 GeV MC")
#		l2_p.AddEntry(self.p2_sig50, "Z' 50 GeV MC")
		l2_p.AddEntry(self.p2_sig75, "Z' 75 GeV MC")
                l2_p.Draw()
#		gPad.SetLogy()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
		p22.cd() #bottom
		cheap2_p = makeCheap(self.p2_Data)
		cheap2_p.Draw("hist")
		pull2_p = makePull(self.p2_Data, self.p2_GJ)
		pull2_p.Draw("esame")
		p22.RedrawAxis()
		c2_p.SaveAs("./plots/"+name+"_pass_jet_pt.png")
		c2_p.Close()
		
		c3_p = TCanvas()
		c3_p.cd()
		c3_p.SetLogy()
		p12 = TPad("pad1", "tall", 0,0.175,1,1)
		p12.SetLogy()
		p32 = TPad("pad2", "short", 0,0.0,1.0,0.23)
		p32.SetBottomMargin(0.35)
		p12.Draw()
		p32.Draw()
		p12.cd() #top
		self.p3_GJ.SetTitle("Passing Jet Eta")
#		self.p3_tot.Draw("hist")
		self.p3_GJ.Draw("same hist")
		self.p3_Data.Draw("same histe")
		self.p3_QCD.Draw("same hist")
		self.p3_WG.Draw("same hist")
		self.p3_TT.Draw("same hist")
		self.p3_ZG.Draw("same hist")
#		self.p3_sig10.Draw("same hist")
		self.p3_sig25.Draw("same hist")
#		self.p3_sig50.Draw("same hist")
		self.p3_sig75.Draw("same hist")
		l3_p = TLegend(.68, .53, .89, .89)
		l3_p.SetFillColor(0)
		l3_p.SetLineColor(0)
                l3_p.AddEntry(self.p3_Data, "10% of 2018 Data")
#                l3_p.AddEntry(self.p3_tot, "Total Background MC")
                l3_p.AddEntry(self.p3_GJ, "Gamma+Jet MC")
                l3_p.AddEntry(self.p3_TT, "TTBar MC")
                l3_p.AddEntry(self.p3_WG, "W+Gamma MC")
                l3_p.AddEntry(self.p3_ZG, "Z+Gamma MC")
                l3_p.AddEntry(self.p3_QCD, "QCD MC")
#		l3_p.AddEntry(self.p3_sig10, "Z' 10 GeV MC")
		l3_p.AddEntry(self.p3_sig25, "Z' 25 GeV MC")
#		l3_p.AddEntry(self.p3_sig50, "Z' 50 GeV MC")
		l3_p.AddEntry(self.p3_sig75, "Z' 75 GeV MC")
                l3_p.Draw()
#		gPad.SetLogy()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
		p32.cd() #bottom
		cheap3_p = makeCheap(self.p3_Data)
		cheap3_p.Draw("hist")
		pull3_p = makePull(self.p3_Data, self.p3_GJ)
		pull3_p.Draw("esame")
		p32.RedrawAxis()
		c3_p.SaveAs("./plots/"+name+"_pass_jet_eta.png")
		c3_p.Close()
		

		c4_p = TCanvas()
		c4_p.cd()
		c4_p.SetLogy()
		p42 = TPad("pad1", "tall", 0,0.175,1,1)
		p42.SetLogy()
		p22 = TPad("pad2", "short", 0,0.0,1.0,0.23)
		p22.SetBottomMargin(0.35)
		p42.Draw()
		p22.Draw()
		p42.cd() #top
		self.p4_GJ.SetTitle("Passing Photon pT")
#		self.p4_tot.Draw("hist")
		self.p4_GJ.Draw("same hist")
		self.p4_Data.Draw("same histe")
		self.p4_QCD.Draw("same hist")
		self.p4_WG.Draw("same hist")
		self.p4_TT.Draw("same hist")
		self.p4_ZG.Draw("same hist")
#		self.p4_sig10.Draw("same hist")
		self.p4_sig25.Draw("same hist")
#		self.p4_sig50.Draw("same hist")
		self.p4_sig75.Draw("same hist")
		l4_p = TLegend(.68, .53, .89, .89)
		l4_p.SetFillColor(0)
		l4_p.SetLineColor(0)
                l4_p.AddEntry(self.p4_Data, "10% of 2018 Data")
#                l4_p.AddEntry(self.p4_tot, "Total Background MC")
                l4_p.AddEntry(self.p4_GJ, "Gamma+Jet MC")
                l4_p.AddEntry(self.p4_TT, "TTBar MC")
                l4_p.AddEntry(self.p4_WG, "W+Gamma MC")
                l4_p.AddEntry(self.p4_ZG, "Z+Gamma MC")
                l4_p.AddEntry(self.p4_QCD, "QCD MC")
#		l4_p.AddEntry(self.p4_sig10, "Z' 10 GeV MC")
		l4_p.AddEntry(self.p4_sig25, "Z' 25 GeV MC")
#		l4_p.AddEntry(self.p4_sig50, "Z' 50 GeV MC")
		l4_p.AddEntry(self.p4_sig75, "Z' 75 GeV MC")
                l4_p.Draw()
#		gPad.SetLogy()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
		p22.cd() #bottom
		cheap4_p = makeCheap(self.p4_Data)
		cheap4_p.Draw("hist")
		pull4_p = makePull(self.p4_Data, self.p4_GJ)
		pull4_p.Draw("esame")
		p22.RedrawAxis()
		c4_p.SaveAs("./plots/"+name+"_pass_pho_pt.png")
		c4_p.Close()




		c5_p = TCanvas()
		c5_p.cd()
		c5_p.SetLogy()
		p52 = TPad("pad1", "tall", 0,0.175,1,1)
		p52.SetLogy()
		p22 = TPad("pad2", "short", 0,0.0,1.0,0.23)
		p22.SetBottomMargin(0.35)
		p52.Draw()
		p22.Draw()
		p52.cd() #top
		self.p5_GJ.SetTitle("Passing Rho")
#		self.p5_tot.Draw("hist")
		self.p5_GJ.Draw("same hist")
		self.p5_Data.Draw("same histe")
		self.p5_QCD.Draw("same hist")
		self.p5_WG.Draw("same hist")
		self.p5_TT.Draw("same hist")
		self.p5_ZG.Draw("same hist")
#		self.p5_sig10.Draw("same hist")
		self.p5_sig25.Draw("same hist")
#		self.p5_sig50.Draw("same hist")
		self.p5_sig75.Draw("same hist")
		l5_p = TLegend(.68, .53, .89, .89)
		l5_p.SetFillColor(0)
		l5_p.SetLineColor(0)
                l5_p.AddEntry(self.p5_Data, "10% of 2018 Data")
#                l5_p.AddEntry(self.p5_tot, "Total Background MC")
                l5_p.AddEntry(self.p5_GJ, "Gamma+Jet MC")
                l5_p.AddEntry(self.p5_TT, "TTBar MC")
                l5_p.AddEntry(self.p5_WG, "W+Gamma MC")
                l5_p.AddEntry(self.p5_ZG, "Z+Gamma MC")
                l5_p.AddEntry(self.p5_QCD, "QCD MC")
#		l5_p.AddEntry(self.p5_sig10, "Z' 10 GeV MC")
		l5_p.AddEntry(self.p5_sig25, "Z' 25 GeV MC")
#		l5_p.AddEntry(self.p5_sig50, "Z' 50 GeV MC")
		l5_p.AddEntry(self.p5_sig75, "Z' 75 GeV MC")
                l5_p.Draw()
#		gPad.SetLogy()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
		p22.cd() #bottom
		cheap5_p = makeCheap(self.p5_Data)
		cheap5_p.Draw("hist")
		pull5_p = makePull(self.p5_Data, self.p5_GJ)
		pull5_p.Draw("esame")
		p22.RedrawAxis()
		c5_p.SaveAs("./plots/"+name+"_pass_rho.png")
		c5_p.Close()

		c10_p = TCanvas()
		c10_p.cd()
		c10_p.SetLogy()
		p52 = TPad("pad1", "tall", 0,0.175,1,1)
		p52.SetLogy()
		p22 = TPad("pad2", "short", 0,0.0,1.0,0.23)
		p22.SetBottomMargin(0.35)
		p52.Draw()
		p22.Draw()
		p52.cd() #top
		self.p10_GJ.SetTitle("Passing Photon Eta")
#		self.p10_tot.Draw("hist")
		self.p10_GJ.Draw("same hist")
		self.p10_Data.Draw("same histe")
		self.p10_QCD.Draw("same hist")
		self.p10_WG.Draw("same hist")
		self.p10_TT.Draw("same hist")
		self.p10_ZG.Draw("same hist")
#		self.p10_sig10.Draw("same hist")
		self.p10_sig25.Draw("same hist")
#		self.p10_sig50.Draw("same hist")
		self.p10_sig75.Draw("same hist")
		l10_p = TLegend(.12, .53, .30, .89)
		l10_p.SetFillColor(0)
		l10_p.SetLineColor(0)
                l10_p.AddEntry(self.p10_Data, "10% of 2018 Data")
#                l10_p.AddEntry(self.p10_tot, "Total Background MC")
                l10_p.AddEntry(self.p10_GJ, "Gamma+Jet MC")
                l10_p.AddEntry(self.p10_TT, "TTBar MC")
                l10_p.AddEntry(self.p10_WG, "W+Gamma MC")
                l10_p.AddEntry(self.p10_ZG, "Z+Gamma MC")
                l10_p.AddEntry(self.p10_QCD, "QCD MC")
		l10_p.AddEntry(self.p10_sig10, "Z' 10 GeV MC")
		l10_p.AddEntry(self.p10_sig25, "Z' 25 GeV MC")
		l10_p.AddEntry(self.p10_sig50, "Z' 50 GeV MC")
		l10_p.AddEntry(self.p10_sig75, "Z' 75 GeV MC")
                l10_p.Draw()
#		gPad.SetLogy()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
		p22.cd() #bottom
		cheap10_p = makeCheap(self.p10_Data)
		cheap10_p.Draw("hist")
		pull10_p = makePull(self.p10_Data, self.p10_GJ)
		pull10_p.Draw("esame")
		p22.RedrawAxis()
		c10_p.SaveAs("./plots/"+name+"_pass_photon_eta.png")
		c10_p.Close()


		c1_f = TCanvas()
		c1_f.cd()
		c1_f.SetLogy()
		p12 = TPad("pad1", "tall", 0,0.175,1,1)
		p12.SetLogy()
		p22 = TPad("pad2", "short", 0,0.0,1.0,0.23)
		p22.SetBottomMargin(0.35)
		p12.Draw()
		p22.Draw()
		p12.cd() #top
		self.f1_GJ.SetTitle("Failing Softdrop Mass")
#		self.f1_tot.Draw("hist")
		self.f1_GJ.Draw("same hist")
		self.f1_Data.Draw("same histe")
		self.f1_QCD.Draw("same hist")
		self.f1_WG.Draw("same hist")
		self.f1_TT.Draw("same hist")
		self.f1_ZG.Draw("same hist")
#		self.f1_sig10.Draw("same hist")
		self.f1_sig25.Draw("same hist")
#		self.f1_sig50.Draw("same hist")
		self.f1_sig75.Draw("same hist")
		l1_f = TLegend(.68, .53, .89, .89)
		l1_f.SetFillColor(0)
		l1_f.SetLineColor(0)
                l1_f.AddEntry(self.f1_Data, "10% of 2018 Data")
#                l1_f.AddEntry(self.f1_tot, "Total Background MC")
                l1_f.AddEntry(self.f1_GJ, "Gamma+Jet MC")
                l1_f.AddEntry(self.f1_TT, "TTBar MC")
                l1_f.AddEntry(self.f1_WG, "W+Gamma MC")
                l1_f.AddEntry(self.f1_ZG, "Z+Gamma MC")
                l1_f.AddEntry(self.f1_QCD, "QCD MC")
#		l1_f.AddEntry(self.f1_sig10, "Z' 10 GeV MC")
		l1_f.AddEntry(self.f1_sig25, "Z' 25 GeV MC")
#		l1_f.AddEntry(self.f1_sig50, "Z' 50 GeV MC")
		l1_f.AddEntry(self.f1_sig75, "Z' 75 GeV MC")
                l1_f.Draw()
#		gPad.SetLogy()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
		p22.cd() #bottom
		cheap1_f = makeCheap(self.f1_Data)
		cheap1_f.Draw("hist")
		pull1_f = makePull(self.f1_Data, self.f1_GJ)
		pull1_f.Draw("esame")
		p22.RedrawAxis()
		c1_f.SaveAs("./plots/"+name+"_fail_soft.png")
		c1_f.SaveAs("./plots/"+name+"_fail_soft.root")
		c1_f.Close()

		c2_f = TCanvas()
		c2_f.cd()
		c2_f.SetLogy()
		p12 = TPad("pad1", "tall", 0,0.175,1,1)
		p12.SetLogy()
		p22 = TPad("pad2", "short", 0,0.0,1.0,0.23)
		p22.SetBottomMargin(0.35)
		p12.Draw()
		p22.Draw()
		p12.cd() #top
		self.f2_GJ.SetTitle("Failing Jet pT")
#		self.f2_tot.Draw("hist")
		self.f2_GJ.Draw("same hist")
		self.f2_Data.Draw("same histe")
		self.f2_QCD.Draw("same hist")
		self.f2_WG.Draw("same hist")
		self.f2_TT.Draw("same hist")
		self.f2_ZG.Draw("same hist")
#		self.f2_sig10.Draw("same hist")
		self.f2_sig25.Draw("same hist")
#		self.f2_sig50.Draw("same hist")
		self.f2_sig75.Draw("same hist")
		l2_f = TLegend(.68, .53, .89, .89)
		l2_f.SetFillColor(0)
		l2_f.SetLineColor(0)
                l2_f.AddEntry(self.f2_Data, "10% of 2018 Data")
#                l2_f.AddEntry(self.f2_tot, "Total Background MC")
                l2_f.AddEntry(self.f2_GJ, "Gamma+Jet MC")
                l2_f.AddEntry(self.f2_TT, "TTBar MC")
                l2_f.AddEntry(self.f2_WG, "W+Gamma MC")
                l2_f.AddEntry(self.f2_ZG, "Z+Gamma MC")
                l2_f.AddEntry(self.f2_QCD, "QCD MC")
#		l2_f.AddEntry(self.f2_sig10, "Z' 10 GeV MC")
		l2_f.AddEntry(self.f2_sig25, "Z' 25 GeV MC")
#		l2_f.AddEntry(self.f2_sig50, "Z' 50 GeV MC")
		l2_f.AddEntry(self.f2_sig75, "Z' 75 GeV MC")
                l2_f.Draw()
#		gPad.SetLogy()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
		p22.cd() #bottom
		cheap2_f = makeCheap(self.f2_Data)
		cheap2_f.Draw("hist")
		pull2_f = makePull(self.f2_Data, self.f2_GJ)
		pull2_f.Draw("esame")
		p22.RedrawAxis()
		c2_f.SaveAs("./plots/"+name+"_fail_jet_pt.png")
		c2_f.Close()
		
		c3_f = TCanvas()
		c3_f.cd()
		c3_f.SetLogy()
		p12 = TPad("pad1", "tall", 0,0.175,1,1)
		p12.SetLogy()
		p32 = TPad("pad2", "short", 0,0.0,1.0,0.23)
		p32.SetBottomMargin(0.35)
		p12.Draw()
		p32.Draw()
		p12.cd() #top
		self.f3_GJ.SetTitle("Failing Jet pT")
#		self.f3_tot.Draw("hist")
		self.f3_GJ.Draw("same hist")
		self.f3_Data.Draw("same histe")
		self.f3_QCD.Draw("same hist")
		self.f3_WG.Draw("same hist")
		self.f3_TT.Draw("same hist")
		self.f3_ZG.Draw("same hist")
#		self.f3_sig10.Draw("same hist")
		self.f3_sig25.Draw("same hist")
#		self.f3_sig50.Draw("same hist")
		self.f3_sig75.Draw("same hist")
		l3_f = TLegend(.68, .53, .89, .89)
		l3_f.SetFillColor(0)
		l3_f.SetLineColor(0)
                l3_f.AddEntry(self.f3_Data, "10% of 2018 Data")
#                l3_f.AddEntry(self.f3_tot, "Total Background MC")
                l3_f.AddEntry(self.f3_GJ, "Gamma+Jet MC")
                l3_f.AddEntry(self.f3_TT, "TTBar MC")
                l3_f.AddEntry(self.f3_WG, "W+Gamma MC")
                l3_f.AddEntry(self.f3_ZG, "Z+Gamma MC")
                l3_f.AddEntry(self.f3_QCD, "QCD MC")
#		l3_f.AddEntry(self.f3_sig10, "Z' 10 GeV MC")
		l3_f.AddEntry(self.f3_sig25, "Z' 25 GeV MC")
#		l3_f.AddEntry(self.f3_sig50, "Z' 50 GeV MC")
		l3_f.AddEntry(self.f3_sig75, "Z' 75 GeV MC")
                l3_f.Draw()
#		gPad.SetLogy()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
		p32.cd() #bottom
		cheap3_f = makeCheap(self.f3_Data)
		cheap3_f.Draw("hist")
		pull3_f = makePull(self.f3_Data, self.f3_GJ)
		pull3_f.Draw("esame")
		p32.RedrawAxis()
		c3_f.SaveAs("./plots/"+name+"_fail_jet_eta.png")
		c3_f.Close()
		

		c4_f = TCanvas()
		c4_f.cd()
		c4_f.SetLogy()
		p42 = TPad("pad1", "tall", 0,0.175,1,1)
		p42.SetLogy()
		p22 = TPad("pad2", "short", 0,0.0,1.0,0.23)
		p22.SetBottomMargin(0.35)
		p42.Draw()
		p22.Draw()
		p42.cd() #top
		self.f4_GJ.SetTitle("Failing Photon pT")
#		self.f4_tot.Draw("hist")
		self.f4_GJ.Draw("same hist")
		self.f4_Data.Draw("same histe")
		self.f4_QCD.Draw("same hist")
		self.f4_WG.Draw("same hist")
		self.f4_TT.Draw("same hist")
		self.f4_ZG.Draw("same hist")
#		self.f4_sig10.Draw("same hist")
		self.f4_sig25.Draw("same hist")
#		self.f4_sig50.Draw("same hist")
		self.f4_sig75.Draw("same hist")
		l4_f = TLegend(.68, .53, .89, .89)
		l4_f.SetFillColor(0)
		l4_f.SetLineColor(0)
                l4_f.AddEntry(self.f4_Data, "10% of 2018 Data")
#                l4_f.AddEntry(self.f4_tot, "Total Background MC")
                l4_f.AddEntry(self.f4_GJ, "Gamma+Jet MC")
                l4_f.AddEntry(self.f4_TT, "TTBar MC")
                l4_f.AddEntry(self.f4_WG, "W+Gamma MC")
                l4_f.AddEntry(self.f4_ZG, "Z+Gamma MC")
                l4_f.AddEntry(self.f4_QCD, "QCD MC")
#		l4_f.AddEntry(self.f4_sig10, "Z' 10 GeV MC")
		l4_f.AddEntry(self.f4_sig25, "Z' 25 GeV MC")
#		l4_f.AddEntry(self.f4_sig50, "Z' 50 GeV MC")
		l4_f.AddEntry(self.f4_sig75, "Z' 75 GeV MC")
                l4_f.Draw()
#		gPad.SetLogy()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
		p22.cd() #bottom
		cheap4_f = makeCheap(self.f4_Data)
		cheap4_f.Draw("hist")
		pull4_f = makePull(self.f4_Data, self.f4_GJ)
		pull4_f.Draw("esame")
		p22.RedrawAxis()
		c4_f.SaveAs("./plots/"+name+"_fail_rho_pt.png")
		c4_f.Close()




		c5_f = TCanvas()
		c5_f.cd()
		c5_f.SetLogy()
		p52 = TPad("pad1", "tall", 0,0.175,1,1)
		p52.SetLogy()
		p22 = TPad("pad2", "short", 0,0.0,1.0,0.23)
		p22.SetBottomMargin(0.35)
		p52.Draw()
		p22.Draw()
		p52.cd() #top
		self.f5_GJ.SetTitle("Failing Rho")
#		self.f5_tot.Draw("hist")
		self.f5_GJ.Draw("same hist")
		self.f5_Data.Draw("same histe")
		self.f5_QCD.Draw("same hist")
		self.f5_WG.Draw("same hist")
		self.f5_TT.Draw("same hist")
		self.f5_ZG.Draw("same hist")
#		self.f5_sig10.Draw("same hist")
		self.f5_sig25.Draw("same hist")
#		self.f5_sig50.Draw("same hist")
		self.f5_sig75.Draw("same hist")
		l5_f = TLegend(.68, .53, .89, .89)
		l5_f.SetFillColor(0)
		l5_f.SetLineColor(0)
                l5_f.AddEntry(self.f5_Data, "10% of 2018 Data")
#                l5_f.AddEntry(self.f5_tot, "Total Background MC")
                l5_f.AddEntry(self.f5_GJ, "Gamma+Jet MC")
                l5_f.AddEntry(self.f5_TT, "TTBar MC")
                l5_f.AddEntry(self.f5_WG, "W+Gamma MC")
                l5_f.AddEntry(self.f5_ZG, "Z+Gamma MC")
                l5_f.AddEntry(self.f5_QCD, "QCD MC")
#		l5_f.AddEntry(self.f5_sig10, "Z' 10 GeV MC")
		l5_f.AddEntry(self.f5_sig25, "Z' 25 GeV MC")
#		l5_f.AddEntry(self.f5_sig50, "Z' 50 GeV MC")
		l5_f.AddEntry(self.f5_sig75, "Z' 75 GeV MC")
                l5_f.Draw()
#		gPad.SetLogy()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
		p22.cd() #bottom
		cheap5_f = makeCheap(self.f5_Data)
		cheap5_f.Draw("hist")
		pull5_f = makePull(self.f5_Data, self.f5_GJ)
		pull5_f.Draw("esame")
		p22.RedrawAxis()
		c5_f.SaveAs("./plots/"+name+"_fail_rho.png")
		c5_f.Close()
		
		c10_f = TCanvas()
		c10_f.cd()
		c10_f.SetLogy()
		p52 = TPad("pad1", "tall", 0,0.175,1,1)
		p52.SetLogy()
		p22 = TPad("pad2", "short", 0,0.0,1.0,0.23)
		p22.SetBottomMargin(0.35)
		p52.Draw()
		p22.Draw()
		p52.cd() #top
		self.f10_GJ.SetTitle("Failing Photon Eta")
#		self.f10_tot.Draw("hist")
		self.f10_GJ.Draw("same hist")
		self.f10_Data.Draw("same histe")
		self.f10_QCD.Draw("same hist")
		self.f10_WG.Draw("same hist")
		self.f10_TT.Draw("same hist")
		self.f10_ZG.Draw("same hist")
#		self.f10_sig10.Draw("same hist")
		self.f10_sig25.Draw("same hist")
#		self.f10_sig50.Draw("same hist")
		self.f10_sig75.Draw("same hist")
		l10_f = TLegend(.12, .53, .30, .89)
		l10_f.SetFillColor(0)
		l10_f.SetLineColor(0)
                l10_f.AddEntry(self.f10_Data, "10% of 2018 Data")
#                l10_f.AddEntry(self.f10_tot, "Total Background MC")
                l10_f.AddEntry(self.f10_GJ, "Gamma+Jet MC")
                l10_f.AddEntry(self.f10_TT, "TTBar MC")
                l10_f.AddEntry(self.f10_WG, "W+Gamma MC")
                l10_f.AddEntry(self.f10_ZG, "Z+Gamma MC")
                l10_f.AddEntry(self.f10_QCD, "QCD MC")
		l10_f.AddEntry(self.f10_sig10, "Z' 10 GeV MC")
		l10_f.AddEntry(self.f10_sig25, "Z' 25 GeV MC")
		l10_f.AddEntry(self.f10_sig50, "Z' 50 GeV MC")
		l10_f.AddEntry(self.f10_sig75, "Z' 75 GeV MC")
                l10_f.Draw()
#		gPad.SetLogy()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
		p22.cd() #bottom
		cheap10_f = makeCheap(self.f10_Data)
		cheap10_f.Draw("hist")
		pull10_f = makePull(self.f10_Data, self.f10_GJ)
		pull10_f.Draw("esame")
		p22.RedrawAxis()
		c10_f.SaveAs("./plots/"+name+"_fail_photon_eta.png")
		c10_f.Close()


		#pT binning plot
		self.h2_1_Data.GetYaxis().SetRangeUser(0,7000)
		self.h2_1_Data.GetXaxis().SetRangeUser(100,500)
		self.h2_1_Data.SetTitle("Data Jet pT (Selection Applied)")
		self.h2_1_Data.SetXTitle("Jet pT")
		GoodPlotFormat(self.h2_1_Data, 'thickline', kBlue)
		cPT = TCanvas()
		cPT.cd()
		self.h2_1_Data.Draw("hist")
		pt1 = TLine(120,0,120,7000)
		pt2 = TLine(130,0,130,7000)
		pt3 = TLine(145,0,145,7000)
		pt4 = TLine(160,0,160,7000)
		pt5 = TLine(180,0,180,7000)
		pt6 = TLine(200,0,200,7000)
		pt7 = TLine(250,0,250,7000)
		pt8 = TLine(300,0,300,7000)
		pt9 = TLine(400,0,400,7000)
		pt10 = TLine(500,0,500,7000)
		pt1.SetLineColor(kBlack)
		pt2.SetLineColor(kBlack)
		pt3.SetLineColor(kBlack)
		pt4.SetLineColor(kBlack)
		pt5.SetLineColor(kBlack)
		pt6.SetLineColor(kBlack)
		pt7.SetLineColor(kBlack)
		pt8.SetLineColor(kBlack)
		pt9.SetLineColor(kBlack)
		pt10.SetLineColor(kBlack)
		pt1.SetLineWidth(2)
		pt2.SetLineWidth(2)
		pt3.SetLineWidth(2)
		pt4.SetLineWidth(2)
		pt5.SetLineWidth(2)
		pt6.SetLineWidth(2)
		pt7.SetLineWidth(2)
		pt8.SetLineWidth(2)
		pt9.SetLineWidth(2)
		pt10.SetLineWidth(2)
		pt1.Draw("same")
		pt2.Draw("same")
		pt3.Draw("same")
		pt4.Draw("same")
		pt5.Draw("same")
		pt6.Draw("same")
		pt7.Draw("same")
		pt8.Draw("same")
		pt9.Draw("same")
		pt10.Draw("same")
		cPT.SaveAs("./plots/"+name+"_dataPTplot.png")
		
		
		
		
		
		
