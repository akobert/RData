import ROOT
from ROOT import *
import os
from array import array
import math
from math import *
import sys
import glob
import csv
import ctypes
from ctypes import *
import XRootD
from pyxrootd import client
import numpy as np

#from future import division
def FindAndSetMax(*args):
        if len(args) == 1: args = args[0]
        maximum = 0.0
        for i in args:
                i.SetStats(0)
                t = i.GetMaximum()
                if t > maximum:
                        maximum = t
        for j in args:
                j.GetYaxis().SetRangeUser(1,maximum*1.35)#should be 1.35 (below as well)
                j.SetLineWidth(2)
        return maximum*1.35

def SigAdd(hist, sig, low, high):
	for i in range(low, high+1):
		hist.SetBinContent(i, sig.GetBinContent(i))

	return

def AddCMSLumi(pad, fb, extra):
        cmsText     = "CMS " + extra
        cmsTextFont   = 61
        lumiTextSize     = 0.45
        lumiTextOffset   = 0.15
        cmsTextSize      = 0.5
        cmsTextOffset    = 0.15
        H = pad.GetWh()
        W = pad.GetWw()
        l = pad.GetLeftMargin()
        t = pad.GetTopMargin()
        r = pad.GetRightMargin()
        b = pad.GetBottomMargin()
        e = 0.025
        pad.cd()
        lumiText = str(fb)+" fb^{-1} (13 TeV)"
        latex = TLatex()
        latex.SetNDC()
        latex.SetTextAngle(0)
        latex.SetTextColor(kBlack)
        extraTextSize = 0.76*cmsTextSize
        latex.SetTextFont(42)
        latex.SetTextAlign(31)
        latex.SetTextSize(lumiTextSize*t)
        latex.DrawLatex(1-r,1-t+lumiTextOffset*t,lumiText)
        pad.cd()
        latex.SetTextFont(cmsTextFont)
        latex.SetTextSize(cmsTextSize*t)
        latex.SetTextAlign(11)
        latex.DrawLatex(0.1265, 1-t+lumiTextOffset*t, cmsText)
        pad.Update()

class drawRData:
	def __init__(self, name, sfile1, sfile2, sfile3, sfile4, sfile5, sfile6, sfile7, sfile8, o):
		gROOT.SetBatch(True)

		ofile = ROOT.TFile("/home/akobert/CMSSW_11_1_0_pre7/src/RData/NanoTool_UL_draw/correction_check_2017/"+o,"RECREATE")

		LUMI = 41.48
		cmsextra = "Preliminary"

		#Signal files
		self.f = TFile.Open(sfile1, "READ")
		self.f.ls();

		self.h10_corr = self.f.Get("thin_softdrop")
		self.h10_uncorr = self.f.Get("thin_uncorr_softdrop")
		
		self.p10_corr = self.f.Get("pass_soft_thin")
		self.p10_uncorr = self.f.Get("pass_soft_uncorr_thin")
		
		self.f10_corr = self.f.Get("fail_soft_thin")
		self.f10_uncorr = self.f.Get("fail_soft_uncorr_thin")
		
		self.g = TFile.Open(sfile2, "READ")
		self.g.ls();

		self.h20_corr = self.g.Get("thin_softdrop")
		self.h20_uncorr = self.g.Get("thin_uncorr_softdrop")
		
		self.p20_corr = self.g.Get("pass_soft_thin")
		self.p20_uncorr = self.g.Get("pass_soft_uncorr_thin")
		
		self.f20_corr = self.g.Get("fail_soft_thin")
		self.f20_uncorr = self.g.Get("fail_soft_uncorr_thin")

		self.h = TFile.Open(sfile3, "READ")
		self.h.ls();

		self.h25_corr = self.h.Get("thin_softdrop")
		self.h25_uncorr = self.h.Get("thin_uncorr_softdrop")
		
		self.p25_corr = self.h.Get("pass_soft_thin")
		self.p25_uncorr = self.h.Get("pass_soft_uncorr_thin")
		
		self.f25_corr = self.h.Get("fail_soft_thin")
		self.f25_uncorr = self.h.Get("fail_soft_uncorr_thin")
		
		self.i = TFile.Open(sfile4, "READ")
		self.i.ls();

		self.h50_corr = self.i.Get("thin_softdrop")
		self.h50_uncorr = self.i.Get("thin_uncorr_softdrop")
		
		self.p50_corr = self.i.Get("pass_soft_thin")
		self.p50_uncorr = self.i.Get("pass_soft_uncorr_thin")
		
		self.f50_corr = self.i.Get("fail_soft_thin")
		self.f50_uncorr = self.i.Get("fail_soft_uncorr_thin")
		
		self.j = TFile.Open(sfile5, "READ")
		self.j.ls();

		self.h75_corr = self.j.Get("thin_softdrop")
		self.h75_uncorr = self.j.Get("thin_uncorr_softdrop")
		
		self.p75_corr = self.j.Get("pass_soft_thin")
		self.p75_uncorr = self.j.Get("pass_soft_uncorr_thin")
		
		self.f75_corr = self.j.Get("fail_soft_thin")
		self.f75_uncorr = self.j.Get("fail_soft_uncorr_thin")
		
		self.k = TFile.Open(sfile6, "READ")
		self.k.ls();

		self.h100_corr = self.k.Get("thin_softdrop")
		self.h100_uncorr = self.k.Get("thin_uncorr_softdrop")
		
		self.p100_corr = self.k.Get("pass_soft_thin")
		self.p100_uncorr = self.k.Get("pass_soft_uncorr_thin")
		
		self.f100_corr = self.k.Get("fail_soft_thin")
		self.f100_uncorr = self.k.Get("fail_soft_uncorr_thin")
		
		self.l = TFile.Open(sfile7, "READ")
		self.l.ls();

		self.h125_corr = self.l.Get("thin_softdrop")
		self.h125_uncorr = self.l.Get("thin_uncorr_softdrop")
		
		self.p125_corr = self.l.Get("pass_soft_thin")
		self.p125_uncorr = self.l.Get("pass_soft_uncorr_thin")
		
		self.f125_corr = self.l.Get("fail_soft_thin")
		self.f125_uncorr = self.l.Get("fail_soft_uncorr_thin")
		
		self.m = TFile.Open(sfile8, "READ")
		self.m.ls();

		self.h150_corr = self.m.Get("thin_softdrop")
		self.h150_uncorr = self.m.Get("thin_uncorr_softdrop")
		
		self.p150_corr = self.m.Get("pass_soft_thin")
		self.p150_uncorr = self.m.Get("pass_soft_uncorr_thin")
		
		self.f150_corr = self.m.Get("fail_soft_thin")
		self.f150_uncorr = self.m.Get("fail_soft_uncorr_thin")


	
		self.h10_uncorr.SetLineColor(kRed)
		self.h20_uncorr.SetLineColor(kRed)
		self.h25_uncorr.SetLineColor(kRed)
		self.h50_uncorr.SetLineColor(kRed)
		self.h75_uncorr.SetLineColor(kRed)
		self.h100_uncorr.SetLineColor(kRed)
		self.h125_uncorr.SetLineColor(kRed)
		self.h150_uncorr.SetLineColor(kRed)
		
		self.p10_uncorr.SetLineColor(kRed)
		self.p20_uncorr.SetLineColor(kRed)
		self.p25_uncorr.SetLineColor(kRed)
		self.p50_uncorr.SetLineColor(kRed)
		self.p75_uncorr.SetLineColor(kRed)
		self.p100_uncorr.SetLineColor(kRed)
		self.p125_uncorr.SetLineColor(kRed)
		self.p150_uncorr.SetLineColor(kRed)
		
		self.f10_uncorr.SetLineColor(kRed)
		self.f20_uncorr.SetLineColor(kRed)
		self.f25_uncorr.SetLineColor(kRed)
		self.f50_uncorr.SetLineColor(kRed)
		self.f75_uncorr.SetLineColor(kRed)
		self.f100_uncorr.SetLineColor(kRed)
		self.f125_uncorr.SetLineColor(kRed)
		self.f150_uncorr.SetLineColor(kRed)
			
		FindAndSetMax(self.h10_corr, self.h10_uncorr)
		FindAndSetMax(self.h20_corr, self.h20_uncorr)
		FindAndSetMax(self.h25_corr, self.h25_uncorr)
		FindAndSetMax(self.h50_corr, self.h50_uncorr)
		FindAndSetMax(self.h75_corr, self.h75_uncorr)
		FindAndSetMax(self.h100_corr, self.h100_uncorr)
		FindAndSetMax(self.h125_corr, self.h125_uncorr)
		FindAndSetMax(self.h150_corr, self.h150_uncorr)
		
		FindAndSetMax(self.p10_corr, self.p10_uncorr)
		FindAndSetMax(self.p20_corr, self.p20_uncorr)
		FindAndSetMax(self.p25_corr, self.p25_uncorr)
		FindAndSetMax(self.p50_corr, self.p50_uncorr)
		FindAndSetMax(self.p75_corr, self.p75_uncorr)
		FindAndSetMax(self.p100_corr, self.p100_uncorr)
		FindAndSetMax(self.p125_corr, self.p125_uncorr)
		FindAndSetMax(self.p150_corr, self.p150_uncorr)

		FindAndSetMax(self.f10_corr, self.f10_uncorr)
		FindAndSetMax(self.f20_corr, self.f20_uncorr)
		FindAndSetMax(self.f25_corr, self.f25_uncorr)
		FindAndSetMax(self.f50_corr, self.f50_uncorr)
		FindAndSetMax(self.f75_corr, self.f75_uncorr)
		FindAndSetMax(self.f100_corr, self.f100_uncorr)
		FindAndSetMax(self.f125_corr, self.f125_uncorr)
		FindAndSetMax(self.f150_corr, self.f150_uncorr)

		ROOT.gStyle.SetOptStat(0)

		c10 = TCanvas()
		c10.cd()
#                gPad.SetLogy()
		self.h10_corr.SetTitle(name+" 10 GeV")
		self.h10_corr.Draw("hist")
		self.h10_uncorr.Draw("same hist")
                l1 = TLegend(.6, .75, .9, .9)
                l1.AddEntry(self.h10_corr, "Corrections Applied")
                l1.AddEntry(self.h10_uncorr, "No Corrections Applied")
                l1.Draw()
		lin1 = TLine(10, 1, 10, self.h10_corr.GetMaximum())
		lin1.SetLineColor(kViolet)
		lin1.SetLineWidth(2)
		lin1.Draw()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
                gPad.Update()
		c10.SaveAs("./plots/corr_comp_10GeV_2017.png")

		ofile.WriteObject(c10, "10GeV")
		c10.Close()
		
		c20 = TCanvas()
		c20.cd()
#                gPad.SetLogy()
		self.h20_corr.SetTitle(name+" 20 GeV")
		self.h20_corr.Draw("hist")
		self.h20_uncorr.Draw("same hist")
                l1 = TLegend(.6, .75, .9, .9)
                l1.AddEntry(self.h20_corr, "Corrections Applied")
                l1.AddEntry(self.h20_uncorr, "No Corrections Applied")
                l1.Draw()
		lin1 = TLine(20, 1, 20, self.h20_corr.GetMaximum())
		lin1.SetLineColor(kViolet)
		lin1.SetLineWidth(2)
		lin1.Draw()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
                gPad.Update()
		c20.SaveAs("./plots/corr_comp_20GeV_2017.png")

		ofile.WriteObject(c20, "20GeV")
		c20.Close()

		c25 = TCanvas()
		c25.cd()
#                gPad.SetLogy()
		self.h25_corr.SetTitle(name+" 25 GeV")
		self.h25_corr.Draw("hist")
		self.h25_uncorr.Draw("same hist")
                l1 = TLegend(.6, .75, .9, .9)
                l1.AddEntry(self.h25_corr, "Corrections Applied")
                l1.AddEntry(self.h25_uncorr, "No Corrections Applied")
                l1.Draw()
		lin1 = TLine(25, 1, 25, self.h25_corr.GetMaximum())
		lin1.SetLineColor(kViolet)
		lin1.SetLineWidth(2)
		lin1.Draw()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
                gPad.Update()
		c25.SaveAs("./plots/corr_comp_25GeV_2017.png")

		ofile.WriteObject(c25, "25GeV")
		c25.Close()

		c50 = TCanvas()
		c50.cd()
#                gPad.SetLogy()
		self.h50_corr.SetTitle(name+" 50 GeV")
		self.h50_corr.Draw("hist")
		self.h50_uncorr.Draw("same hist")
                l1 = TLegend(.6, .75, .9, .9)
                l1.AddEntry(self.h50_corr, "Corrections Applied")
                l1.AddEntry(self.h50_uncorr, "No Corrections Applied")
                l1.Draw()
		lin1 = TLine(50, 1, 50, self.h50_corr.GetMaximum())
		lin1.SetLineColor(kViolet)
		lin1.SetLineWidth(2)
		lin1.Draw()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
                gPad.Update()
		c50.SaveAs("./plots/corr_comp_50GeV_2017.png")

		ofile.WriteObject(c50, "50GeV")
		c50.Close()

		c75 = TCanvas()
		c75.cd()
#                gPad.SetLogy()
		self.h75_corr.SetTitle(name+" 75 GeV")
		self.h75_corr.Draw("hist")
		self.h75_uncorr.Draw("same hist")
                l1 = TLegend(.6, .75, .9, .9)
                l1.AddEntry(self.h75_corr, "Corrections Applied")
                l1.AddEntry(self.h75_uncorr, "No Corrections Applied")
                l1.Draw()
		lin1 = TLine(75, 1, 75, self.h75_corr.GetMaximum())
		lin1.SetLineColor(kViolet)
		lin1.SetLineWidth(2)
		lin1.Draw()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
                gPad.Update()
		c75.SaveAs("./plots/corr_comp_75GeV_2017.png")

		ofile.WriteObject(c75, "75GeV")
		c75.Close()
		
		c100 = TCanvas()
		c100.cd()
#                gPad.SetLogy()
		self.h100_corr.SetTitle(name+" 100 GeV")
		self.h100_corr.Draw("hist")
		self.h100_uncorr.Draw("same hist")
                l1 = TLegend(.6, .75, .9, .9)
                l1.AddEntry(self.h100_corr, "Corrections Applied")
                l1.AddEntry(self.h100_uncorr, "No Corrections Applied")
                l1.Draw()
		lin1 = TLine(100, 1, 100, self.h100_corr.GetMaximum())
		lin1.SetLineColor(kViolet)
		lin1.SetLineWidth(2)
		lin1.Draw()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
                gPad.Update()
		c100.SaveAs("./plots/corr_comp_100GeV_2017.png")

		ofile.WriteObject(c100, "100GeV")
		c100.Close()

		c125 = TCanvas()
		c125.cd()
#                gPad.SetLogy()
		self.h125_corr.SetTitle(name+" 125 GeV")
		self.h125_corr.Draw("hist")
		self.h125_uncorr.Draw("same hist")
                l1 = TLegend(.6, .75, .9, .9)
                l1.AddEntry(self.h125_corr, "Corrections Applied")
                l1.AddEntry(self.h125_uncorr, "No Corrections Applied")
                l1.Draw()
		lin1 = TLine(125, 1, 125, self.h125_corr.GetMaximum())
		lin1.SetLineColor(kViolet)
		lin1.SetLineWidth(2)
		lin1.Draw()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
                gPad.Update()
		c125.SaveAs("./plots/corr_comp_125GeV_2017.png")

		ofile.WriteObject(c125, "125GeV")
		c125.Close()
		
		c150 = TCanvas()
		c150.cd()
#                gPad.SetLogy()
		self.h150_corr.SetTitle(name+" 150 GeV")
		self.h150_corr.Draw("hist")
		self.h150_uncorr.Draw("same hist")
                l1 = TLegend(.6, .75, .9, .9)
                l1.AddEntry(self.h150_corr, "Corrections Applied")
                l1.AddEntry(self.h150_uncorr, "No Corrections Applied")
                l1.Draw()
		lin1 = TLine(150, 1, 150, self.h150_corr.GetMaximum())
		lin1.SetLineColor(kViolet)
		lin1.SetLineWidth(2)
		lin1.Draw()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
                gPad.Update()
		c150.SaveAs("./plots/corr_comp_150GeV_2017.png")

		ofile.WriteObject(c150, "150GeV")
		c150.Close()

		c10 = TCanvas()
		c10.cd()
#                gPad.SetLogy()
		self.p10_corr.SetTitle("Passing "+name+" 10 GeV")
		self.p10_corr.Draw("hist")
		self.p10_uncorr.Draw("same hist")
                l1 = TLegend(.6, .75, .9, .9)
                l1.AddEntry(self.p10_corr, "Corrections Applied")
                l1.AddEntry(self.p10_uncorr, "No Corrections Applied")
                l1.Draw()
		lin1 = TLine(10, 1, 10, self.p10_corr.GetMaximum())
		lin1.SetLineColor(kViolet)
		lin1.SetLineWidth(2)
		lin1.Draw()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
                gPad.Update()
		c10.SaveAs("./plots/corr_comp_pass_10GeV_2017.png")

		ofile.WriteObject(c10, "10GeV_pass")
		c10.Close()
		
		c20 = TCanvas()
		c20.cd()
#                gPad.SetLogy()
		self.p20_corr.SetTitle("Passing "+name+" 20 GeV")
		self.p20_corr.Draw("hist")
		self.p20_uncorr.Draw("same hist")
                l1 = TLegend(.6, .75, .9, .9)
                l1.AddEntry(self.p20_corr, "Corrections Applied")
                l1.AddEntry(self.p20_uncorr, "No Corrections Applied")
                l1.Draw()
		lin1 = TLine(20, 1, 20, self.p20_corr.GetMaximum())
		lin1.SetLineColor(kViolet)
		lin1.SetLineWidth(2)
		lin1.Draw()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
                gPad.Update()
		c20.SaveAs("./plots/corr_comp_pass_20GeV_2017.png")

		ofile.WriteObject(c20, "20GeV_pass")
		c20.Close()

		c25 = TCanvas()
		c25.cd()
#                gPad.SetLogy()
		self.p25_corr.SetTitle("Passing "+name+" 25 GeV")
		self.p25_corr.Draw("hist")
		self.p25_uncorr.Draw("same hist")
                l1 = TLegend(.6, .75, .9, .9)
                l1.AddEntry(self.p25_corr, "Corrections Applied")
                l1.AddEntry(self.p25_uncorr, "No Corrections Applied")
                l1.Draw()
		lin1 = TLine(25, 1, 25, self.p25_corr.GetMaximum())
		lin1.SetLineColor(kViolet)
		lin1.SetLineWidth(2)
		lin1.Draw()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
                gPad.Update()
		c25.SaveAs("./plots/corr_comp_pass_25GeV_2017.png")

		ofile.WriteObject(c25, "25GeV_pass")
		c25.Close()

		c50 = TCanvas()
		c50.cd()
#                gPad.SetLogy()
		self.p50_corr.SetTitle("Passing "+name+" 50 GeV")
		self.p50_corr.Draw("hist")
		self.p50_uncorr.Draw("same hist")
                l1 = TLegend(.6, .75, .9, .9)
                l1.AddEntry(self.p50_corr, "Corrections Applied")
                l1.AddEntry(self.p50_uncorr, "No Corrections Applied")
                l1.Draw()
		lin1 = TLine(50, 1, 50, self.p50_corr.GetMaximum())
		lin1.SetLineColor(kViolet)
		lin1.SetLineWidth(2)
		lin1.Draw()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
                gPad.Update()
		c50.SaveAs("./plots/corr_comp_pass_50GeV_2017.png")

		ofile.WriteObject(c50, "50GeV_pass")
		c50.Close()

		c75 = TCanvas()
		c75.cd()
#                gPad.SetLogy()
		self.p75_corr.SetTitle("Passing "+name+" 75 GeV")
		self.p75_corr.Draw("hist")
		self.p75_uncorr.Draw("same hist")
                l1 = TLegend(.6, .75, .9, .9)
                l1.AddEntry(self.p75_corr, "Corrections Applied")
                l1.AddEntry(self.p75_uncorr, "No Corrections Applied")
                l1.Draw()
		lin1 = TLine(75, 1, 75, self.p75_corr.GetMaximum())
		lin1.SetLineColor(kViolet)
		lin1.SetLineWidth(2)
		lin1.Draw()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
                gPad.Update()
		c75.SaveAs("./plots/corr_comp_pass_75GeV_2017.png")

		ofile.WriteObject(c75, "75GeV_pass")
		c75.Close()
		
		c100 = TCanvas()
		c100.cd()
#                gPad.SetLogy()
		self.p100_corr.SetTitle("Passing "+name+" 100 GeV")
		self.p100_corr.Draw("hist")
		self.p100_uncorr.Draw("same hist")
                l1 = TLegend(.6, .75, .9, .9)
                l1.AddEntry(self.p100_corr, "Corrections Applied")
                l1.AddEntry(self.p100_uncorr, "No Corrections Applied")
                l1.Draw()
		lin1 = TLine(100, 1, 100, self.p100_corr.GetMaximum())
		lin1.SetLineColor(kViolet)
		lin1.SetLineWidth(2)
		lin1.Draw()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
                gPad.Update()
		c100.SaveAs("./plots/corr_comp_pass_100GeV_2017.png")

		ofile.WriteObject(c100, "100GeV_pass")
		c100.Close()

		c125 = TCanvas()
		c125.cd()
#                gPad.SetLogy()
		self.p125_corr.SetTitle("Passing "+name+" 125 GeV")
		self.p125_corr.Draw("hist")
		self.p125_uncorr.Draw("same hist")
                l1 = TLegend(.6, .75, .9, .9)
                l1.AddEntry(self.p125_corr, "Corrections Applied")
                l1.AddEntry(self.p125_uncorr, "No Corrections Applied")
                l1.Draw()
		lin1 = TLine(125, 1, 125, self.p125_corr.GetMaximum())
		lin1.SetLineColor(kViolet)
		lin1.SetLineWidth(2)
		lin1.Draw()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
                gPad.Update()
		c125.SaveAs("./plots/corr_comp_pass_125GeV_2017.png")

		ofile.WriteObject(c125, "125GeV_pass")
		c125.Close()
		
		c150 = TCanvas()
		c150.cd()
#                gPad.SetLogy()
		self.p150_corr.SetTitle("Passing "+name+" 150 GeV")
		self.p150_corr.Draw("hist")
		self.p150_uncorr.Draw("same hist")
                l1 = TLegend(.6, .75, .9, .9)
                l1.AddEntry(self.p150_corr, "Corrections Applied")
                l1.AddEntry(self.p150_uncorr, "No Corrections Applied")
                l1.Draw()
		lin1 = TLine(150, 1, 150, self.p150_corr.GetMaximum())
		lin1.SetLineColor(kViolet)
		lin1.SetLineWidth(2)
		lin1.Draw()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
                gPad.Update()
		c150.SaveAs("./plots/corr_comp_pass_150GeV_2017.png")

		ofile.WriteObject(c150, "150GeV_pass")
		c150.Close()

		c10 = TCanvas()
		c10.cd()
#                gPad.SetLogy()
		self.f10_corr.SetTitle("Failing "+name+" 10 GeV")
		self.f10_corr.Draw("hist")
		self.f10_uncorr.Draw("same hist")
                l1 = TLegend(.6, .75, .9, .9)
                l1.AddEntry(self.f10_corr, "Corrections Applied")
                l1.AddEntry(self.f10_uncorr, "No Corrections Applied")
                l1.Draw()
		lin1 = TLine(10, 1, 10, self.f10_corr.GetMaximum())
		lin1.SetLineColor(kViolet)
		lin1.SetLineWidth(2)
		lin1.Draw()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
                gPad.Update()
		c10.SaveAs("./plots/corr_comp_fail_10GeV_2017.png")

		ofile.WriteObject(c10, "10GeV_fail")
		c10.Close()
		
		c20 = TCanvas()
		c20.cd()
#                gPad.SetLogy()
		self.f20_corr.SetTitle("Failing "+name+" 20 GeV")
		self.f20_corr.Draw("hist")
		self.f20_uncorr.Draw("same hist")
                l1 = TLegend(.6, .75, .9, .9)
                l1.AddEntry(self.f20_corr, "Corrections Applied")
                l1.AddEntry(self.f20_uncorr, "No Corrections Applied")
                l1.Draw()
		lin1 = TLine(20, 1, 20, self.f20_corr.GetMaximum())
		lin1.SetLineColor(kViolet)
		lin1.SetLineWidth(2)
		lin1.Draw()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
                gPad.Update()
		c20.SaveAs("./plots/corr_comp_fail_20GeV_2017.png")

		ofile.WriteObject(c20, "20GeV_fail")
		c20.Close()

		c25 = TCanvas()
		c25.cd()
#                gPad.SetLogy()
		self.f25_corr.SetTitle("Failing "+name+" 25 GeV")
		self.f25_corr.Draw("hist")
		self.f25_uncorr.Draw("same hist")
                l1 = TLegend(.6, .75, .9, .9)
                l1.AddEntry(self.f25_corr, "Corrections Applied")
                l1.AddEntry(self.f25_uncorr, "No Corrections Applied")
                l1.Draw()
		lin1 = TLine(25, 1, 25, self.f25_corr.GetMaximum())
		lin1.SetLineColor(kViolet)
		lin1.SetLineWidth(2)
		lin1.Draw()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
                gPad.Update()
		c25.SaveAs("./plots/corr_comp_fail_25GeV_2017.png")

		ofile.WriteObject(c25, "25GeV_fail")
		c25.Close()

		c50 = TCanvas()
		c50.cd()
#                gPad.SetLogy()
		self.f50_corr.SetTitle("Failing "+name+" 50 GeV")
		self.f50_corr.Draw("hist")
		self.f50_uncorr.Draw("same hist")
                l1 = TLegend(.6, .75, .9, .9)
                l1.AddEntry(self.f50_corr, "Corrections Applied")
                l1.AddEntry(self.f50_uncorr, "No Corrections Applied")
                l1.Draw()
		lin1 = TLine(50, 1, 50, self.f50_corr.GetMaximum())
		lin1.SetLineColor(kViolet)
		lin1.SetLineWidth(2)
		lin1.Draw()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
                gPad.Update()
		c50.SaveAs("./plots/corr_comp_fail_50GeV_2017.png")

		ofile.WriteObject(c50, "50GeV_fail")
		c50.Close()

		c75 = TCanvas()
		c75.cd()
#                gPad.SetLogy()
		self.f75_corr.SetTitle("Failing "+name+" 75 GeV")
		self.f75_corr.Draw("hist")
		self.f75_uncorr.Draw("same hist")
                l1 = TLegend(.6, .75, .9, .9)
                l1.AddEntry(self.f75_corr, "Corrections Applied")
                l1.AddEntry(self.f75_uncorr, "No Corrections Applied")
                l1.Draw()
		lin1 = TLine(75, 1, 75, self.f75_corr.GetMaximum())
		lin1.SetLineColor(kViolet)
		lin1.SetLineWidth(2)
		lin1.Draw()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
                gPad.Update()
		c75.SaveAs("./plots/corr_comp_fail_75GeV_2017.png")

		ofile.WriteObject(c75, "75GeV_fail")
		c75.Close()
		
		c100 = TCanvas()
		c100.cd()
#                gPad.SetLogy()
		self.f100_corr.SetTitle("Failing "+name+" 100 GeV")
		self.f100_corr.Draw("hist")
		self.f100_uncorr.Draw("same hist")
                l1 = TLegend(.6, .75, .9, .9)
                l1.AddEntry(self.f100_corr, "Corrections Applied")
                l1.AddEntry(self.f100_uncorr, "No Corrections Applied")
                l1.Draw()
		lin1 = TLine(100, 1, 100, self.f100_corr.GetMaximum())
		lin1.SetLineColor(kViolet)
		lin1.SetLineWidth(2)
		lin1.Draw()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
                gPad.Update()
		c100.SaveAs("./plots/corr_comp_fail_100GeV_2017.png")

		ofile.WriteObject(c100, "100GeV_fail")
		c100.Close()

		c125 = TCanvas()
		c125.cd()
#                gPad.SetLogy()
		self.f125_corr.SetTitle("Failing "+name+" 125 GeV")
		self.f125_corr.Draw("hist")
		self.f125_uncorr.Draw("same hist")
                l1 = TLegend(.6, .75, .9, .9)
                l1.AddEntry(self.f125_corr, "Corrections Applied")
                l1.AddEntry(self.f125_uncorr, "No Corrections Applied")
                l1.Draw()
		lin1 = TLine(125, 1, 125, self.f125_corr.GetMaximum())
		lin1.SetLineColor(kViolet)
		lin1.SetLineWidth(2)
		lin1.Draw()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
                gPad.Update()
		c125.SaveAs("./plots/corr_comp_fail_125GeV_2017.png")

		ofile.WriteObject(c125, "125GeV_fail")
		c125.Close()
		
		c150 = TCanvas()
		c150.cd()
#                gPad.SetLogy()
		self.f150_corr.SetTitle("Failing "+name+" 150 GeV")
		self.f150_corr.Draw("hist")
		self.f150_uncorr.Draw("same hist")
                l1 = TLegend(.6, .75, .9, .9)
                l1.AddEntry(self.f150_corr, "Corrections Applied")
                l1.AddEntry(self.f150_uncorr, "No Corrections Applied")
                l1.Draw()
		lin1 = TLine(150, 1, 150, self.f150_corr.GetMaximum())
		lin1.SetLineColor(kViolet)
		lin1.SetLineWidth(2)
		lin1.Draw()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
                gPad.Update()
		c150.SaveAs("./plots/corr_comp_fail_150GeV_2017.png")

		ofile.WriteObject(c150, "150GeV_fail")
		c150.Close()

		#Summary Plots Begin

		self.corr_sig = TH1F("corr_sig", "2017 Summary Plot Correction Comparison", 100, 0, 200)
		self.uncorr_sig = TH1F("uncorr_sig", "2017 Summary Plot (un)Correction Comparison", 100, 0, 200)
		self.corr_sig_pass = TH1F("corr_sig_pass", "2017 Passing Summary Plot Correction Comparison", 100, 0, 200)
		self.uncorr_sig_pass = TH1F("uncorr_sig_pass", "2017 Passing Summary Plot (un)Correction Comparison", 100, 0, 200)
		self.corr_sig_fail = TH1F("corr_sig_fail", "2017 Failing Summary Plot Correction Comparison", 100, 0, 200)
		self.uncorr_sig_fail = TH1F("uncorr_sig_fail", "2017 Failing Summary Plot (un)Correction Comparison", 100, 0, 200)


		self.uncorr_sig.SetLineColor(kRed)
		self.uncorr_sig_pass.SetLineColor(kRed)
		self.uncorr_sig_fail.SetLineColor(kRed)

		SigAdd(self.corr_sig, self.h10_corr, 4, 7)
#		SigAdd(self.corr_sig, self.h20_corr, 8, 12)
		SigAdd(self.corr_sig, self.h25_corr, 11, 15)
		SigAdd(self.corr_sig, self.h50_corr, 22, 28)
		SigAdd(self.corr_sig, self.h75_corr, 35, 42)
		SigAdd(self.corr_sig, self.h100_corr, 46, 55)
		SigAdd(self.corr_sig, self.h125_corr, 58, 66)
		SigAdd(self.corr_sig, self.h150_corr, 70, 80)

		SigAdd(self.uncorr_sig, self.h10_uncorr, 4, 7)
#		SigAdd(self.uncorr_sig, self.h20_uncorr, 8, 12)
		SigAdd(self.uncorr_sig, self.h25_uncorr, 11, 15)
		SigAdd(self.uncorr_sig, self.h50_uncorr, 22, 28)
		SigAdd(self.uncorr_sig, self.h75_uncorr, 35, 42)
		SigAdd(self.uncorr_sig, self.h100_uncorr, 46, 55)
		SigAdd(self.uncorr_sig, self.h125_uncorr, 58, 66)
		SigAdd(self.uncorr_sig, self.h150_uncorr, 70, 80)
		
		SigAdd(self.corr_sig_pass, self.p10_corr, 4, 7)
#		SigAdd(self.corr_sig_pass, self.p20_corr, 8, 12)
		SigAdd(self.corr_sig_pass, self.p25_corr, 11, 15)
		SigAdd(self.corr_sig_pass, self.p50_corr, 22, 28)
		SigAdd(self.corr_sig_pass, self.p75_corr, 35, 42)
		SigAdd(self.corr_sig_pass, self.p100_corr, 46, 55)
		SigAdd(self.corr_sig_pass, self.p125_corr, 58, 66)
		SigAdd(self.corr_sig_pass, self.p150_corr, 70, 80)

		SigAdd(self.uncorr_sig_pass, self.p10_uncorr, 4, 7)
#		SigAdd(self.uncorr_sig_pass, self.p20_uncorr, 8, 12)
		SigAdd(self.uncorr_sig_pass, self.p25_uncorr, 11, 15)
		SigAdd(self.uncorr_sig_pass, self.p50_uncorr, 22, 28)
		SigAdd(self.uncorr_sig_pass, self.p75_uncorr, 35, 42)
		SigAdd(self.uncorr_sig_pass, self.p100_uncorr, 46, 55)
		SigAdd(self.uncorr_sig_pass, self.p125_uncorr, 58, 66)
		SigAdd(self.uncorr_sig_pass, self.p150_uncorr, 70, 80)
		
		SigAdd(self.corr_sig_fail, self.f10_corr, 4, 7)
#		SigAdd(self.corr_sig_fail, self.f20_corr, 8, 12)
		SigAdd(self.corr_sig_fail, self.f25_corr, 11, 15)
		SigAdd(self.corr_sig_fail, self.f50_corr, 22, 28)
		SigAdd(self.corr_sig_fail, self.f75_corr, 35, 42)
		SigAdd(self.corr_sig_fail, self.f100_corr, 46, 55)
		SigAdd(self.corr_sig_fail, self.f125_corr, 58, 66)
		SigAdd(self.corr_sig_fail, self.f150_corr, 70, 80)

		SigAdd(self.uncorr_sig_fail, self.f10_uncorr, 4, 7)
#		SigAdd(self.uncorr_sig_fail, self.f20_uncorr, 8, 12)
		SigAdd(self.uncorr_sig_fail, self.f25_uncorr, 11, 15)
		SigAdd(self.uncorr_sig_fail, self.f50_uncorr, 22, 28)
		SigAdd(self.uncorr_sig_fail, self.f75_uncorr, 35, 42)
		SigAdd(self.uncorr_sig_fail, self.f100_uncorr, 46, 55)
		SigAdd(self.uncorr_sig_fail, self.f125_uncorr, 58, 66)
		SigAdd(self.uncorr_sig_fail, self.f150_uncorr, 70, 80)


#		old_adding = '''
		self.h10_corr.Add(self.h25_corr)
		self.h10_corr.Add(self.h50_corr)
		self.h10_corr.Add(self.h75_corr)
		self.h10_corr.Add(self.h125_corr)
		
		self.h10_uncorr.Add(self.h25_uncorr)
		self.h10_uncorr.Add(self.h50_uncorr)
		self.h10_uncorr.Add(self.h75_uncorr)
		self.h10_uncorr.Add(self.h125_uncorr)
		
		self.p10_corr.Add(self.p25_corr)
		self.p10_corr.Add(self.p50_corr)
		self.p10_corr.Add(self.p75_corr)
		self.p10_corr.Add(self.p125_corr)
		
		self.p10_uncorr.Add(self.p25_uncorr)
		self.p10_uncorr.Add(self.p50_uncorr)
		self.p10_uncorr.Add(self.p75_uncorr)
		self.p10_uncorr.Add(self.p125_uncorr)
		
		self.f10_corr.Add(self.f25_corr)
		self.f10_corr.Add(self.f50_corr)
		self.f10_corr.Add(self.f75_corr)
		self.f10_corr.Add(self.f125_corr)
		
		self.f10_uncorr.Add(self.f25_uncorr)
		self.f10_uncorr.Add(self.f50_uncorr)
		self.f10_uncorr.Add(self.f75_uncorr)
		self.f10_uncorr.Add(self.f125_uncorr)
#		'''
		c_sum = TCanvas()
		c_sum.cd()
                gPad.SetLogy()
		self.h10_corr.SetTitle("2017 Summary Plot Correction Comparison")
		self.h10_corr.Draw("hist")
		self.h10_uncorr.Draw("same hist")
                l1 = TLegend(.6, .75, .9, .9)
                l1.AddEntry(self.h10_corr, "Corrections Applied")
                l1.AddEntry(self.h10_uncorr, "No Corrections Applied")
                l1.Draw()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
                gPad.Update()
		c_sum.SaveAs("./plots/corr_comp_summary_2017_addition.png")

		ofile.WriteObject(c_sum, "corr_summary_addition")
		c_sum.Close()

		c_sum_pass = TCanvas()
		c_sum_pass.cd()
                gPad.SetLogy()
		self.p10_corr.SetTitle("2017 Passing Summary Plot Correction Comparison")
		self.p10_corr.Draw("hist")
		self.p10_uncorr.Draw("same hist")
                l1 = TLegend(.6, .75, .9, .9)
                l1.AddEntry(self.p10_corr, "Corrections Applied")
                l1.AddEntry(self.p10_uncorr, "No Corrections Applied")
                l1.Draw()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
                gPad.Update()
		c_sum_pass.SaveAs("./plots/corr_comp_pass_summary_2017_addition.png")

		ofile.WriteObject(c_sum_pass, "corr_pass_summary_addition")
		c_sum_pass.Close()

		c_sum_fail = TCanvas()
		c_sum_fail.cd()
                gPad.SetLogy()
		self.f10_corr.SetTitle("2017 Failing Summary Plot Correction Comparison")
		self.f10_corr.Draw("hist")
		self.f10_uncorr.Draw("same hist")
                l1 = TLegend(.6, .75, .9, .9)
                l1.AddEntry(self.f10_corr, "Corrections Applied")
                l1.AddEntry(self.f10_uncorr, "No Corrections Applied")
                l1.Draw()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
                gPad.Update()
		c_sum_fail.SaveAs("./plots/corr_comp_fail_summary_2017_addition.png")

		ofile.WriteObject(c_sum_fail, "corr_fail_summary_addition")
		c_sum_fail.Close()

		
		FindAndSetMax(self.corr_sig, self.uncorr_sig)
		FindAndSetMax(self.corr_sig_pass, self.uncorr_sig_pass)
		FindAndSetMax(self.corr_sig_fail, self.uncorr_sig_fail)
	
		c_sum = TCanvas()
		c_sum.cd()
                gPad.SetLogy()
		self.corr_sig.SetTitle("2017 Summary Plot Correction Comparison")
		self.corr_sig.Draw("hist")
		self.uncorr_sig.Draw("same hist")
                l1 = TLegend(.6, .75, .9, .9)
                l1.AddEntry(self.corr_sig, "Corrections Applied")
                l1.AddEntry(self.uncorr_sig, "No Corrections Applied")
                l1.Draw()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
                gPad.Update()
		c_sum.SaveAs("./plots/corr_comp_summary_2017.png")

		ofile.WriteObject(c_sum, "corr_summary")
		c_sum.Close()

		c_sum_pass = TCanvas()
		c_sum_pass.cd()
                gPad.SetLogy()
		self.corr_sig_pass.SetTitle("2017 Passing Summary Plot Correction Comparison")
		self.corr_sig_pass.Draw("hist")
		self.uncorr_sig_pass.Draw("same hist")
                l1 = TLegend(.6, .75, .9, .9)
                l1.AddEntry(self.corr_sig_pass, "Corrections Applied")
                l1.AddEntry(self.uncorr_sig_pass, "No Corrections Applied")
                l1.Draw()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
                gPad.Update()
		c_sum_pass.SaveAs("./plots/corr_comp_pass_summary_2017.png")

		ofile.WriteObject(c_sum_pass, "corr_pass_summary")
		c_sum_pass.Close()

		c_sum_fail = TCanvas()
		c_sum_fail.cd()
                gPad.SetLogy()
		self.corr_sig_fail.SetTitle("2017 Failing Summary Plot Correction Comparison")
		self.corr_sig_fail.Draw("hist")
		self.uncorr_sig_fail.Draw("same hist")
                l1 = TLegend(.6, .75, .9, .9)
                l1.AddEntry(self.corr_sig_fail, "Corrections Applied")
                l1.AddEntry(self.uncorr_sig_fail, "No Corrections Applied")
                l1.Draw()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
                gPad.Update()
		c_sum_fail.SaveAs("./plots/corr_comp_fail_summary_2017.png")

		ofile.WriteObject(c_sum_fail, "corr_fail_summary")
		c_sum_fail.Close()


		old_version = '''
		c_sum = TCanvas()
		c_sum.cd()
                gPad.SetLogy()
		self.h10_corr.SetTitle("2017 Summary Plot Correction Comparison")
		self.h10_corr.Draw("hist")
		self.h20_corr.Draw("same hist")
		self.h25_corr.Draw("same hist")
		self.h50_corr.Draw("same hist")
		self.h75_corr.Draw("same hist")
		self.h100_corr.Draw("same hist")
		self.h125_corr.Draw("same hist")
		self.h150_corr.Draw("same hist")
		self.h10_uncorr.Draw("same hist")
		self.h20_uncorr.Draw("same hist")
		self.h25_uncorr.Draw("same hist")
		self.h50_uncorr.Draw("same hist")
		self.h75_uncorr.Draw("same hist")
		self.h100_uncorr.Draw("same hist")
		self.h125_uncorr.Draw("same hist")
		self.h150_uncorr.Draw("same hist")
                l1 = TLegend(.6, .75, .9, .9)
                l1.AddEntry(self.h150_corr, "Corrections Applied")
                l1.AddEntry(self.h150_uncorr, "No Corrections Applied")
                l1.Draw()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
                gPad.Update()
		c_sum.SaveAs("./plots/corr_comp_summary_2017.png")

		ofile.WriteObject(c_sum, "corr_summary")
		c_sum.Close()

		c_sum_pass = TCanvas()
		c_sum_pass.cd()
                gPad.SetLogy()
		self.p10_corr.SetTitle("2017 Passing Summary Plot Correction Comparison")
		self.p10_corr.Draw("hist")
		self.p20_corr.Draw("same hist")
		self.p25_corr.Draw("same hist")
		self.p50_corr.Draw("same hist")
		self.p75_corr.Draw("same hist")
		self.p100_corr.Draw("same hist")
		self.p125_corr.Draw("same hist")
		self.p150_corr.Draw("same hist")
		self.p10_uncorr.Draw("same hist")
		self.p20_uncorr.Draw("same hist")
		self.p25_uncorr.Draw("same hist")
		self.p50_uncorr.Draw("same hist")
		self.p75_uncorr.Draw("same hist")
		self.p100_uncorr.Draw("same hist")
		self.p125_uncorr.Draw("same hist")
		self.p150_uncorr.Draw("same hist")
                l1 = TLegend(.6, .75, .9, .9)
                l1.AddEntry(self.p150_corr, "Corrections Applied")
                l1.AddEntry(self.p150_uncorr, "No Corrections Applied")
                l1.Draw()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
                gPad.Update()
		c_sum_pass.SaveAs("./plots/corr_comp_pass_summary_2017.png")

		ofile.WriteObject(c_sum_pass, "corr_pass_summary")
		c_sum_pass.Close()

		c_sum_fail = TCanvas()
		c_sum_fail.cd()
                gPad.SetLogy()
		self.f10_corr.SetTitle("2017 Failing Summary Plot Correction Comparison")
		self.f10_corr.Draw("hist")
		self.f20_corr.Draw("same hist")
		self.f25_corr.Draw("same hist")
		self.f50_corr.Draw("same hist")
		self.f75_corr.Draw("same hist")
		self.f100_corr.Draw("same hist")
		self.f125_corr.Draw("same hist")
		self.f150_corr.Draw("same hist")
		self.f10_uncorr.Draw("same hist")
		self.f20_uncorr.Draw("same hist")
		self.f25_uncorr.Draw("same hist")
		self.f50_uncorr.Draw("same hist")
		self.f75_uncorr.Draw("same hist")
		self.f100_uncorr.Draw("same hist")
		self.f125_uncorr.Draw("same hist")
		self.f150_uncorr.Draw("same hist")
                l1 = TLegend(.6, .75, .9, .9)
                l1.AddEntry(self.f150_corr, "Corrections Applied")
                l1.AddEntry(self.f150_uncorr, "No Corrections Applied")
                l1.Draw()
		AddCMSLumi(ROOT.gPad, LUMI, cmsextra)
                gPad.Update()
		c_sum_fail.SaveAs("./plots/corr_comp_fail_summary_2017.png")

		ofile.WriteObject(c_sum_fail, "corr_fail_summary")
		c_sum_fail.Close()


		'''
